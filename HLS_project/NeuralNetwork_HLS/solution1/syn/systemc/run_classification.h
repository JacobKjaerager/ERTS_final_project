// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _run_classification_HH_
#define _run_classification_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "runLayer.h"
#include "relu.h"
#include "NeuralNetwork_mulbkb.h"
#include "run_classificatiodEe.h"

namespace ap_rtl {

struct run_classification : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<7> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<32> > input_r_q0;
    sc_out< sc_lv<14> > weights_s_address0;
    sc_out< sc_logic > weights_s_ce0;
    sc_in< sc_lv<8> > weights_s_q0;
    sc_out< sc_lv<8> > bias_s_address0;
    sc_out< sc_logic > bias_s_ce0;
    sc_in< sc_lv<8> > bias_s_q0;
    sc_out< sc_lv<8> > ap_return;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    run_classification(sc_module_name name);
    SC_HAS_PROCESS(run_classification);

    ~run_classification();

    sc_trace_file* mVcdFile;

    run_classificatiodEe* resArray1_U;
    run_classificatiodEe* resArray2_U;
    runLayer* grp_runLayer_fu_250;
    relu* grp_relu_fu_266;
    NeuralNetwork_mulbkb<1,2,32,8,32>* NeuralNetwork_mulbkb_x_U9;
    sc_signal< sc_lv<23> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > resArray1_q0;
    sc_signal< sc_lv<32> > reg_271;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<7> > indvarinc_fu_281_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<7> > indvarinc3_fu_298_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > tmp_1_i_fu_310_p1;
    sc_signal< sc_lv<32> > tmp_1_i_reg_444;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<7> > outNeurons_fu_321_p2;
    sc_signal< sc_lv<7> > outNeurons_reg_452;
    sc_signal< sc_lv<7> > resArray1_addr_2_reg_457;
    sc_signal< sc_lv<1> > exitcond3_fu_315_p2;
    sc_signal< sc_lv<13> > tmp_17_i_i_cast_fu_327_p1;
    sc_signal< sc_lv<13> > tmp_17_i_i_cast_reg_462;
    sc_signal< sc_lv<7> > inNeurons_fu_342_p2;
    sc_signal< sc_lv<7> > inNeurons_reg_470;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<13> > next_mul_fu_348_p2;
    sc_signal< sc_lv<13> > next_mul_reg_475;
    sc_signal< sc_lv<1> > exitcond_fu_336_p2;
    sc_signal< sc_lv<8> > weights_load_reg_495;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > input_r_load_reg_500;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > grp_fu_367_p2;
    sc_signal< sc_lv<32> > tmp_9_i_reg_510;
    sc_signal< sc_lv<32> > tmp_12_i_fu_382_p2;
    sc_signal< sc_lv<32> > tmp_12_i_reg_515;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<8> > max_index_cast1_fu_388_p1;
    sc_signal< sc_lv<8> > max_index_cast1_reg_525;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_lv<1> > exitcond_i_fu_392_p2;
    sc_signal< sc_lv<4> > i_fu_403_p2;
    sc_signal< sc_lv<4> > i_reg_538;
    sc_signal< sc_lv<32> > max_1_reg_543;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<32> > max_2_i_max1_i_fu_414_p3;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<8> > max_index_2_i_max_in_fu_421_p3;
    sc_signal< sc_lv<7> > resArray1_address0;
    sc_signal< sc_logic > resArray1_ce0;
    sc_signal< sc_logic > resArray1_we0;
    sc_signal< sc_lv<32> > resArray1_d0;
    sc_signal< sc_lv<7> > resArray2_address0;
    sc_signal< sc_logic > resArray2_ce0;
    sc_signal< sc_logic > resArray2_we0;
    sc_signal< sc_lv<32> > resArray2_d0;
    sc_signal< sc_lv<32> > resArray2_q0;
    sc_signal< sc_logic > grp_runLayer_fu_250_ap_start;
    sc_signal< sc_logic > grp_runLayer_fu_250_ap_done;
    sc_signal< sc_logic > grp_runLayer_fu_250_ap_idle;
    sc_signal< sc_logic > grp_runLayer_fu_250_ap_ready;
    sc_signal< sc_lv<4> > grp_runLayer_fu_250_layer;
    sc_signal< sc_lv<8> > grp_runLayer_fu_250_numOfOutNeurons;
    sc_signal< sc_lv<7> > grp_runLayer_fu_250_input_r_address0;
    sc_signal< sc_logic > grp_runLayer_fu_250_input_r_ce0;
    sc_signal< sc_lv<32> > grp_runLayer_fu_250_input_r_q0;
    sc_signal< sc_lv<7> > grp_runLayer_fu_250_output_r_address0;
    sc_signal< sc_logic > grp_runLayer_fu_250_output_r_ce0;
    sc_signal< sc_logic > grp_runLayer_fu_250_output_r_we0;
    sc_signal< sc_lv<32> > grp_runLayer_fu_250_output_r_d0;
    sc_signal< sc_lv<32> > grp_runLayer_fu_250_output_r_q0;
    sc_signal< sc_lv<14> > grp_runLayer_fu_250_weights_s_address0;
    sc_signal< sc_logic > grp_runLayer_fu_250_weights_s_ce0;
    sc_signal< sc_lv<8> > grp_runLayer_fu_250_bias_s_address0;
    sc_signal< sc_logic > grp_runLayer_fu_250_bias_s_ce0;
    sc_signal< sc_logic > grp_relu_fu_266_ap_start;
    sc_signal< sc_logic > grp_relu_fu_266_ap_done;
    sc_signal< sc_logic > grp_relu_fu_266_ap_idle;
    sc_signal< sc_logic > grp_relu_fu_266_ap_ready;
    sc_signal< sc_lv<7> > grp_relu_fu_266_data_address0;
    sc_signal< sc_logic > grp_relu_fu_266_data_ce0;
    sc_signal< sc_logic > grp_relu_fu_266_data_we0;
    sc_signal< sc_lv<32> > grp_relu_fu_266_data_d0;
    sc_signal< sc_lv<32> > grp_relu_fu_266_data_q0;
    sc_signal< sc_lv<7> > invdar_reg_162;
    sc_signal< sc_lv<1> > tmp_fu_287_p2;
    sc_signal< sc_lv<7> > invdar2_reg_173;
    sc_signal< sc_lv<1> > tmp_8_fu_304_p2;
    sc_signal< sc_lv<7> > outNeurons_i_reg_184;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<7> > inNeurons_i_reg_195;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<13> > phi_mul_reg_206;
    sc_signal< sc_lv<32> > max1_i_reg_217;
    sc_signal< sc_lv<8> > max_index_i_reg_227;
    sc_signal< sc_lv<4> > max_index_reg_239;
    sc_signal< sc_logic > ap_reg_grp_runLayer_fu_250_ap_start;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_logic > ap_reg_grp_relu_fu_266_ap_start;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<32> > invdar_cast_fu_276_p1;
    sc_signal< sc_lv<32> > invdar2_cast_fu_293_p1;
    sc_signal< sc_lv<32> > tmp_19_i_i_cast_fu_359_p1;
    sc_signal< sc_lv<32> > tmp_4_i_fu_331_p1;
    sc_signal< sc_lv<32> > tmp_1_i1_fu_398_p1;
    sc_signal< sc_lv<32> > tmp_i_7_fu_372_p2;
    sc_signal< sc_lv<13> > tmp_19_i_i_fu_354_p2;
    sc_signal< sc_lv<32> > tmp_11_i_fu_378_p1;
    sc_signal< sc_lv<1> > tmp_2_i2_fu_409_p2;
    sc_signal< sc_lv<8> > ap_return_preg;
    sc_signal< sc_lv<23> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<23> ap_ST_fsm_state1;
    static const sc_lv<23> ap_ST_fsm_state2;
    static const sc_lv<23> ap_ST_fsm_state3;
    static const sc_lv<23> ap_ST_fsm_state4;
    static const sc_lv<23> ap_ST_fsm_state5;
    static const sc_lv<23> ap_ST_fsm_state6;
    static const sc_lv<23> ap_ST_fsm_state7;
    static const sc_lv<23> ap_ST_fsm_state8;
    static const sc_lv<23> ap_ST_fsm_state9;
    static const sc_lv<23> ap_ST_fsm_state10;
    static const sc_lv<23> ap_ST_fsm_state11;
    static const sc_lv<23> ap_ST_fsm_state12;
    static const sc_lv<23> ap_ST_fsm_state13;
    static const sc_lv<23> ap_ST_fsm_state14;
    static const sc_lv<23> ap_ST_fsm_state15;
    static const sc_lv<23> ap_ST_fsm_state16;
    static const sc_lv<23> ap_ST_fsm_state17;
    static const sc_lv<23> ap_ST_fsm_state18;
    static const sc_lv<23> ap_ST_fsm_state19;
    static const sc_lv<23> ap_ST_fsm_state20;
    static const sc_lv<23> ap_ST_fsm_state21;
    static const sc_lv<23> ap_ST_fsm_state22;
    static const sc_lv<23> ap_ST_fsm_state23;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<8> ap_const_lv8_46;
    static const sc_lv<8> ap_const_lv8_A;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<7> ap_const_lv7_45;
    static const sc_lv<7> ap_const_lv7_46;
    static const sc_lv<7> ap_const_lv7_50;
    static const sc_lv<13> ap_const_lv13_46;
    static const sc_lv<4> ap_const_lv4_A;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_bias_s_address0();
    void thread_bias_s_ce0();
    void thread_exitcond3_fu_315_p2();
    void thread_exitcond_fu_336_p2();
    void thread_exitcond_i_fu_392_p2();
    void thread_grp_relu_fu_266_ap_start();
    void thread_grp_relu_fu_266_data_q0();
    void thread_grp_runLayer_fu_250_ap_start();
    void thread_grp_runLayer_fu_250_input_r_q0();
    void thread_grp_runLayer_fu_250_layer();
    void thread_grp_runLayer_fu_250_numOfOutNeurons();
    void thread_grp_runLayer_fu_250_output_r_q0();
    void thread_i_fu_403_p2();
    void thread_inNeurons_fu_342_p2();
    void thread_indvarinc3_fu_298_p2();
    void thread_indvarinc_fu_281_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_invdar2_cast_fu_293_p1();
    void thread_invdar_cast_fu_276_p1();
    void thread_max_2_i_max1_i_fu_414_p3();
    void thread_max_index_2_i_max_in_fu_421_p3();
    void thread_max_index_cast1_fu_388_p1();
    void thread_next_mul_fu_348_p2();
    void thread_outNeurons_fu_321_p2();
    void thread_resArray1_address0();
    void thread_resArray1_ce0();
    void thread_resArray1_d0();
    void thread_resArray1_we0();
    void thread_resArray2_address0();
    void thread_resArray2_ce0();
    void thread_resArray2_d0();
    void thread_resArray2_we0();
    void thread_tmp_11_i_fu_378_p1();
    void thread_tmp_12_i_fu_382_p2();
    void thread_tmp_17_i_i_cast_fu_327_p1();
    void thread_tmp_19_i_i_cast_fu_359_p1();
    void thread_tmp_19_i_i_fu_354_p2();
    void thread_tmp_1_i1_fu_398_p1();
    void thread_tmp_1_i_fu_310_p1();
    void thread_tmp_2_i2_fu_409_p2();
    void thread_tmp_4_i_fu_331_p1();
    void thread_tmp_8_fu_304_p2();
    void thread_tmp_fu_287_p2();
    void thread_tmp_i_7_fu_372_p2();
    void thread_weights_s_address0();
    void thread_weights_s_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

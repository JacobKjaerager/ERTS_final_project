// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _run_classification_HH_
#define _run_classification_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "NeuralNetwork_muldEe.h"
#include "NeuralNetwork_muleOg.h"
#include "run_classificatiobkb.h"

namespace ap_rtl {

struct run_classification : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<7> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<32> > input_r_q0;
    sc_out< sc_lv<14> > weights_s_address0;
    sc_out< sc_logic > weights_s_ce0;
    sc_in< sc_lv<8> > weights_s_q0;
    sc_out< sc_lv<8> > bias_s_address0;
    sc_out< sc_logic > bias_s_ce0;
    sc_in< sc_lv<8> > bias_s_q0;
    sc_out< sc_lv<8> > ap_return;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const0;


    // Module declarations
    run_classification(sc_module_name name);
    SC_HAS_PROCESS(run_classification);

    ~run_classification();

    sc_trace_file* mVcdFile;

    run_classificatiobkb* resArray1_U;
    run_classificatiobkb* resArray2_U;
    NeuralNetwork_muldEe<1,2,32,8,32>* NeuralNetwork_muldEe_U0;
    NeuralNetwork_muldEe<1,2,32,8,32>* NeuralNetwork_muldEe_U1;
    NeuralNetwork_muleOg<1,2,8,32,32>* NeuralNetwork_muleOg_U2;
    sc_signal< sc_lv<35> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<7> > i_0_i1_reg_317;
    sc_signal< sc_lv<7> > i_0_i_reg_361;
    sc_signal< sc_lv<32> > max1_i_reg_394;
    sc_signal< sc_lv<8> > max_index_i_reg_404;
    sc_signal< sc_lv<4> > max_index_reg_416;
    sc_signal< sc_lv<4> > ap_reg_pp2_iter1_max_index_reg_416;
    sc_signal< sc_logic > ap_CS_fsm_pp2_stage0;
    sc_signal< bool > ap_block_state36_pp2_stage0_iter0;
    sc_signal< bool > ap_block_state37_pp2_stage0_iter1;
    sc_signal< bool > ap_block_state38_pp2_stage0_iter2;
    sc_signal< bool > ap_block_pp2_stage0_flag00011001;
    sc_signal< sc_lv<8> > reg_428;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_logic > ap_CS_fsm_state29;
    sc_signal< sc_lv<32> > resArray1_q0;
    sc_signal< sc_lv<32> > reg_432;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > resArray1_q1;
    sc_signal< sc_logic > ap_CS_fsm_state31;
    sc_signal< sc_logic > ap_CS_fsm_state33;
    sc_signal< sc_logic > ap_CS_fsm_state35;
    sc_signal< sc_lv<32> > resArray2_q0;
    sc_signal< sc_lv<32> > reg_438;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<32> > resArray2_q1;
    sc_signal< sc_lv<7> > indvarinc_fu_448_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<7> > indvarinc3_fu_465_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > tmp_9_fu_477_p1;
    sc_signal< sc_lv<32> > tmp_9_reg_911;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > exitcond6_fu_482_p2;
    sc_signal< sc_lv<7> > outNeurons_fu_488_p2;
    sc_signal< sc_lv<7> > outNeurons_reg_920;
    sc_signal< sc_lv<7> > resArray1_addr_1_reg_925;
    sc_signal< sc_lv<13> > tmp_5_cast_fu_494_p1;
    sc_signal< sc_lv<13> > tmp_5_cast_reg_930;
    sc_signal< sc_lv<7> > inNeurons_fu_509_p2;
    sc_signal< sc_lv<7> > inNeurons_reg_938;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<13> > next_mul_fu_515_p2;
    sc_signal< sc_lv<13> > next_mul_reg_943;
    sc_signal< sc_lv<1> > exitcond5_fu_503_p2;
    sc_signal< sc_lv<32> > input_r_load_reg_963;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > grp_fu_535_p2;
    sc_signal< sc_lv<32> > tmp_10_reg_973;
    sc_signal< sc_lv<32> > tmp_13_fu_550_p2;
    sc_signal< sc_lv<32> > tmp_13_reg_978;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > exitcond_i1_fu_556_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_flag00011001;
    sc_signal< sc_lv<7> > i_fu_562_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<7> > resArray1_addr_2_reg_992;
    sc_signal< sc_lv<1> > exitcond4_fu_586_p2;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<7> > outNeurons_1_fu_592_p2;
    sc_signal< sc_lv<7> > outNeurons_1_reg_1005;
    sc_signal< sc_lv<7> > resArray2_addr_1_reg_1010;
    sc_signal< sc_lv<8> > tmp_23_cast_fu_602_p1;
    sc_signal< sc_lv<8> > tmp_23_cast_reg_1015;
    sc_signal< sc_lv<14> > tmp1_cast_fu_612_p1;
    sc_signal< sc_lv<14> > tmp1_cast_reg_1020;
    sc_signal< sc_lv<7> > inNeurons_1_fu_631_p2;
    sc_signal< sc_lv<7> > inNeurons_1_reg_1028;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<13> > next_mul2_fu_637_p2;
    sc_signal< sc_lv<13> > next_mul2_reg_1033;
    sc_signal< sc_lv<1> > exitcond3_fu_625_p2;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<32> > grp_fu_667_p2;
    sc_signal< sc_lv<32> > tmp_26_reg_1058;
    sc_signal< sc_lv<32> > tmp_23_fu_689_p2;
    sc_signal< sc_lv<32> > tmp_23_reg_1063;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_lv<1> > exitcond_i_fu_695_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< bool > ap_block_state23_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state24_pp1_stage0_iter1;
    sc_signal< bool > ap_block_pp1_stage0_flag00011001;
    sc_signal< sc_lv<7> > i_1_fu_701_p2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<7> > resArray2_addr_2_reg_1077;
    sc_signal< sc_lv<7> > outNeurons_2_fu_731_p2;
    sc_signal< sc_lv<7> > outNeurons_2_reg_1089;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< sc_lv<7> > resArray1_addr_5_reg_1094;
    sc_signal< sc_lv<1> > exitcond2_fu_725_p2;
    sc_signal< sc_lv<8> > tmp_38_cast_fu_741_p1;
    sc_signal< sc_lv<8> > tmp_38_cast_reg_1100;
    sc_signal< sc_lv<14> > tmp2_fu_745_p2;
    sc_signal< sc_lv<14> > tmp2_reg_1105;
    sc_signal< sc_lv<32> > tmp_29_fu_751_p1;
    sc_signal< sc_lv<32> > tmp_29_reg_1115;
    sc_signal< sc_logic > ap_CS_fsm_state27;
    sc_signal< sc_lv<4> > inNeurons_2_fu_761_p2;
    sc_signal< sc_lv<4> > inNeurons_2_reg_1123;
    sc_signal< sc_lv<14> > tmp_35_fu_797_p2;
    sc_signal< sc_lv<14> > tmp_35_reg_1128;
    sc_signal< sc_lv<1> > exitcond_fu_755_p2;
    sc_signal< sc_logic > ap_CS_fsm_state28;
    sc_signal< sc_logic > ap_CS_fsm_state30;
    sc_signal< sc_lv<32> > grp_fu_820_p2;
    sc_signal< sc_lv<32> > tmp_37_reg_1153;
    sc_signal< sc_lv<8> > tmp_32_fu_838_p2;
    sc_signal< sc_lv<8> > tmp_32_reg_1158;
    sc_signal< sc_lv<1> > exitcond_i9_fu_854_p2;
    sc_signal< sc_lv<1> > exitcond_i9_reg_1163;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter1_exitcond_i9_reg_1163;
    sc_signal< sc_lv<4> > i_2_fu_865_p2;
    sc_signal< sc_lv<4> > i_2_reg_1172;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter0;
    sc_signal< sc_lv<32> > max_1_reg_1177;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter1;
    sc_signal< sc_lv<32> > max_2_i_max1_i_fu_880_p3;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter2;
    sc_signal< sc_lv<8> > max_index_2_i_max_in_fu_887_p3;
    sc_signal< bool > ap_block_pp0_stage0_flag00011011;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state12;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp1_stage0_flag00011011;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state23;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_pp2_stage0_flag00011011;
    sc_signal< sc_logic > ap_condition_pp2_exit_iter0_state36;
    sc_signal< sc_lv<7> > resArray1_address0;
    sc_signal< sc_logic > resArray1_ce0;
    sc_signal< sc_logic > resArray1_we0;
    sc_signal< sc_lv<32> > resArray1_d0;
    sc_signal< sc_lv<7> > resArray1_address1;
    sc_signal< sc_logic > resArray1_ce1;
    sc_signal< sc_logic > resArray1_we1;
    sc_signal< sc_lv<32> > resArray1_d1;
    sc_signal< sc_lv<7> > resArray2_address0;
    sc_signal< sc_logic > resArray2_ce0;
    sc_signal< sc_logic > resArray2_we0;
    sc_signal< sc_lv<32> > resArray2_d0;
    sc_signal< sc_lv<7> > resArray2_address1;
    sc_signal< sc_logic > resArray2_ce1;
    sc_signal< sc_logic > resArray2_we1;
    sc_signal< sc_lv<7> > invdar_reg_262;
    sc_signal< sc_lv<1> > tmp_fu_454_p2;
    sc_signal< sc_lv<7> > invdar2_reg_273;
    sc_signal< sc_lv<1> > tmp_8_fu_471_p2;
    sc_signal< sc_lv<7> > outNeurons_0_i9_reg_284;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<7> > inNeurons_0_i1_reg_295;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<13> > phi_mul_reg_306;
    sc_signal< sc_lv<7> > outNeurons_0_i4_reg_328;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<7> > inNeurons_0_i6_reg_339;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<13> > phi_mul1_reg_350;
    sc_signal< sc_lv<7> > outNeurons_0_i_reg_372;
    sc_signal< sc_logic > ap_CS_fsm_state34;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_lv<4> > inNeurons_0_i_reg_383;
    sc_signal< sc_logic > ap_CS_fsm_state32;
    sc_signal< sc_lv<4> > max_index_phi_fu_420_p4;
    sc_signal< bool > ap_block_pp2_stage0_flag00000000;
    sc_signal< sc_lv<32> > invdar_cast_fu_443_p1;
    sc_signal< sc_lv<32> > invdar2_cast_fu_460_p1;
    sc_signal< sc_lv<32> > tmp_6_cast_fu_526_p1;
    sc_signal< sc_lv<32> > tmp_1_fu_498_p1;
    sc_signal< sc_lv<32> > tmp_4_fu_568_p1;
    sc_signal< bool > ap_block_pp0_stage0_flag00000000;
    sc_signal< sc_lv<32> > tmp_s_fu_581_p1;
    sc_signal< sc_lv<32> > tmp_25_cast_fu_648_p1;
    sc_signal< sc_lv<32> > tmp_15_fu_620_p1;
    sc_signal< sc_lv<32> > tmp_30_cast_fu_658_p1;
    sc_signal< sc_lv<32> > tmp_17_fu_707_p1;
    sc_signal< bool > ap_block_pp1_stage0_flag00000000;
    sc_signal< sc_lv<32> > tmp_20_fu_720_p1;
    sc_signal< sc_lv<32> > tmp_44_cast_fu_807_p1;
    sc_signal< sc_lv<32> > tmp_45_cast_fu_812_p1;
    sc_signal< sc_lv<32> > tmp_1_i_fu_860_p1;
    sc_signal< sc_lv<32> > tmp_11_fu_540_p2;
    sc_signal< sc_lv<1> > tmp_5_fu_573_p3;
    sc_signal< sc_lv<32> > tmp_38_fu_826_p2;
    sc_signal< sc_lv<32> > tmp_34_fu_847_p2;
    sc_signal< sc_lv<32> > tmp_27_fu_673_p2;
    sc_signal< sc_lv<1> > tmp_18_fu_712_p3;
    sc_signal< sc_lv<13> > tmp_6_fu_521_p2;
    sc_signal< sc_lv<32> > tmp_12_fu_546_p1;
    sc_signal< sc_lv<13> > tmp_23_cast9_fu_598_p1;
    sc_signal< sc_lv<13> > tmp1_fu_606_p2;
    sc_signal< sc_lv<14> > phi_mul1_cast_fu_616_p1;
    sc_signal< sc_lv<14> > tmp_24_fu_643_p2;
    sc_signal< sc_lv<8> > tmp_19_fu_653_p2;
    sc_signal< sc_lv<8> > tmp_21_fu_679_p2;
    sc_signal< sc_lv<32> > tmp_22_fu_685_p1;
    sc_signal< sc_lv<14> > tmp_38_cast6_fu_737_p1;
    sc_signal< sc_lv<5> > p_shl7_fu_775_p3;
    sc_signal< sc_lv<7> > p_shl7_cast_fu_783_p1;
    sc_signal< sc_lv<7> > p_shl_fu_767_p3;
    sc_signal< sc_lv<7> > neuronIndex_fu_787_p2;
    sc_signal< sc_lv<14> > tmp_42_cast_fu_793_p1;
    sc_signal< sc_lv<8> > tmp_30_fu_802_p2;
    sc_signal< sc_lv<8> > tmp_31_fu_832_p2;
    sc_signal< sc_lv<32> > tmp_33_fu_844_p1;
    sc_signal< sc_lv<1> > tmp_2_i_fu_875_p2;
    sc_signal< sc_lv<8> > max_index_cast3_fu_871_p1;
    sc_signal< sc_logic > ap_CS_fsm_state39;
    sc_signal< sc_lv<35> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< sc_logic > ap_idle_pp2;
    sc_signal< sc_logic > ap_enable_pp2;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<35> ap_ST_fsm_state1;
    static const sc_lv<35> ap_ST_fsm_state2;
    static const sc_lv<35> ap_ST_fsm_state3;
    static const sc_lv<35> ap_ST_fsm_state4;
    static const sc_lv<35> ap_ST_fsm_state5;
    static const sc_lv<35> ap_ST_fsm_state6;
    static const sc_lv<35> ap_ST_fsm_state7;
    static const sc_lv<35> ap_ST_fsm_state8;
    static const sc_lv<35> ap_ST_fsm_state9;
    static const sc_lv<35> ap_ST_fsm_state10;
    static const sc_lv<35> ap_ST_fsm_state11;
    static const sc_lv<35> ap_ST_fsm_pp0_stage0;
    static const sc_lv<35> ap_ST_fsm_state14;
    static const sc_lv<35> ap_ST_fsm_state15;
    static const sc_lv<35> ap_ST_fsm_state16;
    static const sc_lv<35> ap_ST_fsm_state17;
    static const sc_lv<35> ap_ST_fsm_state18;
    static const sc_lv<35> ap_ST_fsm_state19;
    static const sc_lv<35> ap_ST_fsm_state20;
    static const sc_lv<35> ap_ST_fsm_state21;
    static const sc_lv<35> ap_ST_fsm_state22;
    static const sc_lv<35> ap_ST_fsm_pp1_stage0;
    static const sc_lv<35> ap_ST_fsm_state25;
    static const sc_lv<35> ap_ST_fsm_state26;
    static const sc_lv<35> ap_ST_fsm_state27;
    static const sc_lv<35> ap_ST_fsm_state28;
    static const sc_lv<35> ap_ST_fsm_state29;
    static const sc_lv<35> ap_ST_fsm_state30;
    static const sc_lv<35> ap_ST_fsm_state31;
    static const sc_lv<35> ap_ST_fsm_state32;
    static const sc_lv<35> ap_ST_fsm_state33;
    static const sc_lv<35> ap_ST_fsm_state34;
    static const sc_lv<35> ap_ST_fsm_state35;
    static const sc_lv<35> ap_ST_fsm_pp2_stage0;
    static const sc_lv<35> ap_ST_fsm_state39;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_21;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<7> ap_const_lv7_45;
    static const sc_lv<7> ap_const_lv7_46;
    static const sc_lv<7> ap_const_lv7_50;
    static const sc_lv<13> ap_const_lv13_46;
    static const sc_lv<13> ap_const_lv13_15E0;
    static const sc_lv<8> ap_const_lv8_46;
    static const sc_lv<8> ap_const_lv8_3;
    static const sc_lv<14> ap_const_lv14_2904;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<8> ap_const_lv8_8C;
    static const sc_lv<32> ap_const_lv32_22;
    // Thread declarations
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp2_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state27();
    void thread_ap_CS_fsm_state28();
    void thread_ap_CS_fsm_state29();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state30();
    void thread_ap_CS_fsm_state31();
    void thread_ap_CS_fsm_state32();
    void thread_ap_CS_fsm_state33();
    void thread_ap_CS_fsm_state34();
    void thread_ap_CS_fsm_state35();
    void thread_ap_CS_fsm_state39();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0_flag00000000();
    void thread_ap_block_pp0_stage0_flag00011001();
    void thread_ap_block_pp0_stage0_flag00011011();
    void thread_ap_block_pp1_stage0_flag00000000();
    void thread_ap_block_pp1_stage0_flag00011001();
    void thread_ap_block_pp1_stage0_flag00011011();
    void thread_ap_block_pp2_stage0_flag00000000();
    void thread_ap_block_pp2_stage0_flag00011001();
    void thread_ap_block_pp2_stage0_flag00011011();
    void thread_ap_block_state12_pp0_stage0_iter0();
    void thread_ap_block_state13_pp0_stage0_iter1();
    void thread_ap_block_state23_pp1_stage0_iter0();
    void thread_ap_block_state24_pp1_stage0_iter1();
    void thread_ap_block_state36_pp2_stage0_iter0();
    void thread_ap_block_state37_pp2_stage0_iter1();
    void thread_ap_block_state38_pp2_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state12();
    void thread_ap_condition_pp1_exit_iter0_state23();
    void thread_ap_condition_pp2_exit_iter0_state36();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_enable_pp2();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_idle_pp2();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_bias_s_address0();
    void thread_bias_s_ce0();
    void thread_exitcond2_fu_725_p2();
    void thread_exitcond3_fu_625_p2();
    void thread_exitcond4_fu_586_p2();
    void thread_exitcond5_fu_503_p2();
    void thread_exitcond6_fu_482_p2();
    void thread_exitcond_fu_755_p2();
    void thread_exitcond_i1_fu_556_p2();
    void thread_exitcond_i9_fu_854_p2();
    void thread_exitcond_i_fu_695_p2();
    void thread_i_1_fu_701_p2();
    void thread_i_2_fu_865_p2();
    void thread_i_fu_562_p2();
    void thread_inNeurons_1_fu_631_p2();
    void thread_inNeurons_2_fu_761_p2();
    void thread_inNeurons_fu_509_p2();
    void thread_indvarinc3_fu_465_p2();
    void thread_indvarinc_fu_448_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_invdar2_cast_fu_460_p1();
    void thread_invdar_cast_fu_443_p1();
    void thread_max_2_i_max1_i_fu_880_p3();
    void thread_max_index_2_i_max_in_fu_887_p3();
    void thread_max_index_cast3_fu_871_p1();
    void thread_max_index_phi_fu_420_p4();
    void thread_neuronIndex_fu_787_p2();
    void thread_next_mul2_fu_637_p2();
    void thread_next_mul_fu_515_p2();
    void thread_outNeurons_1_fu_592_p2();
    void thread_outNeurons_2_fu_731_p2();
    void thread_outNeurons_fu_488_p2();
    void thread_p_shl7_cast_fu_783_p1();
    void thread_p_shl7_fu_775_p3();
    void thread_p_shl_fu_767_p3();
    void thread_phi_mul1_cast_fu_616_p1();
    void thread_resArray1_address0();
    void thread_resArray1_address1();
    void thread_resArray1_ce0();
    void thread_resArray1_ce1();
    void thread_resArray1_d0();
    void thread_resArray1_d1();
    void thread_resArray1_we0();
    void thread_resArray1_we1();
    void thread_resArray2_address0();
    void thread_resArray2_address1();
    void thread_resArray2_ce0();
    void thread_resArray2_ce1();
    void thread_resArray2_d0();
    void thread_resArray2_we0();
    void thread_resArray2_we1();
    void thread_tmp1_cast_fu_612_p1();
    void thread_tmp1_fu_606_p2();
    void thread_tmp2_fu_745_p2();
    void thread_tmp_11_fu_540_p2();
    void thread_tmp_12_fu_546_p1();
    void thread_tmp_13_fu_550_p2();
    void thread_tmp_15_fu_620_p1();
    void thread_tmp_17_fu_707_p1();
    void thread_tmp_18_fu_712_p3();
    void thread_tmp_19_fu_653_p2();
    void thread_tmp_1_fu_498_p1();
    void thread_tmp_1_i_fu_860_p1();
    void thread_tmp_20_fu_720_p1();
    void thread_tmp_21_fu_679_p2();
    void thread_tmp_22_fu_685_p1();
    void thread_tmp_23_cast9_fu_598_p1();
    void thread_tmp_23_cast_fu_602_p1();
    void thread_tmp_23_fu_689_p2();
    void thread_tmp_24_fu_643_p2();
    void thread_tmp_25_cast_fu_648_p1();
    void thread_tmp_27_fu_673_p2();
    void thread_tmp_29_fu_751_p1();
    void thread_tmp_2_i_fu_875_p2();
    void thread_tmp_30_cast_fu_658_p1();
    void thread_tmp_30_fu_802_p2();
    void thread_tmp_31_fu_832_p2();
    void thread_tmp_32_fu_838_p2();
    void thread_tmp_33_fu_844_p1();
    void thread_tmp_34_fu_847_p2();
    void thread_tmp_35_fu_797_p2();
    void thread_tmp_38_cast6_fu_737_p1();
    void thread_tmp_38_cast_fu_741_p1();
    void thread_tmp_38_fu_826_p2();
    void thread_tmp_42_cast_fu_793_p1();
    void thread_tmp_44_cast_fu_807_p1();
    void thread_tmp_45_cast_fu_812_p1();
    void thread_tmp_4_fu_568_p1();
    void thread_tmp_5_cast_fu_494_p1();
    void thread_tmp_5_fu_573_p3();
    void thread_tmp_6_cast_fu_526_p1();
    void thread_tmp_6_fu_521_p2();
    void thread_tmp_8_fu_471_p2();
    void thread_tmp_9_fu_477_p1();
    void thread_tmp_fu_454_p2();
    void thread_tmp_s_fu_581_p1();
    void thread_weights_s_address0();
    void thread_weights_s_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "run_classification.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic run_classification::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic run_classification::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<23> run_classification::ap_ST_fsm_state1 = "1";
const sc_lv<23> run_classification::ap_ST_fsm_state2 = "10";
const sc_lv<23> run_classification::ap_ST_fsm_state3 = "100";
const sc_lv<23> run_classification::ap_ST_fsm_state4 = "1000";
const sc_lv<23> run_classification::ap_ST_fsm_state5 = "10000";
const sc_lv<23> run_classification::ap_ST_fsm_state6 = "100000";
const sc_lv<23> run_classification::ap_ST_fsm_state7 = "1000000";
const sc_lv<23> run_classification::ap_ST_fsm_state8 = "10000000";
const sc_lv<23> run_classification::ap_ST_fsm_state9 = "100000000";
const sc_lv<23> run_classification::ap_ST_fsm_state10 = "1000000000";
const sc_lv<23> run_classification::ap_ST_fsm_state11 = "10000000000";
const sc_lv<23> run_classification::ap_ST_fsm_state12 = "100000000000";
const sc_lv<23> run_classification::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<23> run_classification::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<23> run_classification::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<23> run_classification::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<23> run_classification::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<23> run_classification::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<23> run_classification::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<23> run_classification::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<23> run_classification::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<23> run_classification::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<23> run_classification::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<32> run_classification::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> run_classification::ap_const_lv32_7 = "111";
const sc_lv<32> run_classification::ap_const_lv32_13 = "10011";
const sc_lv<32> run_classification::ap_const_lv32_1 = "1";
const sc_lv<32> run_classification::ap_const_lv32_2 = "10";
const sc_lv<32> run_classification::ap_const_lv32_3 = "11";
const sc_lv<1> run_classification::ap_const_lv1_0 = "0";
const sc_lv<32> run_classification::ap_const_lv32_4 = "100";
const sc_lv<1> run_classification::ap_const_lv1_1 = "1";
const sc_lv<32> run_classification::ap_const_lv32_5 = "101";
const sc_lv<32> run_classification::ap_const_lv32_6 = "110";
const sc_lv<32> run_classification::ap_const_lv32_9 = "1001";
const sc_lv<32> run_classification::ap_const_lv32_12 = "10010";
const sc_lv<32> run_classification::ap_const_lv32_14 = "10100";
const sc_lv<32> run_classification::ap_const_lv32_15 = "10101";
const sc_lv<32> run_classification::ap_const_lv32_16 = "10110";
const sc_lv<7> run_classification::ap_const_lv7_0 = "0000000";
const sc_lv<32> run_classification::ap_const_lv32_A = "1010";
const sc_lv<32> run_classification::ap_const_lv32_8 = "1000";
const sc_lv<13> run_classification::ap_const_lv13_0 = "0000000000000";
const sc_lv<8> run_classification::ap_const_lv8_0 = "00000000";
const sc_lv<4> run_classification::ap_const_lv4_1 = "1";
const sc_lv<32> run_classification::ap_const_lv32_C = "1100";
const sc_lv<32> run_classification::ap_const_lv32_10 = "10000";
const sc_lv<32> run_classification::ap_const_lv32_D = "1101";
const sc_lv<4> run_classification::ap_const_lv4_2 = "10";
const sc_lv<32> run_classification::ap_const_lv32_11 = "10001";
const sc_lv<8> run_classification::ap_const_lv8_46 = "1000110";
const sc_lv<8> run_classification::ap_const_lv8_A = "1010";
const sc_lv<32> run_classification::ap_const_lv32_E = "1110";
const sc_lv<32> run_classification::ap_const_lv32_B = "1011";
const sc_lv<32> run_classification::ap_const_lv32_F = "1111";
const sc_lv<7> run_classification::ap_const_lv7_1 = "1";
const sc_lv<7> run_classification::ap_const_lv7_45 = "1000101";
const sc_lv<7> run_classification::ap_const_lv7_46 = "1000110";
const sc_lv<7> run_classification::ap_const_lv7_50 = "1010000";
const sc_lv<13> run_classification::ap_const_lv13_46 = "1000110";
const sc_lv<4> run_classification::ap_const_lv4_A = "1010";
const bool run_classification::ap_const_boolean_1 = true;

run_classification::run_classification(sc_module_name name) : sc_module(name), mVcdFile(0) {
    resArray1_U = new run_classificatiodEe("resArray1_U");
    resArray1_U->clk(ap_clk);
    resArray1_U->reset(ap_rst);
    resArray1_U->address0(resArray1_address0);
    resArray1_U->ce0(resArray1_ce0);
    resArray1_U->we0(resArray1_we0);
    resArray1_U->d0(resArray1_d0);
    resArray1_U->q0(resArray1_q0);
    resArray2_U = new run_classificatiodEe("resArray2_U");
    resArray2_U->clk(ap_clk);
    resArray2_U->reset(ap_rst);
    resArray2_U->address0(resArray2_address0);
    resArray2_U->ce0(resArray2_ce0);
    resArray2_U->we0(resArray2_we0);
    resArray2_U->d0(resArray2_d0);
    resArray2_U->q0(resArray2_q0);
    grp_runLayer_fu_250 = new runLayer("grp_runLayer_fu_250");
    grp_runLayer_fu_250->ap_clk(ap_clk);
    grp_runLayer_fu_250->ap_rst(ap_rst);
    grp_runLayer_fu_250->ap_start(grp_runLayer_fu_250_ap_start);
    grp_runLayer_fu_250->ap_done(grp_runLayer_fu_250_ap_done);
    grp_runLayer_fu_250->ap_idle(grp_runLayer_fu_250_ap_idle);
    grp_runLayer_fu_250->ap_ready(grp_runLayer_fu_250_ap_ready);
    grp_runLayer_fu_250->layer(grp_runLayer_fu_250_layer);
    grp_runLayer_fu_250->numOfOutNeurons(grp_runLayer_fu_250_numOfOutNeurons);
    grp_runLayer_fu_250->input_r_address0(grp_runLayer_fu_250_input_r_address0);
    grp_runLayer_fu_250->input_r_ce0(grp_runLayer_fu_250_input_r_ce0);
    grp_runLayer_fu_250->input_r_q0(grp_runLayer_fu_250_input_r_q0);
    grp_runLayer_fu_250->output_r_address0(grp_runLayer_fu_250_output_r_address0);
    grp_runLayer_fu_250->output_r_ce0(grp_runLayer_fu_250_output_r_ce0);
    grp_runLayer_fu_250->output_r_we0(grp_runLayer_fu_250_output_r_we0);
    grp_runLayer_fu_250->output_r_d0(grp_runLayer_fu_250_output_r_d0);
    grp_runLayer_fu_250->output_r_q0(grp_runLayer_fu_250_output_r_q0);
    grp_runLayer_fu_250->weights_s_address0(grp_runLayer_fu_250_weights_s_address0);
    grp_runLayer_fu_250->weights_s_ce0(grp_runLayer_fu_250_weights_s_ce0);
    grp_runLayer_fu_250->weights_s_q0(weights_s_q0);
    grp_runLayer_fu_250->bias_s_address0(grp_runLayer_fu_250_bias_s_address0);
    grp_runLayer_fu_250->bias_s_ce0(grp_runLayer_fu_250_bias_s_ce0);
    grp_runLayer_fu_250->bias_s_q0(bias_s_q0);
    grp_relu_fu_266 = new relu("grp_relu_fu_266");
    grp_relu_fu_266->ap_clk(ap_clk);
    grp_relu_fu_266->ap_rst(ap_rst);
    grp_relu_fu_266->ap_start(grp_relu_fu_266_ap_start);
    grp_relu_fu_266->ap_done(grp_relu_fu_266_ap_done);
    grp_relu_fu_266->ap_idle(grp_relu_fu_266_ap_idle);
    grp_relu_fu_266->ap_ready(grp_relu_fu_266_ap_ready);
    grp_relu_fu_266->data_address0(grp_relu_fu_266_data_address0);
    grp_relu_fu_266->data_ce0(grp_relu_fu_266_data_ce0);
    grp_relu_fu_266->data_we0(grp_relu_fu_266_data_we0);
    grp_relu_fu_266->data_d0(grp_relu_fu_266_data_d0);
    grp_relu_fu_266->data_q0(grp_relu_fu_266_data_q0);
    NeuralNetwork_mulbkb_x_U9 = new NeuralNetwork_mulbkb<1,2,32,8,32>("NeuralNetwork_mulbkb_x_U9");
    NeuralNetwork_mulbkb_x_U9->clk(ap_clk);
    NeuralNetwork_mulbkb_x_U9->reset(ap_rst);
    NeuralNetwork_mulbkb_x_U9->din0(input_r_load_reg_500);
    NeuralNetwork_mulbkb_x_U9->din1(weights_load_reg_495);
    NeuralNetwork_mulbkb_x_U9->ce(ap_var_for_const0);
    NeuralNetwork_mulbkb_x_U9->dout(grp_fu_367_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( exitcond_i_fu_392_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( exitcond_i_fu_392_p2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( exitcond_i_fu_392_p2 );
    sensitive << ( max_index_i_reg_227 );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_bias_s_address0);
    sensitive << ( tmp_1_i_reg_444 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_runLayer_fu_250_bias_s_address0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_bias_s_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_runLayer_fu_250_bias_s_ce0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_exitcond3_fu_315_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( outNeurons_i_reg_184 );

    SC_METHOD(thread_exitcond_fu_336_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( inNeurons_i_reg_195 );

    SC_METHOD(thread_exitcond_i_fu_392_p2);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( max_index_reg_239 );

    SC_METHOD(thread_grp_relu_fu_266_ap_start);
    sensitive << ( ap_reg_grp_relu_fu_266_ap_start );

    SC_METHOD(thread_grp_relu_fu_266_data_q0);
    sensitive << ( resArray1_q0 );
    sensitive << ( resArray2_q0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_grp_runLayer_fu_250_ap_start);
    sensitive << ( ap_reg_grp_runLayer_fu_250_ap_start );

    SC_METHOD(thread_grp_runLayer_fu_250_input_r_q0);
    sensitive << ( resArray1_q0 );
    sensitive << ( resArray2_q0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_runLayer_fu_250_layer);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_runLayer_fu_250_numOfOutNeurons);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_runLayer_fu_250_output_r_q0);
    sensitive << ( resArray1_q0 );
    sensitive << ( resArray2_q0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_i_fu_403_p2);
    sensitive << ( max_index_reg_239 );

    SC_METHOD(thread_inNeurons_fu_342_p2);
    sensitive << ( inNeurons_i_reg_195 );

    SC_METHOD(thread_indvarinc3_fu_298_p2);
    sensitive << ( invdar2_reg_173 );

    SC_METHOD(thread_indvarinc_fu_281_p2);
    sensitive << ( invdar_reg_162 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_4_i_fu_331_p1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_invdar2_cast_fu_293_p1);
    sensitive << ( invdar2_reg_173 );

    SC_METHOD(thread_invdar_cast_fu_276_p1);
    sensitive << ( invdar_reg_162 );

    SC_METHOD(thread_max_2_i_max1_i_fu_414_p3);
    sensitive << ( max_1_reg_543 );
    sensitive << ( max1_i_reg_217 );
    sensitive << ( tmp_2_i2_fu_409_p2 );

    SC_METHOD(thread_max_index_2_i_max_in_fu_421_p3);
    sensitive << ( max_index_cast1_reg_525 );
    sensitive << ( max_index_i_reg_227 );
    sensitive << ( tmp_2_i2_fu_409_p2 );

    SC_METHOD(thread_max_index_cast1_fu_388_p1);
    sensitive << ( max_index_reg_239 );

    SC_METHOD(thread_next_mul_fu_348_p2);
    sensitive << ( phi_mul_reg_206 );

    SC_METHOD(thread_outNeurons_fu_321_p2);
    sensitive << ( outNeurons_i_reg_184 );

    SC_METHOD(thread_resArray1_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_i_fu_310_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( resArray1_addr_2_reg_457 );
    sensitive << ( exitcond3_fu_315_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( grp_runLayer_fu_250_input_r_address0 );
    sensitive << ( grp_runLayer_fu_250_output_r_address0 );
    sensitive << ( grp_relu_fu_266_data_address0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( invdar_cast_fu_276_p1 );
    sensitive << ( tmp_1_i1_fu_398_p1 );

    SC_METHOD(thread_resArray1_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond3_fu_315_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( grp_runLayer_fu_250_input_r_ce0 );
    sensitive << ( grp_runLayer_fu_250_output_r_ce0 );
    sensitive << ( grp_relu_fu_266_data_ce0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_resArray1_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond3_fu_315_p2 );
    sensitive << ( tmp_12_i_reg_515 );
    sensitive << ( grp_runLayer_fu_250_output_r_d0 );
    sensitive << ( grp_relu_fu_266_data_d0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_i_7_fu_372_p2 );

    SC_METHOD(thread_resArray1_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond3_fu_315_p2 );
    sensitive << ( grp_runLayer_fu_250_output_r_we0 );
    sensitive << ( grp_relu_fu_266_data_we0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_resArray2_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_runLayer_fu_250_input_r_address0 );
    sensitive << ( grp_runLayer_fu_250_output_r_address0 );
    sensitive << ( grp_relu_fu_266_data_address0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( invdar2_cast_fu_293_p1 );

    SC_METHOD(thread_resArray2_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_runLayer_fu_250_input_r_ce0 );
    sensitive << ( grp_runLayer_fu_250_output_r_ce0 );
    sensitive << ( grp_relu_fu_266_data_ce0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_resArray2_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_runLayer_fu_250_output_r_d0 );
    sensitive << ( grp_relu_fu_266_data_d0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_resArray2_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_runLayer_fu_250_output_r_we0 );
    sensitive << ( grp_relu_fu_266_data_we0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_tmp_11_i_fu_378_p1);
    sensitive << ( bias_s_q0 );

    SC_METHOD(thread_tmp_12_i_fu_382_p2);
    sensitive << ( resArray1_q0 );
    sensitive << ( tmp_11_i_fu_378_p1 );

    SC_METHOD(thread_tmp_17_i_i_cast_fu_327_p1);
    sensitive << ( outNeurons_i_reg_184 );

    SC_METHOD(thread_tmp_19_i_i_cast_fu_359_p1);
    sensitive << ( tmp_19_i_i_fu_354_p2 );

    SC_METHOD(thread_tmp_19_i_i_fu_354_p2);
    sensitive << ( tmp_17_i_i_cast_reg_462 );
    sensitive << ( phi_mul_reg_206 );

    SC_METHOD(thread_tmp_1_i1_fu_398_p1);
    sensitive << ( max_index_reg_239 );

    SC_METHOD(thread_tmp_1_i_fu_310_p1);
    sensitive << ( outNeurons_i_reg_184 );

    SC_METHOD(thread_tmp_2_i2_fu_409_p2);
    sensitive << ( max_1_reg_543 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( max1_i_reg_217 );

    SC_METHOD(thread_tmp_4_i_fu_331_p1);
    sensitive << ( inNeurons_i_reg_195 );

    SC_METHOD(thread_tmp_8_fu_304_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( invdar2_reg_173 );

    SC_METHOD(thread_tmp_fu_287_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( invdar_reg_162 );

    SC_METHOD(thread_tmp_i_7_fu_372_p2);
    sensitive << ( reg_271 );
    sensitive << ( tmp_9_i_reg_510 );

    SC_METHOD(thread_weights_s_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_runLayer_fu_250_weights_s_address0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( tmp_19_i_i_cast_fu_359_p1 );

    SC_METHOD(thread_weights_s_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_runLayer_fu_250_weights_s_ce0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond3_fu_315_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond_fu_336_p2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( exitcond_i_fu_392_p2 );
    sensitive << ( grp_runLayer_fu_250_ap_done );
    sensitive << ( grp_relu_fu_266_ap_done );
    sensitive << ( tmp_fu_287_p2 );
    sensitive << ( tmp_8_fu_304_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000000000001";
    ap_reg_grp_runLayer_fu_250_ap_start = SC_LOGIC_0;
    ap_reg_grp_relu_fu_266_ap_start = SC_LOGIC_0;
    ap_return_preg = "00000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "run_classification_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, weights_s_address0, "(port)weights_s_address0");
    sc_trace(mVcdFile, weights_s_ce0, "(port)weights_s_ce0");
    sc_trace(mVcdFile, weights_s_q0, "(port)weights_s_q0");
    sc_trace(mVcdFile, bias_s_address0, "(port)bias_s_address0");
    sc_trace(mVcdFile, bias_s_ce0, "(port)bias_s_ce0");
    sc_trace(mVcdFile, bias_s_q0, "(port)bias_s_q0");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, resArray1_q0, "resArray1_q0");
    sc_trace(mVcdFile, reg_271, "reg_271");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, indvarinc_fu_281_p2, "indvarinc_fu_281_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, indvarinc3_fu_298_p2, "indvarinc3_fu_298_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_1_i_fu_310_p1, "tmp_1_i_fu_310_p1");
    sc_trace(mVcdFile, tmp_1_i_reg_444, "tmp_1_i_reg_444");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, outNeurons_fu_321_p2, "outNeurons_fu_321_p2");
    sc_trace(mVcdFile, outNeurons_reg_452, "outNeurons_reg_452");
    sc_trace(mVcdFile, resArray1_addr_2_reg_457, "resArray1_addr_2_reg_457");
    sc_trace(mVcdFile, exitcond3_fu_315_p2, "exitcond3_fu_315_p2");
    sc_trace(mVcdFile, tmp_17_i_i_cast_fu_327_p1, "tmp_17_i_i_cast_fu_327_p1");
    sc_trace(mVcdFile, tmp_17_i_i_cast_reg_462, "tmp_17_i_i_cast_reg_462");
    sc_trace(mVcdFile, inNeurons_fu_342_p2, "inNeurons_fu_342_p2");
    sc_trace(mVcdFile, inNeurons_reg_470, "inNeurons_reg_470");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, next_mul_fu_348_p2, "next_mul_fu_348_p2");
    sc_trace(mVcdFile, next_mul_reg_475, "next_mul_reg_475");
    sc_trace(mVcdFile, exitcond_fu_336_p2, "exitcond_fu_336_p2");
    sc_trace(mVcdFile, weights_load_reg_495, "weights_load_reg_495");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, input_r_load_reg_500, "input_r_load_reg_500");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, grp_fu_367_p2, "grp_fu_367_p2");
    sc_trace(mVcdFile, tmp_9_i_reg_510, "tmp_9_i_reg_510");
    sc_trace(mVcdFile, tmp_12_i_fu_382_p2, "tmp_12_i_fu_382_p2");
    sc_trace(mVcdFile, tmp_12_i_reg_515, "tmp_12_i_reg_515");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, max_index_cast1_fu_388_p1, "max_index_cast1_fu_388_p1");
    sc_trace(mVcdFile, max_index_cast1_reg_525, "max_index_cast1_reg_525");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, exitcond_i_fu_392_p2, "exitcond_i_fu_392_p2");
    sc_trace(mVcdFile, i_fu_403_p2, "i_fu_403_p2");
    sc_trace(mVcdFile, i_reg_538, "i_reg_538");
    sc_trace(mVcdFile, max_1_reg_543, "max_1_reg_543");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, max_2_i_max1_i_fu_414_p3, "max_2_i_max1_i_fu_414_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, max_index_2_i_max_in_fu_421_p3, "max_index_2_i_max_in_fu_421_p3");
    sc_trace(mVcdFile, resArray1_address0, "resArray1_address0");
    sc_trace(mVcdFile, resArray1_ce0, "resArray1_ce0");
    sc_trace(mVcdFile, resArray1_we0, "resArray1_we0");
    sc_trace(mVcdFile, resArray1_d0, "resArray1_d0");
    sc_trace(mVcdFile, resArray2_address0, "resArray2_address0");
    sc_trace(mVcdFile, resArray2_ce0, "resArray2_ce0");
    sc_trace(mVcdFile, resArray2_we0, "resArray2_we0");
    sc_trace(mVcdFile, resArray2_d0, "resArray2_d0");
    sc_trace(mVcdFile, resArray2_q0, "resArray2_q0");
    sc_trace(mVcdFile, grp_runLayer_fu_250_ap_start, "grp_runLayer_fu_250_ap_start");
    sc_trace(mVcdFile, grp_runLayer_fu_250_ap_done, "grp_runLayer_fu_250_ap_done");
    sc_trace(mVcdFile, grp_runLayer_fu_250_ap_idle, "grp_runLayer_fu_250_ap_idle");
    sc_trace(mVcdFile, grp_runLayer_fu_250_ap_ready, "grp_runLayer_fu_250_ap_ready");
    sc_trace(mVcdFile, grp_runLayer_fu_250_layer, "grp_runLayer_fu_250_layer");
    sc_trace(mVcdFile, grp_runLayer_fu_250_numOfOutNeurons, "grp_runLayer_fu_250_numOfOutNeurons");
    sc_trace(mVcdFile, grp_runLayer_fu_250_input_r_address0, "grp_runLayer_fu_250_input_r_address0");
    sc_trace(mVcdFile, grp_runLayer_fu_250_input_r_ce0, "grp_runLayer_fu_250_input_r_ce0");
    sc_trace(mVcdFile, grp_runLayer_fu_250_input_r_q0, "grp_runLayer_fu_250_input_r_q0");
    sc_trace(mVcdFile, grp_runLayer_fu_250_output_r_address0, "grp_runLayer_fu_250_output_r_address0");
    sc_trace(mVcdFile, grp_runLayer_fu_250_output_r_ce0, "grp_runLayer_fu_250_output_r_ce0");
    sc_trace(mVcdFile, grp_runLayer_fu_250_output_r_we0, "grp_runLayer_fu_250_output_r_we0");
    sc_trace(mVcdFile, grp_runLayer_fu_250_output_r_d0, "grp_runLayer_fu_250_output_r_d0");
    sc_trace(mVcdFile, grp_runLayer_fu_250_output_r_q0, "grp_runLayer_fu_250_output_r_q0");
    sc_trace(mVcdFile, grp_runLayer_fu_250_weights_s_address0, "grp_runLayer_fu_250_weights_s_address0");
    sc_trace(mVcdFile, grp_runLayer_fu_250_weights_s_ce0, "grp_runLayer_fu_250_weights_s_ce0");
    sc_trace(mVcdFile, grp_runLayer_fu_250_bias_s_address0, "grp_runLayer_fu_250_bias_s_address0");
    sc_trace(mVcdFile, grp_runLayer_fu_250_bias_s_ce0, "grp_runLayer_fu_250_bias_s_ce0");
    sc_trace(mVcdFile, grp_relu_fu_266_ap_start, "grp_relu_fu_266_ap_start");
    sc_trace(mVcdFile, grp_relu_fu_266_ap_done, "grp_relu_fu_266_ap_done");
    sc_trace(mVcdFile, grp_relu_fu_266_ap_idle, "grp_relu_fu_266_ap_idle");
    sc_trace(mVcdFile, grp_relu_fu_266_ap_ready, "grp_relu_fu_266_ap_ready");
    sc_trace(mVcdFile, grp_relu_fu_266_data_address0, "grp_relu_fu_266_data_address0");
    sc_trace(mVcdFile, grp_relu_fu_266_data_ce0, "grp_relu_fu_266_data_ce0");
    sc_trace(mVcdFile, grp_relu_fu_266_data_we0, "grp_relu_fu_266_data_we0");
    sc_trace(mVcdFile, grp_relu_fu_266_data_d0, "grp_relu_fu_266_data_d0");
    sc_trace(mVcdFile, grp_relu_fu_266_data_q0, "grp_relu_fu_266_data_q0");
    sc_trace(mVcdFile, invdar_reg_162, "invdar_reg_162");
    sc_trace(mVcdFile, tmp_fu_287_p2, "tmp_fu_287_p2");
    sc_trace(mVcdFile, invdar2_reg_173, "invdar2_reg_173");
    sc_trace(mVcdFile, tmp_8_fu_304_p2, "tmp_8_fu_304_p2");
    sc_trace(mVcdFile, outNeurons_i_reg_184, "outNeurons_i_reg_184");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, inNeurons_i_reg_195, "inNeurons_i_reg_195");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, phi_mul_reg_206, "phi_mul_reg_206");
    sc_trace(mVcdFile, max1_i_reg_217, "max1_i_reg_217");
    sc_trace(mVcdFile, max_index_i_reg_227, "max_index_i_reg_227");
    sc_trace(mVcdFile, max_index_reg_239, "max_index_reg_239");
    sc_trace(mVcdFile, ap_reg_grp_runLayer_fu_250_ap_start, "ap_reg_grp_runLayer_fu_250_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_reg_grp_relu_fu_266_ap_start, "ap_reg_grp_relu_fu_266_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, invdar_cast_fu_276_p1, "invdar_cast_fu_276_p1");
    sc_trace(mVcdFile, invdar2_cast_fu_293_p1, "invdar2_cast_fu_293_p1");
    sc_trace(mVcdFile, tmp_19_i_i_cast_fu_359_p1, "tmp_19_i_i_cast_fu_359_p1");
    sc_trace(mVcdFile, tmp_4_i_fu_331_p1, "tmp_4_i_fu_331_p1");
    sc_trace(mVcdFile, tmp_1_i1_fu_398_p1, "tmp_1_i1_fu_398_p1");
    sc_trace(mVcdFile, tmp_i_7_fu_372_p2, "tmp_i_7_fu_372_p2");
    sc_trace(mVcdFile, tmp_19_i_i_fu_354_p2, "tmp_19_i_i_fu_354_p2");
    sc_trace(mVcdFile, tmp_11_i_fu_378_p1, "tmp_11_i_fu_378_p1");
    sc_trace(mVcdFile, tmp_2_i2_fu_409_p2, "tmp_2_i2_fu_409_p2");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

run_classification::~run_classification() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete resArray1_U;
    delete resArray2_U;
    delete grp_runLayer_fu_250;
    delete grp_relu_fu_266;
    delete NeuralNetwork_mulbkb_x_U9;
}

void run_classification::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void run_classification::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_relu_fu_266_ap_start = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
              esl_seteq<1,1,1>(exitcond3_fu_315_p2.read(), ap_const_lv1_1)) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
            ap_reg_grp_relu_fu_266_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_relu_fu_266_ap_ready.read())) {
            ap_reg_grp_relu_fu_266_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_runLayer_fu_250_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
            ap_reg_grp_runLayer_fu_250_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_runLayer_fu_250_ap_ready.read())) {
            ap_reg_grp_runLayer_fu_250_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_fu_392_p2.read()))) {
            ap_return_preg = max_index_i_reg_227.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        inNeurons_i_reg_195 = inNeurons_reg_470.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(exitcond3_fu_315_p2.read(), ap_const_lv1_0))) {
        inNeurons_i_reg_195 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_287_p2.read()))) {
        invdar2_reg_173 = ap_const_lv7_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_304_p2.read()))) {
        invdar2_reg_173 = indvarinc3_fu_298_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_287_p2.read()))) {
        invdar_reg_162 = indvarinc_fu_281_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        invdar_reg_162 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        max1_i_reg_217 = max_2_i_max1_i_fu_414_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        max1_i_reg_217 = resArray1_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        max_index_i_reg_227 = max_index_2_i_max_in_fu_421_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        max_index_i_reg_227 = ap_const_lv8_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        max_index_reg_239 = i_reg_538.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        max_index_reg_239 = ap_const_lv4_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_fu_304_p2.read()))) {
        outNeurons_i_reg_184 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        outNeurons_i_reg_184 = outNeurons_reg_452.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        phi_mul_reg_206 = next_mul_reg_475.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(exitcond3_fu_315_p2.read(), ap_const_lv1_0))) {
        phi_mul_reg_206 = ap_const_lv13_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_392_p2.read()))) {
        i_reg_538 = i_fu_403_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        inNeurons_reg_470 = inNeurons_fu_342_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        input_r_load_reg_500 = input_r_q0.read();
        weights_load_reg_495 = weights_s_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        max_1_reg_543 = resArray1_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        max_index_cast1_reg_525 = max_index_cast1_fu_388_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_336_p2.read()))) {
        next_mul_reg_475 = next_mul_fu_348_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        outNeurons_reg_452 = outNeurons_fu_321_p2.read();
        tmp_1_i_reg_444 = tmp_1_i_fu_310_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        reg_271 = resArray1_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond3_fu_315_p2.read(), ap_const_lv1_0))) {
        resArray1_addr_2_reg_457 =  (sc_lv<7>) (tmp_1_i_fu_310_p1.read());
        tmp_17_i_i_cast_reg_462 = tmp_17_i_i_cast_fu_327_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        tmp_12_i_reg_515 = tmp_12_i_fu_382_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        tmp_9_i_reg_510 = grp_fu_367_p2.read();
    }
}

void run_classification::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void run_classification::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void run_classification::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void run_classification::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void run_classification::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void run_classification::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void run_classification::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void run_classification::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void run_classification::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void run_classification::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void run_classification::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void run_classification::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void run_classification::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void run_classification::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void run_classification::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void run_classification::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void run_classification::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void run_classification::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void run_classification::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void run_classification::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void run_classification::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void run_classification::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void run_classification::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void run_classification::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_fu_392_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void run_classification::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void run_classification::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_fu_392_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void run_classification::thread_ap_return() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_fu_392_p2.read()))) {
        ap_return = max_index_i_reg_227.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void run_classification::thread_bias_s_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        bias_s_address0 =  (sc_lv<8>) (tmp_1_i_reg_444.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        bias_s_address0 = grp_runLayer_fu_250_bias_s_address0.read();
    } else {
        bias_s_address0 = "XXXXXXXX";
    }
}

void run_classification::thread_bias_s_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        bias_s_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        bias_s_ce0 = grp_runLayer_fu_250_bias_s_ce0.read();
    } else {
        bias_s_ce0 = ap_const_logic_0;
    }
}

void run_classification::thread_exitcond3_fu_315_p2() {
    exitcond3_fu_315_p2 = (!outNeurons_i_reg_184.read().is_01() || !ap_const_lv7_46.is_01())? sc_lv<1>(): sc_lv<1>(outNeurons_i_reg_184.read() == ap_const_lv7_46);
}

void run_classification::thread_exitcond_fu_336_p2() {
    exitcond_fu_336_p2 = (!inNeurons_i_reg_195.read().is_01() || !ap_const_lv7_50.is_01())? sc_lv<1>(): sc_lv<1>(inNeurons_i_reg_195.read() == ap_const_lv7_50);
}

void run_classification::thread_exitcond_i_fu_392_p2() {
    exitcond_i_fu_392_p2 = (!max_index_reg_239.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(max_index_reg_239.read() == ap_const_lv4_A);
}

void run_classification::thread_grp_relu_fu_266_ap_start() {
    grp_relu_fu_266_ap_start = ap_reg_grp_relu_fu_266_ap_start.read();
}

void run_classification::thread_grp_relu_fu_266_data_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_relu_fu_266_data_q0 = resArray2_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_relu_fu_266_data_q0 = resArray1_q0.read();
    } else {
        grp_relu_fu_266_data_q0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void run_classification::thread_grp_runLayer_fu_250_ap_start() {
    grp_runLayer_fu_250_ap_start = ap_reg_grp_runLayer_fu_250_ap_start.read();
}

void run_classification::thread_grp_runLayer_fu_250_input_r_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_runLayer_fu_250_input_r_q0 = resArray2_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_runLayer_fu_250_input_r_q0 = resArray1_q0.read();
    } else {
        grp_runLayer_fu_250_input_r_q0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void run_classification::thread_grp_runLayer_fu_250_layer() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_runLayer_fu_250_layer = ap_const_lv4_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_runLayer_fu_250_layer = ap_const_lv4_1;
    } else {
        grp_runLayer_fu_250_layer =  (sc_lv<4>) ("XXXX");
    }
}

void run_classification::thread_grp_runLayer_fu_250_numOfOutNeurons() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_runLayer_fu_250_numOfOutNeurons = ap_const_lv8_A;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_runLayer_fu_250_numOfOutNeurons = ap_const_lv8_46;
    } else {
        grp_runLayer_fu_250_numOfOutNeurons = "XXXXXXXX";
    }
}

void run_classification::thread_grp_runLayer_fu_250_output_r_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_runLayer_fu_250_output_r_q0 = resArray1_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_runLayer_fu_250_output_r_q0 = resArray2_q0.read();
    } else {
        grp_runLayer_fu_250_output_r_q0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void run_classification::thread_i_fu_403_p2() {
    i_fu_403_p2 = (!max_index_reg_239.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(max_index_reg_239.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void run_classification::thread_inNeurons_fu_342_p2() {
    inNeurons_fu_342_p2 = (!inNeurons_i_reg_195.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(inNeurons_i_reg_195.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void run_classification::thread_indvarinc3_fu_298_p2() {
    indvarinc3_fu_298_p2 = (!invdar2_reg_173.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(invdar2_reg_173.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void run_classification::thread_indvarinc_fu_281_p2() {
    indvarinc_fu_281_p2 = (!invdar_reg_162.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(invdar_reg_162.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void run_classification::thread_input_r_address0() {
    input_r_address0 =  (sc_lv<7>) (tmp_4_i_fu_331_p1.read());
}

void run_classification::thread_input_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void run_classification::thread_invdar2_cast_fu_293_p1() {
    invdar2_cast_fu_293_p1 = esl_zext<32,7>(invdar2_reg_173.read());
}

void run_classification::thread_invdar_cast_fu_276_p1() {
    invdar_cast_fu_276_p1 = esl_zext<32,7>(invdar_reg_162.read());
}

void run_classification::thread_max_2_i_max1_i_fu_414_p3() {
    max_2_i_max1_i_fu_414_p3 = (!tmp_2_i2_fu_409_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_2_i2_fu_409_p2.read()[0].to_bool())? max_1_reg_543.read(): max1_i_reg_217.read());
}

void run_classification::thread_max_index_2_i_max_in_fu_421_p3() {
    max_index_2_i_max_in_fu_421_p3 = (!tmp_2_i2_fu_409_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_2_i2_fu_409_p2.read()[0].to_bool())? max_index_cast1_reg_525.read(): max_index_i_reg_227.read());
}

void run_classification::thread_max_index_cast1_fu_388_p1() {
    max_index_cast1_fu_388_p1 = esl_zext<8,4>(max_index_reg_239.read());
}

void run_classification::thread_next_mul_fu_348_p2() {
    next_mul_fu_348_p2 = (!phi_mul_reg_206.read().is_01() || !ap_const_lv13_46.is_01())? sc_lv<13>(): (sc_biguint<13>(phi_mul_reg_206.read()) + sc_biguint<13>(ap_const_lv13_46));
}

void run_classification::thread_outNeurons_fu_321_p2() {
    outNeurons_fu_321_p2 = (!outNeurons_i_reg_184.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(outNeurons_i_reg_184.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void run_classification::thread_resArray1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        resArray1_address0 =  (sc_lv<7>) (tmp_1_i1_fu_398_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        resArray1_address0 =  (sc_lv<7>) (ap_const_lv32_0);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        resArray1_address0 = resArray1_addr_2_reg_457.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(exitcond3_fu_315_p2.read(), ap_const_lv1_0))) {
        resArray1_address0 =  (sc_lv<7>) (tmp_1_i_fu_310_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        resArray1_address0 =  (sc_lv<7>) (invdar_cast_fu_276_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        resArray1_address0 = grp_relu_fu_266_data_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        resArray1_address0 = grp_runLayer_fu_250_output_r_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        resArray1_address0 = grp_runLayer_fu_250_input_r_address0.read();
    } else {
        resArray1_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void run_classification::thread_resArray1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(exitcond3_fu_315_p2.read(), ap_const_lv1_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        resArray1_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        resArray1_ce0 = grp_relu_fu_266_data_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        resArray1_ce0 = grp_runLayer_fu_250_output_r_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        resArray1_ce0 = grp_runLayer_fu_250_input_r_ce0.read();
    } else {
        resArray1_ce0 = ap_const_logic_0;
    }
}

void run_classification::thread_resArray1_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        resArray1_d0 = tmp_12_i_reg_515.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        resArray1_d0 = tmp_i_7_fu_372_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                 esl_seteq<1,1,1>(exitcond3_fu_315_p2.read(), ap_const_lv1_0)))) {
        resArray1_d0 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        resArray1_d0 = grp_relu_fu_266_data_d0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        resArray1_d0 = grp_runLayer_fu_250_output_r_d0.read();
    } else {
        resArray1_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void run_classification::thread_resArray1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(exitcond3_fu_315_p2.read(), ap_const_lv1_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        resArray1_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        resArray1_we0 = grp_relu_fu_266_data_we0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        resArray1_we0 = grp_runLayer_fu_250_output_r_we0.read();
    } else {
        resArray1_we0 = ap_const_logic_0;
    }
}

void run_classification::thread_resArray2_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        resArray2_address0 =  (sc_lv<7>) (invdar2_cast_fu_293_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        resArray2_address0 = grp_relu_fu_266_data_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        resArray2_address0 = grp_runLayer_fu_250_output_r_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        resArray2_address0 = grp_runLayer_fu_250_input_r_address0.read();
    } else {
        resArray2_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void run_classification::thread_resArray2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        resArray2_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        resArray2_ce0 = grp_relu_fu_266_data_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        resArray2_ce0 = grp_runLayer_fu_250_output_r_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        resArray2_ce0 = grp_runLayer_fu_250_input_r_ce0.read();
    } else {
        resArray2_ce0 = ap_const_logic_0;
    }
}

void run_classification::thread_resArray2_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        resArray2_d0 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        resArray2_d0 = grp_relu_fu_266_data_d0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        resArray2_d0 = grp_runLayer_fu_250_output_r_d0.read();
    } else {
        resArray2_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void run_classification::thread_resArray2_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        resArray2_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        resArray2_we0 = grp_relu_fu_266_data_we0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        resArray2_we0 = grp_runLayer_fu_250_output_r_we0.read();
    } else {
        resArray2_we0 = ap_const_logic_0;
    }
}

void run_classification::thread_tmp_11_i_fu_378_p1() {
    tmp_11_i_fu_378_p1 = esl_sext<32,8>(bias_s_q0.read());
}

void run_classification::thread_tmp_12_i_fu_382_p2() {
    tmp_12_i_fu_382_p2 = (!resArray1_q0.read().is_01() || !tmp_11_i_fu_378_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(resArray1_q0.read()) + sc_bigint<32>(tmp_11_i_fu_378_p1.read()));
}

void run_classification::thread_tmp_17_i_i_cast_fu_327_p1() {
    tmp_17_i_i_cast_fu_327_p1 = esl_zext<13,7>(outNeurons_i_reg_184.read());
}

void run_classification::thread_tmp_19_i_i_cast_fu_359_p1() {
    tmp_19_i_i_cast_fu_359_p1 = esl_zext<32,13>(tmp_19_i_i_fu_354_p2.read());
}

void run_classification::thread_tmp_19_i_i_fu_354_p2() {
    tmp_19_i_i_fu_354_p2 = (!phi_mul_reg_206.read().is_01() || !tmp_17_i_i_cast_reg_462.read().is_01())? sc_lv<13>(): (sc_biguint<13>(phi_mul_reg_206.read()) + sc_biguint<13>(tmp_17_i_i_cast_reg_462.read()));
}

void run_classification::thread_tmp_1_i1_fu_398_p1() {
    tmp_1_i1_fu_398_p1 = esl_zext<32,4>(max_index_reg_239.read());
}

void run_classification::thread_tmp_1_i_fu_310_p1() {
    tmp_1_i_fu_310_p1 = esl_zext<32,7>(outNeurons_i_reg_184.read());
}

void run_classification::thread_tmp_2_i2_fu_409_p2() {
    tmp_2_i2_fu_409_p2 = (!max_1_reg_543.read().is_01() || !max1_i_reg_217.read().is_01())? sc_lv<1>(): (sc_bigint<32>(max_1_reg_543.read()) > sc_bigint<32>(max1_i_reg_217.read()));
}

void run_classification::thread_tmp_4_i_fu_331_p1() {
    tmp_4_i_fu_331_p1 = esl_zext<32,7>(inNeurons_i_reg_195.read());
}

void run_classification::thread_tmp_8_fu_304_p2() {
    tmp_8_fu_304_p2 = (!invdar2_reg_173.read().is_01() || !ap_const_lv7_45.is_01())? sc_lv<1>(): sc_lv<1>(invdar2_reg_173.read() == ap_const_lv7_45);
}

void run_classification::thread_tmp_fu_287_p2() {
    tmp_fu_287_p2 = (!invdar_reg_162.read().is_01() || !ap_const_lv7_45.is_01())? sc_lv<1>(): sc_lv<1>(invdar_reg_162.read() == ap_const_lv7_45);
}

void run_classification::thread_tmp_i_7_fu_372_p2() {
    tmp_i_7_fu_372_p2 = (!reg_271.read().is_01() || !tmp_9_i_reg_510.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_271.read()) + sc_biguint<32>(tmp_9_i_reg_510.read()));
}

void run_classification::thread_weights_s_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        weights_s_address0 =  (sc_lv<14>) (tmp_19_i_i_cast_fu_359_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        weights_s_address0 = grp_runLayer_fu_250_weights_s_address0.read();
    } else {
        weights_s_address0 =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
    }
}

void run_classification::thread_weights_s_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        weights_s_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        weights_s_ce0 = grp_runLayer_fu_250_weights_s_ce0.read();
    } else {
        weights_s_ce0 = ap_const_logic_0;
    }
}

void run_classification::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_287_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_fu_304_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond3_fu_315_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond_fu_336_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(grp_relu_fu_266_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(grp_runLayer_fu_250_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(grp_relu_fu_266_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && esl_seteq<1,1,1>(grp_runLayer_fu_250_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_fu_392_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state22;
            }
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<23>) ("XXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}


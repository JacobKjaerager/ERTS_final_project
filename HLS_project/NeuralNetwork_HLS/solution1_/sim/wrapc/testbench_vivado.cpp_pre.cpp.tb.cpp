// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#1 "C:/Users/jespe/Desktop/Uni_Civil_9_Semester/Embedded_course/ERTS_final_project/NN_Code/NN_Code/testbench_vivado.cpp"
#1 "<built-in>"
#1 "<command-line>"
#1 "C:/Users/jespe/Desktop/Uni_Civil_9_Semester/Embedded_course/ERTS_final_project/NN_Code/NN_Code/testbench_vivado.cpp"
#1 "C:/Users/jespe/Desktop/Uni_Civil_9_Semester/Embedded_course/ERTS_final_project/NN_Code/NN_Code/neuralnetwork_ccode.hpp" 1

#15 "C:/Users/jespe/Desktop/Uni_Civil_9_Semester/Embedded_course/ERTS_final_project/NN_Code/NN_Code/neuralnetwork_ccode.hpp"
void setBias(char bias_r[(70*2) + 10]);

short int getBias(unsigned char layer, unsigned char neuron);

void setWeights(char weights_r[80*70 + 70*70 + 10*70]);

char getWeight(unsigned char layer, unsigned char neuron, unsigned char number);

void runLayer(unsigned char layer, unsigned char numOfInNeurons, unsigned char numOfOutNeurons, int * input, int * output);

void relu(int* data, unsigned char numOfNeurons);

unsigned char softmax_lite(int* data, unsigned char numOfNeurons);

unsigned char run_classification(int * input_r);

unsigned char NeuralNetwork(int input_r[80], char biasWeight_input_r[80*70 + 70*70 + 10*70], char runNN_r, char setBais_r, char setWeight_r);
#2 "C:/Users/jespe/Desktop/Uni_Civil_9_Semester/Embedded_course/ERTS_final_project/NN_Code/NN_Code/testbench_vivado.cpp" 2



int testImage[80] = {-1, 3, 0, -1, -2, 1, 2, 2, -2, -1, 1, 0, 0, -1, -1, 0, 1,
        1, 0, 0, 0, 1, 0, 0, -1, 0, 1, 0, 0, -1, 0, -1, 0, -1,
        0, 1, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0,
       -1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0};
char newWeights[80*70 + 70*70 + 10*70] = { 0 };
char newBias[(70*2) + 10] = { 0 };

char testLabel = 7;


#ifndef HLS_FASTSIM
#15 "C:/Users/jespe/Desktop/Uni_Civil_9_Semester/Embedded_course/ERTS_final_project/NN_Code/NN_Code/testbench_vivado.cpp"

#ifndef HLS_FASTSIM
#include "apatb_NeuralNetwork.h"
#endif

#15 "C:/Users/jespe/Desktop/Uni_Civil_9_Semester/Embedded_course/ERTS_final_project/NN_Code/NN_Code/testbench_vivado.cpp"
int main()
{
 char retVal = 0;
 char res = 
#ifndef HLS_FASTSIM
#define NeuralNetwork AESL_WRAP_NeuralNetwork
#endif

#18 "C:/Users/jespe/Desktop/Uni_Civil_9_Semester/Embedded_course/ERTS_final_project/NN_Code/NN_Code/testbench_vivado.cpp"

#ifndef HLS_FASTSIM
#define NeuralNetwork AESL_WRAP_NeuralNetwork
#endif

#18 "C:/Users/jespe/Desktop/Uni_Civil_9_Semester/Embedded_course/ERTS_final_project/NN_Code/NN_Code/testbench_vivado.cpp"
NeuralNetwork
#undef NeuralNetwork
#18 "C:/Users/jespe/Desktop/Uni_Civil_9_Semester/Embedded_course/ERTS_final_project/NN_Code/NN_Code/testbench_vivado.cpp"

#undef NeuralNetwork
#18 "C:/Users/jespe/Desktop/Uni_Civil_9_Semester/Embedded_course/ERTS_final_project/NN_Code/NN_Code/testbench_vivado.cpp"
(testImage, newWeights, true, false, false);

 if (res != testLabel)
 {
  retVal = -1;
 }

 res = 
#ifndef HLS_FASTSIM
#define NeuralNetwork AESL_WRAP_NeuralNetwork
#endif

#25 "C:/Users/jespe/Desktop/Uni_Civil_9_Semester/Embedded_course/ERTS_final_project/NN_Code/NN_Code/testbench_vivado.cpp"

#ifndef HLS_FASTSIM
#define NeuralNetwork AESL_WRAP_NeuralNetwork
#endif

#25 "C:/Users/jespe/Desktop/Uni_Civil_9_Semester/Embedded_course/ERTS_final_project/NN_Code/NN_Code/testbench_vivado.cpp"
NeuralNetwork
#undef NeuralNetwork
#25 "C:/Users/jespe/Desktop/Uni_Civil_9_Semester/Embedded_course/ERTS_final_project/NN_Code/NN_Code/testbench_vivado.cpp"

#undef NeuralNetwork
#25 "C:/Users/jespe/Desktop/Uni_Civil_9_Semester/Embedded_course/ERTS_final_project/NN_Code/NN_Code/testbench_vivado.cpp"
(testImage, newWeights, false, false, true);
 if ((unsigned char)res != 0xff)
 {
  retVal = -2;
 }

 res = 
#ifndef HLS_FASTSIM
#define NeuralNetwork AESL_WRAP_NeuralNetwork
#endif

#31 "C:/Users/jespe/Desktop/Uni_Civil_9_Semester/Embedded_course/ERTS_final_project/NN_Code/NN_Code/testbench_vivado.cpp"

#ifndef HLS_FASTSIM
#define NeuralNetwork AESL_WRAP_NeuralNetwork
#endif

#31 "C:/Users/jespe/Desktop/Uni_Civil_9_Semester/Embedded_course/ERTS_final_project/NN_Code/NN_Code/testbench_vivado.cpp"
NeuralNetwork
#undef NeuralNetwork
#31 "C:/Users/jespe/Desktop/Uni_Civil_9_Semester/Embedded_course/ERTS_final_project/NN_Code/NN_Code/testbench_vivado.cpp"

#undef NeuralNetwork
#31 "C:/Users/jespe/Desktop/Uni_Civil_9_Semester/Embedded_course/ERTS_final_project/NN_Code/NN_Code/testbench_vivado.cpp"
(testImage, newBias, false, true, false);
 if ((unsigned char)res != 0xff)
 {
  retVal = -3;
 }

 res = 
#ifndef HLS_FASTSIM
#define NeuralNetwork AESL_WRAP_NeuralNetwork
#endif

#37 "C:/Users/jespe/Desktop/Uni_Civil_9_Semester/Embedded_course/ERTS_final_project/NN_Code/NN_Code/testbench_vivado.cpp"

#ifndef HLS_FASTSIM
#define NeuralNetwork AESL_WRAP_NeuralNetwork
#endif

#37 "C:/Users/jespe/Desktop/Uni_Civil_9_Semester/Embedded_course/ERTS_final_project/NN_Code/NN_Code/testbench_vivado.cpp"
NeuralNetwork
#undef NeuralNetwork
#37 "C:/Users/jespe/Desktop/Uni_Civil_9_Semester/Embedded_course/ERTS_final_project/NN_Code/NN_Code/testbench_vivado.cpp"

#undef NeuralNetwork
#37 "C:/Users/jespe/Desktop/Uni_Civil_9_Semester/Embedded_course/ERTS_final_project/NN_Code/NN_Code/testbench_vivado.cpp"
(testImage, newBias, true, false, false);
 if (res != 0x00)
 {
  retVal = -4;
 }

 return retVal;
}
#endif
#44 "C:/Users/jespe/Desktop/Uni_Civil_9_Semester/Embedded_course/ERTS_final_project/NN_Code/NN_Code/testbench_vivado.cpp"

# 1 "C:/Users/jespe/Desktop/Uni_Civil_9_Semester/Embedded_course/ERTS_final_project/HLS_project/NeuralNetwork_HLS/solution1_/.autopilot/db/neuralnetwork_ccode.pragma.1.cpp"
# 1 "C:/Users/jespe/Desktop/Uni_Civil_9_Semester/Embedded_course/ERTS_final_project/HLS_project/NeuralNetwork_HLS/solution1_/.autopilot/db/neuralnetwork_ccode.pragma.1.cpp" 1
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 153 "<built-in>" 3
# 1 "<command line>" 1






# 1 "C:/Xilinx/Vivado_HLS/2017.2/common/technology/autopilot\\etc/autopilot_ssdm_op.h" 1
/* autopilot_ssdm_op.h*/
/*
#-  (c) Copyright 2011-2017 Xilinx, Inc. All rights reserved.
#-
#-  This file contains confidential and proprietary information
#-  of Xilinx, Inc. and is protected under U.S. and
#-  international copyright and other intellectual property
#-  laws.
#-
#-  DISCLAIMER
#-  This disclaimer is not a license and does not grant any
#-  rights to the materials distributed herewith. Except as
#-  otherwise provided in a valid license issued to you by
#-  Xilinx, and to the maximum extent permitted by applicable
#-  law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
#-  WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
#-  AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
#-  BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
#-  INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
#-  (2) Xilinx shall not be liable (whether in contract or tort,
#-  including negligence, or under any other theory of
#-  liability) for any loss or damage of any kind or nature
#-  related to, arising under or in connection with these
#-  materials, including for any direct, or any indirect,
#-  special, incidental, or consequential loss or damage
#-  (including loss of data, profits, goodwill, or any type of
#-  loss or damage suffered as a result of any action brought
#-  by a third party) even if such damage or loss was
#-  reasonably foreseeable or Xilinx had been advised of the
#-  possibility of the same.
#-
#-  CRITICAL APPLICATIONS
#-  Xilinx products are not designed or intended to be fail-
#-  safe, or for use in any application requiring fail-safe
#-  performance, such as life-support or safety devices or
#-  systems, Class III medical devices, nuclear facilities,
#-  applications related to the deployment of airbags, or any
#-  other applications that could lead to death, personal
#-  injury, or severe property or environmental damage
#-  (individually and collectively, "Critical
#-  Applications"). Customer assumes the sole risk and
#-  liability of any use of Xilinx products in Critical
#-  Applications, subject only to applicable laws and
#-  regulations governing limitations on product liability.
#-
#-  THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
#-  PART OF THIS FILE AT ALL TIMES. 
#- ************************************************************************

 *
 * $Id$
 */
# 145 "C:/Xilinx/Vivado_HLS/2017.2/common/technology/autopilot\\etc/autopilot_ssdm_op.h"
/*#define AP_SPEC_ATTR __attribute__ ((pure))*/
//adu: patched
# 156 "C:/Xilinx/Vivado_HLS/2017.2/common/technology/autopilot\\etc/autopilot_ssdm_op.h"
extern "C" {

    /****** SSDM Intrinsics: OPERATIONS ***/
    // Interface operations

    //typedef unsigned int __attribute__ ((bitwidth(1))) _uint1_;
    typedef bool _uint1_;

    void _ssdm_op_IfRead(...) __attribute__ ((nothrow));
    void _ssdm_op_IfWrite(...) __attribute__ ((nothrow));
    _uint1_ _ssdm_op_IfNbRead(...) __attribute__ ((nothrow));
    _uint1_ _ssdm_op_IfNbWrite(...) __attribute__ ((nothrow));
    _uint1_ _ssdm_op_IfCanRead(...) __attribute__ ((nothrow));
    _uint1_ _ssdm_op_IfCanWrite(...) __attribute__ ((nothrow));

    // Stream Intrinsics
    void _ssdm_StreamRead(...) __attribute__ ((nothrow));
    void _ssdm_StreamWrite(...) __attribute__ ((nothrow));
    _uint1_ _ssdm_StreamNbRead(...) __attribute__ ((nothrow));
    _uint1_ _ssdm_StreamNbWrite(...) __attribute__ ((nothrow));
    _uint1_ _ssdm_StreamCanRead(...) __attribute__ ((nothrow));
    _uint1_ _ssdm_StreamCanWrite(...) __attribute__ ((nothrow));
    unsigned _ssdm_StreamSize(...) __attribute__ ((nothrow));

    // Misc
    void _ssdm_op_MemShiftRead(...) __attribute__ ((nothrow));

    void _ssdm_op_Wait(...) __attribute__ ((nothrow));
    void _ssdm_op_Poll(...) __attribute__ ((nothrow));

    void _ssdm_op_Return(...) __attribute__ ((nothrow));

    /* SSDM Intrinsics: SPECIFICATIONS */
    void _ssdm_op_SpecSynModule(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecTopModule(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecProcessDecl(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecProcessDef(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecPort(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecConnection(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecChannel(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecSensitive(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecModuleInst(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecPortMap(...) __attribute__ ((nothrow));

    void _ssdm_op_SpecReset(...) __attribute__ ((nothrow));

    void _ssdm_op_SpecPlatform(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecClockDomain(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecPowerDomain(...) __attribute__ ((nothrow));

    int _ssdm_op_SpecRegionBegin(...) __attribute__ ((nothrow));
    int _ssdm_op_SpecRegionEnd(...) __attribute__ ((nothrow));

    void _ssdm_op_SpecLoopName(...) __attribute__ ((nothrow));

    void _ssdm_op_SpecLoopTripCount(...) __attribute__ ((nothrow));

    int _ssdm_op_SpecStateBegin(...) __attribute__ ((nothrow));
    int _ssdm_op_SpecStateEnd(...) __attribute__ ((nothrow));

    void _ssdm_op_SpecInterface(...) __attribute__ ((nothrow));

    void _ssdm_op_SpecPipeline(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecDataflowPipeline(...) __attribute__ ((nothrow));


    void _ssdm_op_SpecLatency(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecParallel(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecProtocol(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecOccurrence(...) __attribute__ ((nothrow));

    void _ssdm_op_SpecResource(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecResourceLimit(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecCHCore(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecFUCore(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecIFCore(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecIPCore(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecKeepValue(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecMemCore(...) __attribute__ ((nothrow));

    void _ssdm_op_SpecExt(...) __attribute__ ((nothrow));
    /*void* _ssdm_op_SpecProcess(...) SSDM_SPEC_ATTR;
    void* _ssdm_op_SpecEdge(...) SSDM_SPEC_ATTR; */

    /* Presynthesis directive functions */
    void _ssdm_SpecArrayDimSize(...) __attribute__ ((nothrow));

    void _ssdm_RegionBegin(...) __attribute__ ((nothrow));
    void _ssdm_RegionEnd(...) __attribute__ ((nothrow));

    void _ssdm_Unroll(...) __attribute__ ((nothrow));
    void _ssdm_UnrollRegion(...) __attribute__ ((nothrow));

    void _ssdm_InlineAll(...) __attribute__ ((nothrow));
    void _ssdm_InlineLoop(...) __attribute__ ((nothrow));
    void _ssdm_Inline(...) __attribute__ ((nothrow));
    void _ssdm_InlineSelf(...) __attribute__ ((nothrow));
    void _ssdm_InlineRegion(...) __attribute__ ((nothrow));

    void _ssdm_SpecArrayMap(...) __attribute__ ((nothrow));
    void _ssdm_SpecArrayPartition(...) __attribute__ ((nothrow));
    void _ssdm_SpecArrayReshape(...) __attribute__ ((nothrow));

    void _ssdm_SpecStream(...) __attribute__ ((nothrow));

    void _ssdm_SpecExpr(...) __attribute__ ((nothrow));
    void _ssdm_SpecExprBalance(...) __attribute__ ((nothrow));

    void _ssdm_SpecDependence(...) __attribute__ ((nothrow));

    void _ssdm_SpecLoopMerge(...) __attribute__ ((nothrow));
    void _ssdm_SpecLoopFlatten(...) __attribute__ ((nothrow));
    void _ssdm_SpecLoopRewind(...) __attribute__ ((nothrow));

    void _ssdm_SpecFuncInstantiation(...) __attribute__ ((nothrow));
    void _ssdm_SpecFuncBuffer(...) __attribute__ ((nothrow));
    void _ssdm_SpecFuncExtract(...) __attribute__ ((nothrow));
    void _ssdm_SpecConstant(...) __attribute__ ((nothrow));

    void _ssdm_DataPack(...) __attribute__ ((nothrow));
    void _ssdm_SpecDataPack(...) __attribute__ ((nothrow));

    void _ssdm_op_SpecBitsMap(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecLicense(...) __attribute__ ((nothrow));

    void __xilinx_ip_top(...) __attribute__ ((nothrow));


}
# 413 "C:/Xilinx/Vivado_HLS/2017.2/common/technology/autopilot\\etc/autopilot_ssdm_op.h"
/*#define _ssdm_op_WaitUntil(X) while (!(X)) _ssdm_op_Wait(1);
#define _ssdm_op_Delayed(X) X */
# 427 "C:/Xilinx/Vivado_HLS/2017.2/common/technology/autopilot\\etc/autopilot_ssdm_op.h"
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689
# 8 "<command line>" 2
# 1 "<built-in>" 2
# 1 "C:/Users/jespe/Desktop/Uni_Civil_9_Semester/Embedded_course/ERTS_final_project/HLS_project/NeuralNetwork_HLS/solution1_/.autopilot/db/neuralnetwork_ccode.pragma.1.cpp" 2
# 1 "../NN_Code/NN_Code/neuralnetwork_ccode.cpp"
# 1 "../NN_Code/NN_Code/neuralnetwork_ccode.cpp" 1
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 153 "<built-in>" 3
# 1 "<command line>" 1






# 1 "C:/Xilinx/Vivado_HLS/2017.2/common/technology/autopilot\\etc/autopilot_ssdm_op.h" 1
/* autopilot_ssdm_op.h*/
/*
#-  (c) Copyright 2011-2017 Xilinx, Inc. All rights reserved.
#-
#-  This file contains confidential and proprietary information
#-  of Xilinx, Inc. and is protected under U.S. and
#-  international copyright and other intellectual property
#-  laws.
#-
#-  DISCLAIMER
#-  This disclaimer is not a license and does not grant any
#-  rights to the materials distributed herewith. Except as
#-  otherwise provided in a valid license issued to you by
#-  Xilinx, and to the maximum extent permitted by applicable
#-  law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
#-  WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
#-  AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
#-  BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
#-  INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
#-  (2) Xilinx shall not be liable (whether in contract or tort,
#-  including negligence, or under any other theory of
#-  liability) for any loss or damage of any kind or nature
#-  related to, arising under or in connection with these
#-  materials, including for any direct, or any indirect,
#-  special, incidental, or consequential loss or damage
#-  (including loss of data, profits, goodwill, or any type of
#-  loss or damage suffered as a result of any action brought
#-  by a third party) even if such damage or loss was
#-  reasonably foreseeable or Xilinx had been advised of the
#-  possibility of the same.
#-
#-  CRITICAL APPLICATIONS
#-  Xilinx products are not designed or intended to be fail-
#-  safe, or for use in any application requiring fail-safe
#-  performance, such as life-support or safety devices or
#-  systems, Class III medical devices, nuclear facilities,
#-  applications related to the deployment of airbags, or any
#-  other applications that could lead to death, personal
#-  injury, or severe property or environmental damage
#-  (individually and collectively, "Critical
#-  Applications"). Customer assumes the sole risk and
#-  liability of any use of Xilinx products in Critical
#-  Applications, subject only to applicable laws and
#-  regulations governing limitations on product liability.
#-
#-  THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
#-  PART OF THIS FILE AT ALL TIMES. 
#- ************************************************************************

 *
 * $Id$
 */
# 145 "C:/Xilinx/Vivado_HLS/2017.2/common/technology/autopilot\\etc/autopilot_ssdm_op.h"
/*#define AP_SPEC_ATTR __attribute__ ((pure))*/
//adu: patched
# 156 "C:/Xilinx/Vivado_HLS/2017.2/common/technology/autopilot\\etc/autopilot_ssdm_op.h"
extern "C" {

    /****** SSDM Intrinsics: OPERATIONS ***/
    // Interface operations

    //typedef unsigned int __attribute__ ((bitwidth(1))) _uint1_;
    typedef bool _uint1_;

    void _ssdm_op_IfRead(...) __attribute__ ((nothrow));
    void _ssdm_op_IfWrite(...) __attribute__ ((nothrow));
    _uint1_ _ssdm_op_IfNbRead(...) __attribute__ ((nothrow));
    _uint1_ _ssdm_op_IfNbWrite(...) __attribute__ ((nothrow));
    _uint1_ _ssdm_op_IfCanRead(...) __attribute__ ((nothrow));
    _uint1_ _ssdm_op_IfCanWrite(...) __attribute__ ((nothrow));

    // Stream Intrinsics
    void _ssdm_StreamRead(...) __attribute__ ((nothrow));
    void _ssdm_StreamWrite(...) __attribute__ ((nothrow));
    _uint1_ _ssdm_StreamNbRead(...) __attribute__ ((nothrow));
    _uint1_ _ssdm_StreamNbWrite(...) __attribute__ ((nothrow));
    _uint1_ _ssdm_StreamCanRead(...) __attribute__ ((nothrow));
    _uint1_ _ssdm_StreamCanWrite(...) __attribute__ ((nothrow));
    unsigned _ssdm_StreamSize(...) __attribute__ ((nothrow));

    // Misc
    void _ssdm_op_MemShiftRead(...) __attribute__ ((nothrow));

    void _ssdm_op_Wait(...) __attribute__ ((nothrow));
    void _ssdm_op_Poll(...) __attribute__ ((nothrow));

    void _ssdm_op_Return(...) __attribute__ ((nothrow));

    /* SSDM Intrinsics: SPECIFICATIONS */
    void _ssdm_op_SpecSynModule(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecTopModule(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecProcessDecl(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecProcessDef(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecPort(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecConnection(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecChannel(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecSensitive(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecModuleInst(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecPortMap(...) __attribute__ ((nothrow));

    void _ssdm_op_SpecReset(...) __attribute__ ((nothrow));

    void _ssdm_op_SpecPlatform(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecClockDomain(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecPowerDomain(...) __attribute__ ((nothrow));

    int _ssdm_op_SpecRegionBegin(...) __attribute__ ((nothrow));
    int _ssdm_op_SpecRegionEnd(...) __attribute__ ((nothrow));

    void _ssdm_op_SpecLoopName(...) __attribute__ ((nothrow));

    void _ssdm_op_SpecLoopTripCount(...) __attribute__ ((nothrow));

    int _ssdm_op_SpecStateBegin(...) __attribute__ ((nothrow));
    int _ssdm_op_SpecStateEnd(...) __attribute__ ((nothrow));

    void _ssdm_op_SpecInterface(...) __attribute__ ((nothrow));

    void _ssdm_op_SpecPipeline(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecDataflowPipeline(...) __attribute__ ((nothrow));


    void _ssdm_op_SpecLatency(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecParallel(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecProtocol(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecOccurrence(...) __attribute__ ((nothrow));

    void _ssdm_op_SpecResource(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecResourceLimit(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecCHCore(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecFUCore(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecIFCore(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecIPCore(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecKeepValue(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecMemCore(...) __attribute__ ((nothrow));

    void _ssdm_op_SpecExt(...) __attribute__ ((nothrow));
    /*void* _ssdm_op_SpecProcess(...) SSDM_SPEC_ATTR;
    void* _ssdm_op_SpecEdge(...) SSDM_SPEC_ATTR; */

    /* Presynthesis directive functions */
    void _ssdm_SpecArrayDimSize(...) __attribute__ ((nothrow));

    void _ssdm_RegionBegin(...) __attribute__ ((nothrow));
    void _ssdm_RegionEnd(...) __attribute__ ((nothrow));

    void _ssdm_Unroll(...) __attribute__ ((nothrow));
    void _ssdm_UnrollRegion(...) __attribute__ ((nothrow));

    void _ssdm_InlineAll(...) __attribute__ ((nothrow));
    void _ssdm_InlineLoop(...) __attribute__ ((nothrow));
    void _ssdm_Inline(...) __attribute__ ((nothrow));
    void _ssdm_InlineSelf(...) __attribute__ ((nothrow));
    void _ssdm_InlineRegion(...) __attribute__ ((nothrow));

    void _ssdm_SpecArrayMap(...) __attribute__ ((nothrow));
    void _ssdm_SpecArrayPartition(...) __attribute__ ((nothrow));
    void _ssdm_SpecArrayReshape(...) __attribute__ ((nothrow));

    void _ssdm_SpecStream(...) __attribute__ ((nothrow));

    void _ssdm_SpecExpr(...) __attribute__ ((nothrow));
    void _ssdm_SpecExprBalance(...) __attribute__ ((nothrow));

    void _ssdm_SpecDependence(...) __attribute__ ((nothrow));

    void _ssdm_SpecLoopMerge(...) __attribute__ ((nothrow));
    void _ssdm_SpecLoopFlatten(...) __attribute__ ((nothrow));
    void _ssdm_SpecLoopRewind(...) __attribute__ ((nothrow));

    void _ssdm_SpecFuncInstantiation(...) __attribute__ ((nothrow));
    void _ssdm_SpecFuncBuffer(...) __attribute__ ((nothrow));
    void _ssdm_SpecFuncExtract(...) __attribute__ ((nothrow));
    void _ssdm_SpecConstant(...) __attribute__ ((nothrow));

    void _ssdm_DataPack(...) __attribute__ ((nothrow));
    void _ssdm_SpecDataPack(...) __attribute__ ((nothrow));

    void _ssdm_op_SpecBitsMap(...) __attribute__ ((nothrow));
    void _ssdm_op_SpecLicense(...) __attribute__ ((nothrow));

    void __xilinx_ip_top(...) __attribute__ ((nothrow));


}
# 413 "C:/Xilinx/Vivado_HLS/2017.2/common/technology/autopilot\\etc/autopilot_ssdm_op.h"
/*#define _ssdm_op_WaitUntil(X) while (!(X)) _ssdm_op_Wait(1);
#define _ssdm_op_Delayed(X) X */
# 427 "C:/Xilinx/Vivado_HLS/2017.2/common/technology/autopilot\\etc/autopilot_ssdm_op.h"
// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689
# 8 "<command line>" 2
# 1 "<built-in>" 2
# 1 "../NN_Code/NN_Code/neuralnetwork_ccode.cpp" 2
# 1 "../NN_Code/NN_Code/neuralnetwork_ccode.hpp" 1
# 15 "../NN_Code/NN_Code/neuralnetwork_ccode.hpp"
void setBias(char bias_r[(70*2) + 10]);

short int getBias(unsigned char layer, unsigned char neuron);

void setWeights(char weights_r[80*70 + 70*70 + 10*70]);

char getWeight(unsigned char layer, unsigned char neuron, unsigned char number);

void runLayer(unsigned char layer, unsigned char numOfInNeurons, unsigned char numOfOutNeurons, int * input, int * output);

void relu(int* data, unsigned char numOfNeurons);

unsigned char softmax_lite(int* data, unsigned char numOfNeurons);

unsigned char run_classification(int * input_r);

unsigned char NeuralNetwork(int input_r[80], char biasWeight_input_r[80*70 + 70*70 + 10*70], char runNN_r, char setBais_r, char setWeight_r);
# 2 "../NN_Code/NN_Code/neuralnetwork_ccode.cpp" 2

static char bias_[(70*2) + 10] = {


# 1 "../NN_Code/NN_Code/bias.dat" 1
0,
-1,
0,
0,
-2,
-1,
2,
0,
-2,
1,
-3,
0,
-3,
2,
0,
3,
-1,
-2,
-1,
-1,
0,
2,
2,
-1,
0,
0,
1,
0,
0,
-2,
0,
-2,
2,
4,
0,
3,
-3,
-2,
0,
2,
2,
2,
0,
3,
-1,
2,
2,
-1,
1,
-2,
1,
3,
0,
-1,
-2,
2,
2,
1,
-1,
-1,
2,
-2,
0,
0,
2,
2,
2,
0,
-2,
4,
3,
4,
0,
-1,
0,
2,
-2,
4,
1,
-1,
1,
4,
0,
-1,
3,
1,
1,
-1,
2,
-1,
1,
1,
0,
0,
3,
0,
-1,
1,
0,
3,
1,
-1,
3,
1,
-1,
1,
3,
0,
1,
0,
4,
0,
0,
0,
1,
0,
-1,
-1,
-2,
0,
1,
4,
2,
-2,
2,
2,
-2,
-1,
0,
3,
-1,
2,
-1,
5,
0,
-1,
-1,
1,
2,
1,
0,
0,
-1,
0,
0,
-1,
1,
-3,
4,
1,
# 5 "../NN_Code/NN_Code/neuralnetwork_ccode.cpp" 2
};

static char weights_[80*70 + 70*70 + 10*70] = {


# 1 "../NN_Code/NN_Code/weights.dat" 1
-2,
-1,
-1,
6,
1,
0,
2,
3,
3,
-1,
2,
1,
-2,
3,
-1,
1,
4,
-5,
-1,
-2,
-3,
1,
0,
-3,
-4,
0,
0,
2,
1,
5,
-3,
-2,
5,
1,
-2,
-1,
3,
3,
-2,
3,
3,
1,
4,
2,
1,
0,
-1,
-2,
-4,
-1,
-2,
2,
0,
-1,
-6,
4,
1,
-2,
-1,
2,
-4,
-2,
-2,
0,
-2,
5,
0,
-1,
2,
0,
1,
-1,
0,
2,
-5,
-3,
-2,
4,
2,
-4,
-1,
-6,
-2,
1,
2,
-2,
3,
2,
1,
-2,
4,
-1,
-3,
-2,
2,
3,
4,
0,
0,
0,
1,
-3,
3,
3,
3,
0,
3,
1,
3,
-2,
3,
-2,
-3,
-3,
3,
-1,
1,
4,
-2,
2,
0,
4,
-2,
-1,
3,
-4,
-1,
4,
-3,
5,
-7,
-2,
-5,
-3,
-2,
1,
1,
5,
1,
4,
-1,
-1,
-1,
4,
-2,
2,
0,
-5,
-6,
2,
0,
0,
-5,
2,
-2,
1,
-2,
5,
-2,
1,
-2,
0,
-5,
3,
-4,
7,
0,
1,
3,
-1,
1,
-1,
-3,
-1,
2,
1,
0,
-3,
-1,
-4,
1,
-2,
2,
4,
0,
-4,
4,
-2,
1,
2,
3,
-5,
-1,
0,
1,
-3,
3,
3,
2,
0,
-3,
-2,
0,
-2,
0,
5,
-2,
2,
-4,
4,
0,
5,
0,
-1,
-5,
1,
4,
-1,
1,
-2,
5,
0,
-5,
1,
1,
0,
-4,
-6,
-1,
5,
-1,
1,
-5,
-3,
-3,
4,
-4,
3,
0,
1,
-3,
2,
0,
2,
-1,
1,
-2,
1,
-1,
0,
0,
-2,
2,
-4,
5,
-5,
-3,
1,
1,
-2,
5,
2,
1,
-2,
-2,
-5,
-4,
-3,
5,
3,
-3,
1,
-1,
1,
-2,
2,
0,
0,
1,
4,
1,
2,
1,
-3,
-1,
3,
-2,
0,
-1,
1,
0,
-1,
3,
-2,
0,
4,
-6,
-3,
0,
4,
-1,
-5,
1,
-1,
-1,
-1,
-2,
1,
0,
-4,
6,
-3,
-1,
1,
-5,
5,
-3,
-1,
0,
-1,
-3,
2,
1,
-2,
0,
0,
3,
0,
4,
3,
0,
1,
0,
1,
1,
-3,
0,
2,
0,
0,
2,
4,
1,
1,
0,
-1,
2,
1,
-1,
2,
-1,
0,
-2,
4,
-1,
-1,
-2,
-3,
-1,
-2,
-1,
1,
-1,
0,
0,
5,
2,
2,
0,
1,
-4,
5,
4,
-3,
-2,
-1,
0,
1,
-2,
-1,
-5,
-8,
1,
0,
2,
-3,
-3,
0,
0,
3,
-1,
0,
-6,
-1,
-2,
-1,
0,
-2,
2,
-1,
-1,
-1,
7,
-1,
-1,
-2,
4,
0,
-2,
3,
0,
5,
3,
-3,
-3,
-4,
0,
3,
-1,
-3,
-4,
0,
0,
-5,
3,
-3,
3,
-2,
-3,
-2,
0,
-1,
-1,
0,
6,
0,
4,
-1,
-3,
0,
3,
0,
-3,
-3,
-3,
-2,
-1,
-1,
0,
-1,
1,
5,
0,
-2,
-4,
-2,
-3,
-3,
4,
3,
-2,
-1,
-1,
-4,
4,
0,
-1,
3,
2,
-4,
5,
-1,
-1,
-1,
-3,
0,
2,
0,
4,
-1,
1,
-1,
-1,
-3,
0,
-3,
0,
1,
1,
-6,
-1,
0,
4,
0,
5,
-2,
3,
2,
-6,
2,
3,
3,
-2,
-3,
0,
0,
-1,
0,
0,
0,
1,
-2,
-3,
5,
-2,
0,
-4,
1,
4,
-1,
4,
-2,
2,
-4,
-1,
-4,
-2,
4,
-2,
1,
0,
-1,
-3,
1,
-1,
-1,
0,
3,
-4,
0,
0,
1,
3,
0,
-3,
-4,
-1,
-6,
2,
4,
1,
0,
-1,
3,
-3,
3,
-3,
0,
-1,
-2,
0,
-2,
-4,
-2,
-4,
-1,
3,
2,
-2,
-2,
2,
-5,
-4,
1,
-2,
-6,
-2,
4,
0,
0,
3,
5,
-2,
-1,
3,
3,
1,
2,
1,
0,
4,
4,
-2,
1,
3,
-3,
-3,
-1,
2,
2,
3,
0,
-4,
2,
-1,
0,
-4,
-4,
-1,
-1,
-2,
1,
2,
0,
3,
-4,
-2,
-2,
-4,
-4,
0,
-3,
2,
0,
-3,
-3,
-1,
2,
-4,
-1,
0,
-1,
6,
-1,
-3,
0,
-4,
6,
1,
4,
0,
-2,
-3,
-2,
1,
0,
-1,
0,
-1,
1,
-3,
1,
3,
1,
-1,
2,
-3,
1,
-3,
5,
-2,
1,
-1,
-1,
-3,
1,
-7,
1,
1,
-2,
0,
-4,
0,
3,
-3,
5,
-2,
3,
2,
-4,
0,
0,
1,
4,
0,
0,
2,
-4,
8,
-3,
0,
4,
-4,
-3,
1,
0,
-2,
1,
-2,
-1,
1,
1,
0,
4,
-3,
1,
2,
0,
-1,
4,
-1,
0,
4,
-1,
-1,
-3,
-3,
-2,
2,
-3,
2,
0,
3,
-2,
1,
0,
1,
-5,
0,
-2,
5,
5,
-6,
1,
1,
-3,
-3,
1,
-5,
0,
-1,
2,
1,
-3,
-6,
2,
0,
-2,
-3,
-3,
-4,
1,
-3,
2,
-2,
-1,
4,
1,
1,
-3,
-3,
4,
-5,
-1,
-1,
2,
1,
-2,
0,
1,
2,
-1,
1,
-2,
1,
-2,
-3,
3,
-4,
1,
-3,
1,
3,
2,
-4,
-2,
-1,
0,
0,
3,
0,
0,
1,
3,
5,
1,
0,
-3,
1,
1,
-1,
0,
-3,
-1,
-4,
2,
-2,
5,
-2,
2,
2,
2,
-1,
3,
2,
-2,
0,
-1,
-3,
2,
3,
-4,
5,
-1,
1,
-4,
-4,
2,
-1,
3,
0,
0,
-2,
3,
-2,
-2,
-2,
-3,
2,
4,
-1,
0,
4,
1,
1,
6,
0,
2,
0,
-1,
3,
-5,
-5,
-3,
0,
-5,
-3,
1,
-5,
-7,
0,
-3,
-3,
4,
-3,
-2,
3,
-3,
-3,
1,
-3,
-3,
-3,
0,
3,
-4,
6,
-4,
0,
1,
-2,
-1,
0,
2,
2,
2,
-1,
3,
5,
0,
2,
-1,
-1,
-4,
0,
-4,
1,
-1,
-1,
-1,
0,
-4,
4,
-2,
-3,
-5,
3,
-3,
-1,
2,
5,
-1,
0,
4,
3,
-5,
-1,
-1,
0,
0,
2,
-1,
4,
-4,
4,
-1,
0,
-3,
1,
1,
5,
0,
0,
4,
-3,
2,
0,
0,
-1,
1,
-2,
1,
1,
-1,
0,
-1,
-1,
-2,
-1,
-2,
-5,
3,
5,
0,
3,
2,
1,
-4,
1,
0,
1,
2,
0,
1,
2,
-2,
-3,
2,
-1,
0,
-2,
2,
3,
-5,
2,
-3,
1,
1,
3,
1,
1,
0,
-2,
-3,
3,
-1,
5,
0,
0,
2,
0,
2,
-1,
-2,
0,
-4,
0,
-1,
-5,
1,
-4,
-4,
-2,
-1,
-1,
-2,
-4,
-2,
1,
-6,
-1,
-3,
1,
0,
-1,
0,
4,
-1,
-1,
-3,
-1,
4,
1,
-1,
0,
-1,
-3,
3,
-5,
2,
-2,
-3,
-2,
2,
-1,
1,
-1,
-3,
1,
-1,
3,
3,
4,
-1,
-1,
5,
1,
-1,
4,
0,
3,
1,
0,
3,
1,
-1,
-1,
1,
-1,
-1,
-6,
5,
0,
1,
6,
-1,
1,
0,
3,
2,
-2,
4,
-1,
2,
-3,
-1,
6,
0,
2,
0,
0,
0,
2,
9,
-1,
-4,
2,
1,
-1,
-4,
-3,
2,
2,
-1,
-1,
-1,
-2,
-2,
0,
3,
1,
1,
0,
2,
1,
3,
1,
1,
0,
1,
-3,
-6,
1,
2,
-1,
-1,
2,
-5,
4,
-3,
1,
2,
-5,
0,
2,
5,
2,
1,
4,
3,
-1,
0,
5,
-4,
-1,
2,
5,
2,
-1,
1,
-1,
5,
-3,
2,
-1,
1,
2,
-3,
-2,
0,
-1,
-2,
2,
2,
-3,
-1,
-1,
3,
4,
0,
-2,
3,
2,
3,
-3,
1,
1,
-2,
4,
2,
2,
-3,
2,
4,
0,
5,
0,
-1,
-3,
-2,
2,
3,
3,
-2,
1,
-2,
1,
3,
-2,
5,
-2,
-2,
-3,
-2,
-3,
8,
-1,
1,
2,
-2,
-5,
3,
-1,
1,
-1,
0,
-2,
3,
1,
6,
3,
0,
1,
1,
2,
-2,
-2,
-1,
4,
4,
1,
-2,
2,
1,
1,
-4,
2,
-3,
-1,
-1,
6,
0,
3,
0,
-1,
2,
1,
-6,
-2,
1,
-2,
0,
1,
2,
1,
1,
0,
6,
0,
4,
-3,
6,
-2,
2,
-4,
-2,
0,
0,
-4,
-3,
2,
1,
-1,
-1,
-3,
1,
-1,
-1,
4,
-1,
-7,
-2,
4,
-2,
5,
-5,
3,
2,
8,
1,
-1,
-3,
-1,
-3,
-2,
2,
0,
4,
-1,
-1,
-2,
-2,
-1,
1,
-1,
-5,
2,
2,
0,
3,
-3,
-2,
0,
1,
2,
5,
-2,
4,
2,
-2,
-2,
3,
3,
3,
-1,
3,
4,
1,
3,
1,
0,
-1,
-4,
3,
-2,
0,
-1,
3,
1,
-1,
-2,
6,
-2,
-1,
0,
3,
3,
5,
1,
0,
4,
-4,
0,
1,
2,
-1,
-1,
-4,
-5,
0,
1,
5,
-2,
0,
-2,
1,
1,
7,
1,
-2,
5,
-5,
0,
2,
-2,
2,
-3,
3,
-3,
-5,
-5,
1,
4,
-1,
-3,
-2,
0,
2,
2,
2,
-3,
-1,
2,
-2,
-2,
2,
3,
1,
-2,
2,
0,
-1,
1,
2,
4,
-2,
2,
0,
2,
-3,
-3,
2,
-2,
-2,
1,
3,
0,
2,
0,
-2,
1,
1,
2,
1,
-4,
0,
1,
-1,
3,
0,
-2,
4,
-1,
-4,
1,
0,
2,
-2,
0,
-1,
-2,
3,
0,
-2,
-2,
1,
-4,
5,
8,
-1,
-2,
-1,
-1,
1,
1,
-2,
6,
5,
0,
1,
0,
1,
1,
-3,
3,
2,
6,
-1,
-2,
-2,
-2,
0,
4,
1,
1,
-4,
2,
-3,
3,
2,
-4,
0,
-1,
-2,
2,
4,
2,
-1,
-3,
0,
-5,
-6,
-2,
3,
-7,
-2,
2,
-2,
2,
0,
2,
2,
-1,
-3,
0,
-2,
-3,
-3,
-1,
-6,
-3,
1,
-4,
-2,
2,
3,
0,
0,
-2,
-2,
4,
-5,
0,
6,
-5,
-1,
0,
1,
2,
1,
2,
4,
-1,
5,
4,
1,
-1,
-2,
3,
1,
2,
3,
-2,
-4,
-2,
0,
0,
4,
-4,
-2,
0,
3,
0,
1,
4,
-4,
-3,
1,
0,
-1,
-2,
1,
1,
-1,
4,
3,
0,
-2,
-2,
-2,
-2,
2,
-1,
-1,
2,
-3,
3,
-1,
1,
2,
0,
1,
-1,
1,
1,
-5,
-4,
4,
-2,
-4,
-1,
2,
1,
-2,
0,
1,
-2,
-2,
-2,
1,
1,
3,
2,
4,
-4,
3,
4,
-1,
1,
1,
0,
3,
0,
3,
3,
-1,
-2,
-2,
-1,
0,
-2,
2,
2,
-2,
-1,
-2,
-6,
-2,
0,
-1,
3,
0,
3,
0,
1,
1,
-1,
0,
-3,
-3,
-1,
0,
4,
0,
-5,
-2,
3,
2,
4,
0,
-1,
1,
0,
-3,
0,
5,
0,
3,
-1,
0,
2,
-2,
-2,
5,
-1,
0,
-3,
-1,
-4,
2,
1,
4,
-2,
-3,
2,
5,
0,
-1,
2,
-2,
5,
3,
-1,
1,
-1,
4,
-4,
2,
-1,
2,
-1,
0,
0,
3,
-1,
0,
-2,
-4,
-2,
4,
2,
-3,
5,
3,
2,
-2,
-1,
-4,
5,
-3,
2,
-1,
2,
-2,
4,
-2,
3,
-1,
-1,
1,
3,
0,
3,
0,
0,
3,
3,
-1,
-1,
1,
1,
-1,
-2,
-1,
1,
-1,
0,
1,
0,
-4,
6,
-2,
-5,
-5,
4,
3,
-3,
-2,
0,
0,
1,
3,
0,
-1,
-1,
-2,
-1,
-2,
0,
-3,
2,
-2,
1,
-1,
1,
-3,
3,
1,
-2,
-3,
0,
-1,
0,
5,
4,
-3,
2,
0,
0,
3,
5,
4,
-1,
3,
-1,
-4,
-2,
-1,
2,
4,
-1,
-2,
1,
-5,
-3,
1,
1,
0,
-3,
-4,
-4,
1,
1,
5,
-2,
1,
-4,
0,
-5,
3,
4,
-1,
1,
2,
1,
-3,
1,
-1,
0,
1,
3,
6,
0,
4,
2,
0,
-1,
1,
-1,
3,
-1,
2,
-2,
0,
1,
1,
-2,
5,
-1,
-4,
-2,
1,
-2,
1,
-1,
2,
3,
0,
-1,
0,
-1,
1,
1,
3,
-2,
-1,
-2,
-3,
-1,
0,
3,
0,
3,
3,
-1,
-2,
-1,
3,
2,
-2,
0,
2,
-6,
1,
4,
2,
0,
0,
-1,
0,
3,
-2,
3,
-1,
-4,
-3,
1,
0,
1,
-2,
0,
1,
1,
-3,
3,
-3,
1,
1,
1,
2,
3,
1,
0,
1,
0,
1,
4,
-1,
-2,
0,
2,
3,
-1,
-2,
3,
-2,
-1,
0,
-3,
-3,
-2,
2,
-3,
2,
0,
-7,
2,
2,
1,
2,
-1,
-7,
2,
2,
0,
-2,
1,
1,
3,
-1,
-3,
-4,
-3,
-1,
-2,
-4,
-4,
-3,
0,
-3,
2,
0,
0,
3,
-1,
2,
1,
4,
0,
-2,
4,
0,
-3,
2,
-2,
2,
-2,
0,
0,
4,
0,
5,
0,
2,
-3,
0,
2,
-2,
-4,
-1,
0,
2,
1,
2,
1,
2,
-5,
1,
2,
-1,
1,
1,
-1,
2,
0,
-2,
-3,
1,
4,
0,
1,
0,
3,
2,
-1,
1,
2,
-1,
-1,
2,
0,
-2,
-3,
-2,
2,
-4,
-2,
-1,
-2,
1,
-1,
-1,
2,
7,
2,
3,
-4,
-1,
-4,
-1,
-4,
4,
-5,
4,
2,
1,
2,
3,
-5,
0,
-1,
-4,
-2,
-2,
2,
1,
0,
-1,
-1,
2,
1,
2,
2,
0,
1,
-1,
0,
1,
-2,
-1,
0,
2,
2,
2,
5,
-3,
8,
-7,
2,
1,
3,
1,
0,
-1,
2,
-3,
3,
2,
2,
1,
2,
1,
2,
-2,
1,
1,
2,
2,
1,
2,
3,
2,
-2,
-1,
1,
1,
-3,
3,
-2,
-3,
-1,
-2,
1,
-2,
-2,
1,
5,
-5,
-4,
-1,
3,
1,
2,
1,
-5,
2,
1,
0,
-3,
3,
1,
2,
-3,
-2,
-2,
3,
2,
1,
-3,
-1,
-5,
0,
-2,
1,
2,
-3,
3,
-1,
-1,
0,
1,
-1,
0,
3,
0,
2,
-4,
3,
-1,
5,
0,
-4,
-6,
-1,
2,
0,
-1,
3,
-5,
-8,
-2,
2,
2,
2,
-1,
1,
-5,
5,
0,
-6,
-3,
2,
2,
1,
-7,
1,
-2,
-2,
2,
-1,
-7,
3,
2,
1,
-3,
0,
2,
1,
-4,
2,
2,
3,
1,
0,
-3,
0,
-4,
-1,
-2,
-3,
2,
-4,
-3,
2,
-1,
0,
5,
-1,
-4,
-2,
-1,
0,
-1,
1,
1,
0,
2,
2,
-1,
-2,
-3,
-2,
0,
0,
2,
-1,
3,
1,
0,
2,
-2,
2,
-1,
3,
1,
1,
3,
0,
-3,
3,
1,
-4,
0,
-3,
-1,
-1,
2,
0,
4,
-1,
-3,
-2,
1,
2,
-1,
-1,
2,
0,
3,
-3,
-4,
-1,
-2,
2,
-2,
-4,
4,
4,
-1,
-1,
-1,
0,
1,
-4,
-3,
1,
-1,
0,
-3,
4,
-4,
0,
-3,
0,
2,
-2,
1,
-1,
-3,
0,
-2,
-3,
1,
2,
1,
-3,
5,
1,
4,
-1,
-3,
2,
-1,
2,
-1,
2,
6,
0,
-1,
-3,
2,
1,
1,
1,
-5,
-5,
1,
1,
-4,
-1,
0,
-4,
3,
-3,
3,
4,
1,
3,
0,
-6,
3,
2,
1,
-4,
-1,
0,
1,
-1,
2,
-1,
5,
0,
1,
1,
0,
-1,
-2,
-2,
-2,
4,
2,
-1,
-2,
-1,
1,
0,
-3,
5,
1,
3,
1,
1,
1,
1,
-1,
0,
3,
-1,
0,
-3,
3,
-2,
1,
-2,
2,
0,
1,
-1,
-1,
1,
2,
0,
-4,
-1,
1,
0,
-4,
3,
-1,
1,
-3,
0,
-1,
-1,
5,
2,
0,
-1,
0,
2,
-1,
1,
1,
6,
2,
-4,
2,
0,
6,
0,
0,
-2,
-2,
1,
-6,
0,
-3,
-2,
-2,
1,
2,
-3,
-1,
3,
-4,
0,
2,
1,
1,
-4,
0,
-6,
-1,
5,
0,
-3,
2,
0,
1,
-2,
-2,
4,
-2,
0,
-4,
-1,
7,
-3,
-2,
-1,
1,
0,
-1,
-3,
-1,
2,
-5,
2,
-3,
2,
-3,
2,
4,
3,
1,
4,
-1,
-2,
0,
1,
0,
4,
-2,
-2,
0,
0,
2,
0,
0,
-2,
-2,
-3,
1,
-3,
4,
-2,
2,
0,
5,
-1,
0,
2,
1,
-1,
1,
0,
-1,
-2,
-3,
-1,
1,
-4,
3,
1,
2,
4,
0,
-1,
0,
0,
-2,
6,
-2,
-3,
2,
0,
1,
-1,
2,
2,
-3,
-2,
4,
0,
2,
-1,
4,
-1,
6,
-1,
3,
-1,
0,
-2,
0,
-3,
2,
4,
-1,
0,
2,
-1,
1,
-1,
1,
2,
0,
-1,
1,
-1,
1,
2,
-4,
-1,
2,
3,
3,
0,
0,
-1,
-1,
3,
-3,
-2,
4,
-2,
0,
2,
-4,
2,
1,
-3,
-1,
1,
1,
4,
3,
2,
0,
0,
-1,
-1,
-1,
1,
-1,
1,
0,
-1,
2,
6,
-2,
-5,
-1,
1,
-2,
-2,
5,
0,
4,
-5,
-1,
3,
4,
0,
-3,
2,
-2,
0,
-2,
-5,
0,
-2,
3,
3,
3,
0,
0,
1,
4,
0,
1,
-1,
-2,
0,
0,
0,
0,
-2,
0,
-4,
-1,
0,
-3,
3,
2,
-1,
5,
-3,
1,
2,
4,
-4,
-2,
4,
3,
3,
-1,
1,
-2,
0,
3,
0,
-1,
-5,
2,
0,
-2,
3,
-1,
3,
0,
3,
0,
-1,
3,
-2,
-1,
-3,
1,
3,
4,
-2,
2,
-3,
-4,
-2,
-3,
0,
1,
-3,
0,
3,
1,
-1,
0,
-2,
1,
-1,
1,
1,
-5,
0,
5,
2,
0,
1,
-2,
-2,
3,
-2,
-2,
2,
3,
2,
0,
0,
0,
-1,
0,
2,
3,
-2,
1,
0,
-2,
-2,
0,
-2,
-4,
0,
-3,
2,
-5,
1,
-2,
1,
-3,
4,
0,
-1,
2,
0,
1,
0,
1,
1,
3,
2,
2,
0,
0,
-2,
-2,
1,
-2,
3,
-1,
1,
2,
0,
4,
0,
3,
3,
-2,
2,
-3,
1,
3,
1,
4,
-1,
-3,
-1,
2,
6,
2,
-3,
0,
-2,
-2,
1,
3,
4,
0,
-1,
-2,
-1,
3,
-1,
1,
-3,
-2,
1,
5,
-2,
1,
-2,
1,
-3,
2,
2,
0,
-4,
0,
-2,
-2,
1,
-2,
1,
-5,
-2,
2,
1,
1,
-5,
2,
-2,
-5,
-1,
-4,
2,
-2,
-4,
1,
0,
0,
-2,
0,
-2,
-2,
2,
0,
-2,
2,
-3,
1,
-1,
4,
0,
-1,
0,
0,
-4,
-1,
0,
-1,
4,
-3,
5,
1,
-1,
2,
2,
2,
0,
-1,
1,
4,
0,
-1,
-1,
-4,
2,
4,
-4,
-1,
3,
-1,
0,
2,
2,
-2,
-8,
-2,
-2,
0,
2,
-2,
0,
1,
-2,
2,
-2,
7,
0,
1,
-5,
1,
0,
-1,
-1,
2,
0,
0,
-1,
-1,
0,
1,
4,
0,
0,
2,
1,
1,
2,
-1,
1,
2,
-1,
0,
0,
3,
-3,
1,
-3,
1,
-2,
-5,
-3,
1,
2,
0,
-2,
1,
-2,
2,
-5,
-3,
2,
-4,
0,
1,
1,
-4,
-1,
1,
1,
4,
0,
1,
-3,
-1,
-1,
2,
-1,
0,
1,
-3,
1,
-2,
-1,
2,
1,
3,
0,
1,
-5,
-1,
0,
0,
-3,
-1,
-1,
-2,
-2,
-1,
1,
-3,
0,
0,
1,
-1,
-6,
2,
-3,
1,
-1,
-3,
-3,
2,
1,
-1,
2,
0,
-1,
4,
0,
1,
2,
-1,
2,
2,
1,
0,
0,
2,
-1,
-4,
0,
-2,
-2,
-6,
5,
-2,
-3,
1,
1,
0,
1,
3,
0,
-1,
1,
0,
-1,
0,
-2,
-1,
2,
-3,
4,
-3,
4,
-2,
0,
1,
-3,
-3,
-2,
0,
5,
-1,
2,
4,
-1,
1,
1,
-1,
4,
3,
-4,
-2,
-2,
2,
-4,
4,
0,
-3,
-3,
-1,
1,
-2,
2,
3,
0,
-3,
-4,
-1,
-2,
-5,
3,
0,
-3,
0,
-1,
0,
3,
0,
3,
-3,
1,
-2,
2,
-1,
-4,
0,
-3,
-5,
-1,
-1,
1,
1,
-4,
1,
-1,
3,
-1,
1,
-2,
-1,
5,
2,
-1,
1,
2,
-2,
4,
0,
-2,
-1,
-4,
0,
-2,
1,
3,
4,
-7,
2,
3,
0,
3,
-2,
0,
-3,
-2,
-1,
4,
-4,
-2,
1,
-1,
-1,
0,
-1,
-4,
5,
-3,
-2,
0,
-2,
0,
0,
-3,
0,
3,
4,
-4,
3,
3,
2,
-4,
-1,
-1,
-6,
4,
1,
1,
0,
2,
1,
0,
1,
-6,
0,
1,
0,
0,
0,
3,
-1,
-4,
-2,
-1,
-1,
3,
2,
4,
0,
-2,
-2,
-3,
-2,
-1,
2,
0,
-5,
-3,
0,
1,
0,
2,
0,
-1,
-2,
0,
2,
0,
-1,
-1,
-1,
0,
3,
3,
-2,
0,
-1,
4,
-1,
0,
-1,
-1,
2,
0,
3,
2,
-1,
0,
2,
-1,
1,
1,
0,
5,
2,
-4,
2,
1,
5,
3,
-2,
0,
-2,
0,
0,
-2,
-1,
1,
1,
-3,
1,
-1,
0,
0,
4,
0,
2,
1,
-4,
-1,
3,
-2,
0,
3,
-1,
2,
1,
-1,
-2,
1,
-2,
0,
0,
1,
-3,
-1,
3,
-3,
-3,
1,
2,
2,
3,
2,
0,
-1,
4,
-4,
2,
2,
-3,
-1,
-1,
-1,
0,
2,
1,
-2,
0,
1,
1,
-3,
4,
-2,
0,
-2,
0,
-2,
-3,
-3,
1,
1,
0,
2,
2,
-3,
-1,
0,
1,
1,
3,
1,
0,
2,
0,
0,
-3,
2,
2,
2,
1,
1,
1,
-1,
-5,
5,
3,
1,
4,
-1,
-3,
-2,
2,
1,
-3,
-1,
-3,
-1,
1,
3,
0,
5,
1,
-1,
1,
-2,
-5,
1,
4,
0,
-3,
-1,
-3,
-1,
-1,
-5,
-4,
4,
0,
-1,
1,
1,
0,
3,
-2,
-1,
-1,
-1,
2,
-3,
-3,
-3,
0,
3,
1,
0,
1,
-2,
-2,
0,
0,
-2,
2,
-3,
-2,
-3,
-2,
-2,
3,
-1,
-3,
0,
1,
-4,
5,
0,
-1,
2,
0,
3,
1,
4,
1,
-2,
-1,
2,
3,
0,
1,
3,
-1,
1,
-2,
-2,
4,
2,
2,
-1,
7,
1,
-1,
-1,
1,
2,
0,
2,
0,
2,
-1,
-1,
-5,
3,
-1,
2,
4,
-1,
-2,
-3,
0,
-3,
-3,
2,
-1,
-2,
1,
4,
1,
4,
-5,
2,
0,
-1,
-1,
1,
1,
-3,
1,
1,
1,
-1,
2,
0,
-1,
0,
1,
3,
0,
1,
-3,
1,
2,
2,
0,
-6,
-5,
2,
1,
1,
0,
-5,
-1,
-1,
2,
0,
-5,
0,
4,
0,
2,
1,
1,
3,
1,
2,
-2,
0,
-1,
1,
-3,
1,
0,
-2,
-1,
4,
1,
-5,
2,
1,
0,
-2,
-2,
1,
-1,
-2,
4,
2,
-4,
-2,
2,
-2,
-1,
-4,
2,
0,
5,
4,
2,
0,
0,
-1,
-3,
3,
3,
-3,
-2,
0,
1,
-2,
1,
1,
1,
-5,
-2,
0,
2,
0,
2,
1,
-1,
1,
1,
0,
-2,
3,
0,
2,
-3,
1,
-3,
-4,
1,
-1,
1,
0,
1,
1,
-2,
1,
2,
0,
0,
0,
-1,
-4,
-1,
1,
-1,
-2,
1,
-2,
-3,
0,
3,
0,
4,
-2,
4,
2,
2,
-3,
0,
-1,
3,
0,
0,
-2,
1,
1,
-4,
-3,
0,
2,
0,
0,
-2,
-3,
0,
0,
0,
3,
4,
2,
0,
0,
4,
-6,
0,
-3,
0,
-3,
-1,
0,
6,
3,
4,
-1,
4,
-1,
-3,
-2,
1,
0,
2,
-1,
6,
-3,
-3,
0,
3,
1,
-2,
-2,
1,
-1,
-3,
0,
1,
0,
2,
-1,
-1,
2,
0,
1,
-3,
-1,
0,
2,
3,
2,
1,
-3,
-2,
-4,
-1,
3,
-7,
-3,
1,
1,
-3,
7,
-1,
-3,
0,
-4,
1,
-1,
-5,
0,
1,
1,
0,
4,
5,
-2,
-3,
3,
-1,
-3,
2,
0,
-3,
4,
1,
2,
3,
5,
-3,
-4,
-1,
-2,
3,
0,
-1,
3,
-2,
1,
0,
-2,
-2,
-5,
0,
1,
1,
-2,
0,
2,
3,
0,
-2,
2,
0,
-1,
-1,
1,
5,
4,
-1,
-3,
-1,
-4,
0,
-2,
-2,
-1,
-2,
0,
1,
2,
2,
-3,
-1,
0,
-1,
-3,
4,
1,
-4,
0,
-1,
-3,
-1,
-2,
1,
1,
3,
-3,
1,
2,
-1,
-3,
0,
-2,
0,
-1,
-2,
0,
6,
1,
1,
-2,
3,
1,
-3,
-2,
3,
1,
-3,
0,
-1,
-8,
-1,
0,
3,
-2,
2,
-1,
-1,
3,
0,
0,
0,
3,
2,
-2,
1,
-1,
1,
0,
-5,
1,
2,
2,
2,
1,
-1,
0,
-4,
2,
-1,
5,
-2,
4,
0,
1,
-4,
-2,
-2,
-2,
2,
-1,
-1,
0,
-4,
-1,
-2,
1,
-3,
-2,
-2,
-1,
-1,
1,
5,
-3,
3,
-1,
0,
-2,
-1,
-1,
1,
3,
1,
-1,
1,
1,
5,
1,
2,
2,
1,
0,
1,
2,
3,
-1,
0,
2,
-1,
3,
-3,
0,
-1,
-1,
-1,
-2,
1,
-4,
-4,
-1,
0,
-2,
0,
-2,
0,
0,
0,
2,
-3,
0,
1,
-3,
0,
2,
1,
-3,
-2,
0,
-3,
-4,
-1,
-1,
-1,
1,
1,
3,
-3,
0,
1,
2,
2,
0,
0,
0,
0,
-4,
3,
0,
0,
1,
3,
-1,
3,
-2,
-2,
0,
-1,
0,
2,
0,
0,
-2,
-2,
-1,
1,
-2,
1,
-3,
2,
0,
-1,
3,
3,
1,
1,
0,
-2,
-2,
-1,
-1,
1,
0,
-1,
0,
-2,
-4,
-1,
0,
-2,
-1,
-4,
1,
0,
0,
0,
-1,
1,
0,
-3,
-3,
1,
1,
0,
-1,
3,
2,
1,
0,
2,
-2,
3,
-2,
-1,
3,
3,
0,
-1,
-4,
-1,
-1,
2,
-4,
3,
3,
-1,
0,
0,
-2,
1,
3,
3,
0,
-1,
-5,
4,
3,
1,
0,
1,
0,
0,
-1,
-1,
-2,
0,
1,
2,
1,
-5,
-1,
2,
-2,
-2,
3,
-1,
-5,
-3,
3,
6,
-4,
-1,
2,
-4,
-1,
-1,
1,
4,
-4,
0,
-1,
2,
-3,
1,
-2,
1,
-2,
2,
1,
-1,
0,
1,
0,
-8,
-3,
1,
2,
-6,
0,
0,
2,
2,
0,
0,
1,
-2,
0,
0,
-1,
-8,
-4,
-2,
1,
-5,
0,
1,
0,
-3,
-4,
-1,
1,
-5,
-4,
1,
2,
1,
-5,
-5,
-3,
-2,
1,
0,
-2,
2,
-3,
4,
-2,
2,
-2,
5,
3,
3,
-1,
-2,
-3,
4,
-1,
-3,
-3,
2,
1,
0,
0,
2,
-1,
2,
3,
0,
1,
0,
2,
4,
-2,
-3,
0,
-2,
1,
-1,
0,
2,
4,
-2,
-5,
2,
-2,
2,
1,
0,
2,
-1,
3,
-1,
0,
1,
-5,
3,
-1,
-3,
-2,
0,
3,
1,
3,
3,
2,
3,
-2,
2,
-1,
2,
-2,
2,
-3,
-4,
-1,
3,
1,
0,
-2,
0,
-1,
-3,
-5,
-3,
-3,
-1,
-2,
-3,
-3,
1,
-2,
2,
3,
-3,
3,
-2,
4,
3,
-1,
-2,
0,
1,
3,
3,
5,
1,
-2,
6,
-2,
2,
4,
-1,
-1,
0,
0,
2,
7,
-1,
3,
-2,
1,
0,
1,
-2,
0,
3,
3,
-2,
-1,
-2,
-3,
0,
1,
3,
-2,
-3,
1,
3,
-1,
-1,
-1,
-2,
1,
0,
4,
-3,
5,
0,
-3,
2,
-2,
-4,
1,
3,
0,
-1,
1,
-2,
0,
0,
2,
-4,
-3,
2,
2,
-1,
-4,
1,
2,
-4,
-1,
0,
-2,
-1,
-3,
1,
1,
-2,
3,
0,
-2,
0,
-1,
0,
0,
-1,
0,
-1,
-2,
-1,
0,
2,
-1,
-5,
0,
3,
4,
0,
-2,
1,
2,
-2,
5,
0,
3,
-4,
1,
-1,
0,
-3,
-3,
-5,
3,
-3,
0,
5,
-2,
-3,
-1,
-2,
1,
3,
1,
-1,
-2,
-1,
2,
-5,
0,
1,
0,
1,
5,
-2,
1,
-1,
0,
-4,
-1,
0,
-1,
-1,
3,
-2,
-1,
-1,
-1,
2,
-1,
0,
0,
1,
-2,
1,
0,
2,
0,
-1,
-1,
1,
1,
-3,
0,
2,
2,
0,
1,
2,
-3,
0,
-1,
2,
-1,
0,
0,
3,
-2,
-2,
1,
3,
-3,
-2,
2,
2,
1,
-2,
-1,
3,
-1,
-2,
-1,
-3,
-1,
3,
2,
0,
1,
2,
-5,
-2,
1,
0,
0,
0,
1,
-1,
-3,
4,
-3,
1,
0,
-5,
-4,
4,
1,
4,
2,
0,
0,
0,
0,
1,
0,
2,
-1,
-5,
2,
-1,
2,
-2,
1,
0,
-6,
0,
3,
-5,
0,
1,
1,
0,
1,
1,
2,
-1,
0,
2,
2,
1,
-4,
0,
-3,
-5,
-5,
2,
1,
3,
0,
-1,
1,
-6,
-4,
3,
-2,
-1,
-1,
-3,
-2,
2,
2,
0,
2,
0,
-3,
-3,
2,
2,
-1,
-3,
1,
-3,
-2,
0,
-4,
-1,
-3,
3,
-2,
4,
4,
-4,
1,
0,
0,
0,
-2,
0,
-1,
2,
0,
3,
2,
0,
-2,
-2,
-1,
-3,
1,
2,
0,
2,
-2,
-3,
4,
0,
1,
-4,
-3,
-2,
1,
1,
-2,
7,
6,
0,
2,
4,
1,
3,
4,
-2,
2,
-1,
1,
-3,
-1,
1,
0,
-2,
1,
-1,
2,
0,
-5,
1,
-1,
0,
1,
3,
1,
-3,
0,
0,
-1,
2,
5,
2,
-6,
4,
-1,
2,
-2,
-5,
0,
-1,
-7,
4,
-2,
-1,
3,
1,
-5,
-1,
0,
-1,
2,
2,
-2,
4,
-3,
-1,
3,
1,
-2,
-1,
-4,
-3,
-1,
-5,
0,
-3,
-4,
4,
2,
2,
1,
-1,
-1,
2,
-1,
2,
1,
0,
-1,
3,
3,
2,
-1,
5,
3,
0,
2,
1,
-2,
-3,
6,
1,
1,
0,
0,
1,
-2,
-1,
-4,
-1,
6,
2,
3,
0,
1,
-1,
2,
-1,
-1,
3,
2,
1,
-1,
-4,
-2,
0,
-5,
-2,
3,
-2,
1,
1,
-3,
-3,
-2,
1,
1,
3,
-2,
4,
0,
0,
0,
-2,
1,
-2,
-2,
0,
0,
2,
-1,
0,
1,
1,
-1,
0,
-1,
3,
2,
0,
1,
0,
0,
-1,
-1,
1,
1,
-3,
-3,
0,
-1,
1,
-1,
3,
1,
-1,
0,
2,
1,
1,
2,
-3,
-5,
0,
4,
-2,
-2,
-1,
-1,
3,
0,
1,
-1,
-2,
-5,
8,
-1,
-2,
1,
1,
3,
0,
-1,
-1,
0,
0,
0,
1,
-4,
3,
0,
4,
5,
1,
2,
-1,
-4,
-1,
-5,
3,
-5,
0,
-3,
-1,
0,
-4,
-1,
-2,
2,
1,
0,
2,
0,
3,
-4,
-1,
0,
-3,
1,
3,
-2,
-1,
3,
0,
-2,
0,
1,
-3,
-1,
1,
0,
-1,
-3,
-1,
-2,
0,
0,
0,
-2,
-4,
-3,
-1,
0,
0,
-6,
2,
0,
-5,
-3,
-2,
-3,
5,
1,
1,
-2,
2,
-2,
-2,
0,
0,
2,
-2,
1,
-2,
1,
0,
-3,
0,
3,
2,
-1,
3,
-1,
4,
0,
-1,
2,
0,
-1,
1,
-1,
1,
-4,
0,
0,
-1,
0,
-1,
2,
2,
-1,
1,
3,
1,
-2,
1,
1,
-1,
-5,
3,
-1,
-3,
1,
0,
0,
-1,
-1,
1,
2,
-2,
-3,
0,
-1,
0,
1,
1,
-2,
-2,
1,
1,
-1,
-2,
0,
4,
1,
1,
1,
-3,
-4,
1,
-1,
2,
9,
1,
-2,
0,
0,
1,
1,
2,
0,
0,
0,
0,
-3,
1,
1,
2,
5,
1,
5,
-4,
2,
3,
3,
1,
3,
1,
1,
0,
1,
-1,
0,
-3,
0,
-2,
-1,
-1,
3,
1,
1,
5,
0,
-1,
-5,
2,
2,
-1,
-4,
2,
2,
0,
-3,
2,
3,
1,
-6,
4,
-1,
-1,
0,
2,
-1,
-3,
0,
-5,
1,
0,
-5,
3,
0,
1,
-1,
-2,
0,
1,
2,
1,
2,
5,
3,
0,
2,
-3,
2,
-5,
0,
-1,
-2,
1,
0,
-3,
0,
3,
-1,
1,
0,
-1,
-4,
3,
1,
-1,
1,
4,
0,
-1,
-2,
-2,
-3,
0,
-2,
-1,
1,
4,
1,
-1,
1,
0,
3,
3,
-1,
1,
-1,
-1,
0,
1,
2,
-1,
1,
-3,
1,
1,
-1,
-1,
3,
1,
-1,
0,
2,
-3,
-1,
-1,
2,
-6,
0,
-1,
1,
-1,
0,
0,
0,
-2,
-2,
-2,
0,
1,
-4,
3,
-3,
2,
2,
1,
3,
-1,
-1,
0,
1,
-1,
0,
-1,
1,
4,
-3,
-3,
-2,
1,
1,
1,
-3,
-2,
-2,
1,
-1,
1,
-1,
2,
2,
-1,
-1,
-4,
-2,
-2,
4,
-4,
-2,
-2,
-2,
-1,
-3,
-2,
-6,
3,
0,
-1,
2,
0,
3,
-8,
2,
1,
3,
4,
-3,
-2,
-6,
1,
0,
0,
-1,
-3,
0,
3,
-1,
-4,
0,
6,
0,
-3,
-1,
0,
-4,
-1,
-4,
-1,
1,
2,
0,
1,
-2,
-1,
1,
-2,
-1,
1,
-1,
3,
6,
0,
1,
-4,
-7,
4,
-4,
-3,
1,
2,
1,
3,
-1,
4,
2,
-1,
-1,
-1,
1,
0,
4,
1,
1,
-3,
1,
-4,
-2,
-5,
3,
-1,
1,
-2,
-1,
0,
-2,
1,
-1,
1,
0,
0,
2,
-3,
4,
5,
5,
4,
0,
-4,
0,
-5,
0,
3,
-1,
0,
2,
2,
4,
0,
-4,
0,
1,
-3,
3,
-3,
4,
-2,
-1,
2,
2,
0,
1,
3,
-3,
-1,
-2,
-3,
2,
-1,
-3,
-4,
1,
-4,
-2,
-1,
-1,
-2,
-2,
-2,
-1,
1,
0,
2,
-5,
1,
-4,
-2,
-3,
0,
1,
-3,
2,
-3,
6,
1,
3,
7,
-5,
-5,
2,
3,
-4,
-3,
0,
0,
1,
0,
-3,
-3,
4,
-1,
-3,
-5,
3,
0,
1,
1,
-2,
1,
-2,
0,
2,
4,
-3,
1,
0,
2,
-2,
1,
-1,
5,
-4,
0,
-3,
-1,
3,
1,
-1,
-1,
-2,
1,
3,
0,
0,
1,
5,
3,
2,
1,
1,
-1,
4,
-3,
0,
-2,
0,
-4,
-2,
1,
-2,
-2,
2,
-2,
-2,
1,
0,
3,
0,
0,
-1,
-1,
1,
1,
-2,
4,
-3,
1,
1,
-5,
-1,
-1,
-1,
2,
-1,
2,
0,
-2,
-3,
3,
1,
2,
3,
4,
0,
-1,
2,
1,
-2,
-1,
3,
2,
3,
-1,
1,
-2,
-2,
-2,
3,
2,
0,
1,
3,
-2,
2,
4,
2,
2,
3,
-3,
3,
-2,
-2,
1,
2,
-4,
2,
4,
-5,
0,
-3,
1,
-1,
-1,
-2,
3,
1,
-3,
1,
3,
3,
2,
2,
1,
3,
5,
1,
0,
0,
-1,
-1,
4,
-1,
-2,
-4,
0,
-1,
2,
2,
-1,
-4,
-1,
-2,
0,
3,
-2,
-2,
1,
-3,
-4,
-1,
-2,
1,
-5,
1,
2,
2,
-2,
3,
-2,
-1,
-3,
0,
-1,
-5,
0,
3,
-2,
-1,
-1,
0,
-3,
1,
1,
-3,
2,
0,
5,
-2,
-2,
3,
5,
-3,
-3,
1,
-3,
3,
-3,
-2,
2,
-3,
-1,
1,
-3,
3,
-3,
4,
-2,
-1,
-2,
-1,
6,
3,
0,
4,
-5,
-2,
2,
1,
4,
-5,
-1,
-2,
-1,
-3,
-1,
-1,
-2,
-1,
0,
2,
-5,
-3,
-3,
0,
-3,
0,
-2,
0,
2,
-2,
3,
2,
-1,
-5,
2,
-2,
-1,
0,
-1,
2,
-5,
7,
-2,
1,
3,
0,
3,
-4,
-3,
4,
-3,
-4,
3,
2,
-3,
-1,
1,
5,
1,
-4,
0,
2,
3,
0,
1,
0,
-4,
-3,
-1,
3,
-2,
-5,
3,
-3,
1,
-1,
1,
0,
0,
3,
1,
4,
0,
1,
-1,
2,
-4,
-5,
-1,
6,
-3,
0,
-3,
-2,
-4,
4,
0,
3,
4,
-3,
-2,
-1,
3,
4,
0,
0,
0,
-1,
1,
-1,
-2,
-3,
-4,
2,
3,
-3,
-4,
3,
-3,
3,
-2,
-1,
-1,
-3,
2,
5,
0,
-3,
-3,
-1,
2,
1,
-1,
-3,
-2,
-3,
2,
-1,
2,
-1,
0,
-3,
-3,
1,
4,
1,
-1,
-1,
4,
-2,
0,
-2,
-1,
4,
-1,
0,
3,
1,
1,
-1,
2,
2,
5,
0,
0,
1,
-3,
1,
1,
0,
1,
1,
2,
3,
-1,
2,
1,
-1,
-3,
-2,
4,
0,
-1,
0,
-2,
-3,
-3,
-1,
2,
3,
-7,
-3,
1,
0,
2,
3,
4,
-3,
0,
0,
1,
1,
1,
0,
-3,
-1,
1,
0,
-2,
-2,
-1,
3,
5,
2,
-3,
1,
0,
3,
2,
4,
-3,
3,
2,
2,
0,
2,
-2,
-2,
0,
-6,
1,
5,
3,
2,
0,
2,
2,
2,
1,
1,
3,
-1,
4,
-2,
3,
0,
3,
2,
1,
-2,
5,
-5,
2,
0,
3,
2,
-1,
3,
4,
-3,
-1,
3,
3,
1,
-2,
-2,
4,
2,
-3,
4,
0,
-6,
-2,
1,
2,
-7,
1,
-2,
3,
-3,
-1,
0,
2,
1,
-1,
2,
1,
0,
3,
1,
2,
2,
5,
-2,
-1,
-3,
-3,
-2,
1,
0,
0,
1,
2,
-4,
4,
4,
-1,
1,
0,
1,
-2,
3,
-4,
1,
1,
-2,
-3,
1,
-1,
-1,
-1,
1,
0,
0,
0,
-2,
4,
1,
5,
1,
-6,
1,
3,
-2,
-2,
2,
1,
-5,
4,
1,
5,
3,
-2,
1,
3,
1,
0,
-3,
-5,
1,
3,
0,
-1,
-1,
-2,
2,
-1,
3,
4,
-5,
-5,
-1,
-2,
-5,
2,
0,
2,
4,
-2,
-1,
-4,
-1,
1,
3,
2,
-4,
-2,
2,
-2,
0,
3,
0,
0,
2,
1,
-2,
1,
-3,
5,
0,
2,
0,
1,
-1,
2,
-2,
6,
0,
2,
0,
1,
3,
2,
1,
2,
4,
-1,
-2,
-8,
5,
0,
1,
2,
3,
-3,
-2,
0,
1,
0,
1,
4,
-4,
-2,
-1,
4,
3,
1,
-2,
0,
0,
4,
4,
1,
-6,
4,
1,
2,
-1,
4,
0,
1,
0,
1,
1,
0,
-7,
-4,
-2,
-1,
-6,
-6,
0,
0,
3,
-7,
2,
1,
-3,
1,
0,
2,
-1,
1,
0,
-2,
3,
1,
0,
-3,
2,
2,
3,
7,
-1,
6,
-2,
-1,
-2,
2,
-3,
1,
3,
-1,
1,
1,
0,
0,
3,
-2,
2,
4,
1,
1,
-5,
2,
-2,
1,
1,
2,
-3,
-1,
-2,
3,
6,
5,
-1,
-4,
2,
1,
-3,
0,
-1,
1,
2,
-1,
3,
-1,
1,
-2,
3,
5,
3,
2,
5,
-1,
1,
-3,
0,
-6,
1,
-1,
-1,
3,
-3,
-2,
0,
4,
3,
3,
-4,
5,
-2,
2,
4,
-1,
7,
3,
-5,
-10,
1,
7,
-4,
-1,
-2,
-2,
-2,
-1,
3,
6,
1,
-4,
2,
3,
6,
1,
2,
-3,
2,
0,
2,
5,
4,
-5,
-1,
-3,
7,
2,
0,
0,
1,
4,
3,
4,
0,
3,
-2,
-1,
2,
0,
0,
0,
-5,
0,
-6,
0,
-2,
3,
2,
5,
1,
0,
-2,
-3,
-4,
-1,
-2,
-1,
0,
-1,
-2,
-4,
-1,
1,
-2,
2,
-3,
4,
2,
4,
3,
-4,
2,
-2,
3,
2,
3,
1,
-6,
0,
-6,
1,
6,
-1,
-5,
-5,
2,
-1,
4,
6,
-1,
1,
3,
2,
3,
4,
2,
-5,
2,
-4,
-3,
2,
2,
-2,
0,
-2,
3,
-2,
1,
-3,
5,
0,
-4,
1,
1,
-3,
2,
-2,
-1,
-5,
0,
1,
0,
-1,
1,
-4,
-1,
0,
-1,
-2,
-1,
-2,
2,
0,
2,
-7,
5,
1,
-2,
-2,
1,
-2,
3,
-2,
3,
-6,
0,
-3,
-3,
2,
1,
0,
-2,
0,
3,
0,
0,
4,
-4,
3,
-1,
0,
-5,
-4,
-2,
1,
4,
1,
4,
-6,
-2,
-1,
-1,
-3,
-2,
1,
0,
3,
2,
2,
1,
1,
1,
1,
4,
0,
1,
2,
-1,
3,
-4,
-5,
1,
1,
0,
2,
2,
5,
2,
3,
3,
2,
-2,
4,
2,
3,
-2,
-2,
3,
-5,
-1,
3,
-2,
5,
-3,
2,
4,
-1,
3,
1,
0,
0,
1,
0,
0,
-6,
-5,
0,
0,
3,
1,
3,
-2,
3,
2,
-3,
-3,
-6,
0,
-2,
-1,
1,
1,
-3,
0,
-6,
2,
1,
2,
2,
4,
0,
-3,
2,
3,
3,
-3,
-1,
5,
-1,
-5,
-3,
-2,
-3,
4,
-3,
-1,
-1,
4,
0,
-3,
-1,
-5,
-4,
6,
0,
3,
-1,
2,
-1,
0,
2,
0,
4,
-1,
-11,
4,
5,
-2,
2,
2,
-3,
3,
1,
-4,
-2,
0,
1,
2,
1,
3,
7,
6,
1,
3,
-2,
-3,
2,
-3,
4,
-1,
0,
0,
1,
4,
1,
0,
1,
-4,
4,
0,
5,
0,
3,
-4,
3,
0,
3,
1,
-1,
3,
-2,
1,
-1,
-4,
1,
-2,
2,
3,
-1,
2,
4,
-1,
-6,
2,
-2,
2,
3,
0,
-3,
1,
-2,
1,
0,
4,
-3,
-3,
2,
0,
3,
1,
-1,
-3,
3,
-6,
1,
-5,
0,
-2,
1,
1,
1,
-2,
4,
2,
-1,
0,
-1,
-1,
-4,
1,
-1,
-3,
-4,
5,
1,
4,
-1,
0,
1,
1,
1,
-1,
-3,
0,
1,
1,
-3,
1,
0,
3,
1,
5,
1,
1,
-5,
3,
3,
1,
1,
0,
-2,
-1,
0,
4,
-1,
-1,
-1,
1,
-6,
1,
4,
-1,
3,
1,
0,
4,
-4,
-6,
0,
-1,
0,
-6,
-3,
4,
6,
6,
6,
-5,
2,
2,
4,
-3,
-2,
2,
1,
2,
-3,
4,
5,
1,
0,
0,
4,
5,
-4,
3,
3,
4,
-4,
4,
2,
1,
-5,
5,
-1,
0,
-8,
2,
-8,
-4,
-2,
1,
-1,
2,
2,
4,
0,
-1,
6,
-3,
-5,
0,
1,
0,
0,
0,
3,
-2,
1,
-6,
7,
3,
1,
1,
-1,
1,
-3,
0,
-1,
-4,
0,
-2,
1,
0,
-2,
-3,
3,
0,
-2,
2,
-8,
-5,
6,
3,
0,
0,
0,
4,
-7,
1,
-3,
-3,
3,
-4,
-6,
6,
-1,
2,
-3,
3,
-1,
2,
2,
3,
1,
-1,
-5,
1,
0,
5,
-3,
-4,
4,
3,
1,
3,
5,
1,
8,
-3,
4,
-2,
1,
3,
3,
-1,
2,
-8,
-1,
1,
4,
-2,
2,
-4,
7,
0,
2,
3,
4,
4,
0,
0,
-1,
-4,
-5,
3,
0,
1,
6,
1,
-2,
5,
-1,
-1,
1,
-1,
0,
1,
1,
-1,
4,
1,
-1,
3,
2,
-1,
5,
2,
3,
1,
4,
-2,
2,
-4,
3,
-5,
-1,
-1,
3,
7,
3,
-2,
1,
-3,
2,
-5,
-5,
-1,
-3,
-1,
-1,
2,
1,
-3,
-3,
-2,
0,
3,
2,
0,
1,
3,
-3,
4,
-4,
1,
-4,
-1,
-1,
-1,
-1,
0,
-1,
7,
-1,
4,
-2,
1,
0,
2,
1,
3,
-2,
-4,
0,
7,
3,
1,
-6,
4,
0,
3,
1,
-6,
-3,
-2,
1,
1,
0,
0,
-2,
1,
2,
-1,
-3,
-3,
-1,
-2,
-2,
0,
0,
-2,
-4,
-1,
1,
2,
-3,
-6,
1,
-1,
-2,
1,
3,
-4,
2,
-4,
-7,
-3,
0,
3,
-4,
1,
-4,
3,
-1,
0,
0,
-2,
-3,
2,
4,
-6,
-3,
3,
3,
3,
1,
1,
-2,
1,
3,
4,
2,
-1,
3,
-1,
-1,
1,
8,
2,
2,
0,
5,
-1,
-3,
-4,
1,
4,
-5,
-2,
-4,
-2,
-2,
3,
-8,
-3,
-5,
-5,
-7,
-2,
6,
2,
4,
0,
2,
3,
0,
-4,
-1,
0,
-3,
1,
3,
-2,
5,
2,
4,
-4,
1,
-6,
4,
0,
-3,
3,
1,
1,
0,
0,
1,
-1,
1,
-3,
-7,
0,
6,
-3,
0,
-1,
-1,
-1,
0,
1,
0,
3,
0,
2,
2,
4,
-2,
5,
3,
-2,
-3,
3,
-5,
-6,
3,
-1,
3,
-1,
-1,
4,
-6,
0,
2,
-3,
-2,
-1,
0,
-2,
-9,
3,
0,
1,
0,
2,
-3,
2,
3,
-1,
0,
-6,
-3,
0,
-3,
-2,
-2,
5,
-1,
-8,
3,
-2,
-2,
-5,
2,
2,
2,
3,
-3,
3,
3,
1,
3,
-4,
-1,
-3,
3,
-1,
0,
2,
1,
-2,
3,
-1,
0,
3,
2,
0,
3,
1,
-6,
-2,
-2,
-10,
3,
0,
6,
1,
-4,
0,
1,
4,
4,
-4,
4,
1,
-2,
3,
2,
2,
-1,
2,
0,
-4,
5,
-3,
2,
1,
-1,
-3,
-1,
2,
-2,
-1,
1,
0,
-3,
-1,
-1,
5,
1,
-4,
-3,
3,
-1,
3,
2,
3,
2,
-2,
2,
1,
0,
-7,
-3,
0,
2,
-1,
3,
3,
-6,
0,
0,
5,
4,
0,
2,
3,
-2,
-3,
-1,
2,
5,
5,
1,
1,
-6,
0,
0,
0,
5,
-1,
1,
3,
0,
-3,
1,
3,
1,
3,
-2,
-2,
0,
1,
4,
-2,
-2,
5,
2,
3,
4,
1,
-1,
4,
0,
3,
4,
2,
3,
0,
-1,
-1,
2,
-4,
4,
-5,
3,
2,
2,
3,
-1,
-1,
2,
1,
1,
2,
-4,
-3,
-1,
3,
-2,
0,
0,
-3,
-4,
5,
-2,
2,
0,
1,
2,
1,
4,
0,
0,
7,
-1,
0,
4,
-5,
3,
-5,
-5,
0,
4,
-3,
1,
3,
-2,
-2,
1,
-1,
2,
0,
1,
5,
3,
3,
4,
5,
-2,
1,
4,
4,
-1,
-4,
4,
4,
4,
-3,
0,
-4,
0,
-1,
3,
-5,
4,
-4,
-4,
5,
1,
0,
-2,
-1,
-3,
-1,
4,
1,
-1,
3,
-7,
2,
-2,
-1,
0,
2,
1,
-1,
-7,
1,
4,
2,
3,
2,
-3,
-4,
-1,
2,
2,
-1,
-2,
2,
-3,
-1,
-2,
-4,
-2,
-4,
3,
1,
0,
2,
3,
1,
0,
6,
-3,
4,
3,
4,
3,
1,
5,
1,
4,
-3,
1,
1,
2,
-3,
0,
-2,
3,
2,
5,
3,
1,
0,
-2,
1,
-4,
2,
1,
-5,
0,
-4,
-4,
0,
-3,
0,
2,
2,
0,
4,
-1,
-1,
4,
-4,
4,
1,
0,
-2,
-4,
1,
-1,
1,
2,
-3,
4,
0,
-1,
5,
2,
-4,
2,
-2,
-3,
2,
3,
2,
-3,
-1,
2,
-5,
-1,
-5,
-1,
2,
0,
0,
-7,
3,
-2,
-2,
-2,
-1,
-5,
7,
1,
2,
2,
5,
-2,
4,
1,
1,
2,
-3,
-3,
-2,
0,
2,
-5,
2,
1,
5,
2,
2,
5,
-1,
2,
1,
4,
-3,
3,
-2,
0,
-1,
4,
1,
4,
2,
-1,
1,
-1,
-2,
0,
8,
-4,
5,
2,
2,
1,
0,
-1,
-2,
2,
1,
-4,
0,
3,
-4,
-1,
1,
5,
0,
-1,
-4,
3,
-3,
3,
0,
-1,
3,
1,
5,
0,
-4,
0,
1,
2,
-1,
1,
2,
2,
2,
0,
1,
3,
-2,
-1,
1,
-1,
-7,
0,
0,
0,
1,
2,
3,
-4,
-1,
4,
3,
1,
-7,
1,
-2,
2,
-2,
1,
0,
0,
1,
-3,
3,
0,
-2,
2,
4,
1,
-1,
1,
2,
4,
3,
1,
3,
-1,
8,
-2,
4,
3,
2,
0,
-2,
0,
1,
2,
-1,
0,
-3,
-2,
2,
3,
5,
4,
2,
-4,
1,
3,
2,
1,
-2,
-7,
2,
0,
1,
4,
-1,
4,
-1,
0,
1,
-3,
3,
0,
-2,
4,
0,
-1,
-2,
0,
2,
3,
-2,
3,
1,
2,
-2,
0,
0,
1,
4,
0,
-5,
-5,
0,
-2,
-3,
-4,
0,
1,
7,
-4,
-1,
2,
-5,
2,
-4,
-1,
-1,
0,
4,
1,
0,
5,
0,
2,
6,
1,
4,
1,
2,
2,
3,
1,
0,
-4,
1,
1,
-3,
5,
-4,
1,
1,
-2,
-1,
4,
0,
0,
-2,
1,
5,
5,
4,
4,
6,
-5,
0,
-1,
5,
1,
-4,
3,
-3,
-7,
-3,
1,
-4,
4,
0,
1,
3,
2,
4,
-5,
2,
0,
1,
-2,
-6,
1,
-4,
0,
-3,
2,
2,
-4,
-2,
-3,
3,
2,
-1,
0,
3,
-3,
-1,
1,
1,
-6,
3,
3,
-1,
-5,
3,
-1,
-3,
-3,
-3,
0,
1,
1,
3,
-1,
1,
3,
0,
-4,
-1,
0,
3,
0,
3,
3,
2,
2,
0,
0,
-2,
-2,
-4,
-2,
0,
0,
7,
0,
0,
-2,
-5,
-3,
3,
-5,
2,
-2,
2,
3,
5,
0,
-2,
3,
2,
3,
2,
2,
2,
-2,
1,
2,
1,
0,
-2,
3,
2,
4,
0,
8,
-2,
3,
-3,
2,
2,
4,
4,
-2,
0,
2,
-2,
2,
6,
0,
-6,
-2,
-3,
-2,
-3,
1,
0,
2,
1,
3,
-3,
2,
-5,
0,
-4,
-4,
-3,
1,
0,
-4,
1,
3,
3,
0,
2,
2,
5,
0,
-3,
-2,
-1,
2,
5,
-3,
3,
-1,
0,
0,
3,
2,
-6,
-3,
2,
1,
-1,
4,
1,
-5,
1,
-5,
0,
2,
1,
0,
-4,
-1,
1,
-3,
3,
-7,
-1,
-6,
1,
-6,
3,
1,
2,
0,
0,
1,
3,
5,
-3,
5,
1,
0,
4,
3,
-3,
-2,
-2,
-3,
5,
2,
1,
3,
0,
-3,
4,
0,
0,
-1,
1,
-2,
1,
1,
2,
-1,
3,
4,
2,
0,
1,
-6,
2,
0,
1,
-3,
4,
-3,
-4,
-6,
2,
2,
1,
-4,
1,
-2,
-3,
-3,
4,
-2,
2,
2,
1,
0,
-5,
1,
3,
-2,
-2,
0,
-2,
0,
1,
4,
-2,
-1,
-4,
1,
1,
-3,
0,
-3,
1,
-3,
-3,
-4,
-1,
-3,
-2,
1,
-1,
-1,
-3,
3,
-3,
-5,
-2,
2,
1,
3,
-2,
0,
-2,
2,
-2,
3,
0,
-2,
-4,
-2,
0,
1,
-4,
-2,
-5,
2,
-2,
0,
-1,
-4,
1,
-1,
3,
0,
3,
2,
1,
-6,
4,
3,
2,
-1,
1,
3,
4,
-4,
2,
-1,
-1,
4,
-1,
5,
-4,
1,
-2,
4,
-4,
4,
4,
4,
2,
-3,
5,
-3,
-1,
-7,
6,
-1,
-1,
-2,
0,
3,
-3,
-1,
-1,
-2,
3,
4,
3,
-1,
-2,
-1,
-3,
4,
1,
-2,
4,
3,
1,
0,
2,
0,
0,
2,
-3,
4,
-2,
-4,
-1,
-1,
2,
1,
4,
1,
5,
4,
5,
0,
1,
1,
1,
-2,
-1,
-2,
1,
-3,
5,
1,
-3,
-3,
0,
2,
-2,
3,
1,
-3,
-2,
-2,
0,
3,
0,
1,
4,
1,
2,
-1,
-1,
7,
-1,
3,
-4,
2,
-2,
-5,
2,
-1,
3,
1,
4,
-4,
1,
0,
5,
5,
3,
0,
3,
4,
-1,
0,
8,
2,
-5,
0,
0,
-1,
-2,
-5,
1,
0,
1,
-3,
-4,
-2,
-3,
6,
6,
2,
-3,
-2,
4,
-2,
5,
1,
-5,
-2,
-2,
1,
3,
-2,
0,
2,
-3,
-1,
-2,
5,
1,
-5,
-3,
-1,
-1,
5,
3,
1,
-4,
1,
-3,
-2,
0,
0,
6,
-2,
-2,
0,
-2,
-5,
-3,
2,
-2,
0,
-3,
-2,
-1,
2,
-5,
2,
4,
-3,
-4,
-6,
-4,
0,
2,
3,
0,
2,
-2,
0,
4,
-2,
1,
-1,
3,
2,
-1,
1,
0,
2,
0,
5,
0,
1,
3,
4,
1,
0,
2,
-1,
3,
4,
-3,
3,
-4,
-3,
3,
1,
0,
3,
4,
3,
0,
-3,
0,
-3,
1,
-2,
6,
3,
4,
2,
-1,
-5,
1,
-3,
3,
0,
-1,
0,
4,
0,
-1,
5,
-2,
-4,
-5,
-1,
-2,
1,
2,
3,
-4,
2,
0,
-3,
-2,
3,
5,
3,
-2,
2,
-1,
2,
-7,
2,
2,
1,
-4,
0,
-3,
5,
-2,
3,
-3,
0,
2,
-2,
2,
1,
4,
-1,
-1,
-1,
3,
3,
3,
-6,
5,
-2,
0,
2,
5,
-4,
-3,
1,
5,
1,
-2,
-1,
-3,
-1,
1,
4,
0,
6,
-3,
0,
-1,
4,
0,
-4,
-1,
1,
4,
3,
2,
4,
1,
-4,
-1,
0,
-6,
-2,
0,
5,
1,
1,
-1,
-2,
-1,
0,
-2,
-4,
-2,
-4,
-1,
0,
0,
-5,
3,
4,
3,
3,
2,
1,
0,
4,
4,
0,
-1,
2,
-2,
1,
1,
-3,
4,
-2,
-1,
4,
0,
3,
-2,
5,
2,
3,
1,
3,
-4,
0,
2,
5,
-2,
-3,
1,
-2,
2,
-3,
0,
-5,
1,
0,
-4,
-4,
-3,
1,
-3,
0,
2,
0,
1,
1,
-1,
5,
4,
3,
-1,
0,
1,
3,
1,
-1,
0,
2,
2,
2,
2,
0,
0,
4,
-1,
0,
-1,
-6,
0,
1,
3,
0,
6,
1,
3,
3,
2,
2,
2,
2,
-2,
-5,
4,
0,
0,
0,
4,
-4,
-2,
1,
3,
-1,
2,
-2,
-1,
-3,
2,
-7,
-2,
1,
-3,
1,
2,
3,
-1,
-8,
3,
0,
1,
7,
4,
0,
-1,
3,
4,
-4,
-5,
0,
-4,
6,
-1,
5,
0,
-1,
5,
-1,
3,
1,
-5,
0,
-3,
5,
2,
-8,
1,
0,
3,
-2,
-1,
4,
4,
2,
0,
4,
-2,
-1,
3,
0,
-1,
6,
3,
0,
-2,
-1,
-1,
3,
-4,
-4,
2,
3,
-6,
-1,
-3,
-2,
1,
3,
2,
4,
-1,
0,
-2,
-4,
-4,
6,
-1,
-2,
-1,
-3,
2,
2,
-3,
3,
3,
-3,
-2,
0,
3,
4,
2,
3,
0,
6,
-3,
3,
2,
4,
-3,
3,
-3,
6,
2,
1,
0,
1,
-5,
2,
-4,
1,
-2,
5,
5,
-2,
-1,
2,
4,
-1,
1,
1,
-3,
1,
5,
0,
2,
-1,
0,
3,
1,
2,
-4,
1,
2,
-1,
1,
3,
0,
0,
7,
5,
4,
1,
2,
2,
3,
1,
4,
0,
0,
3,
4,
-2,
0,
1,
2,
3,
0,
-3,
-1,
-4,
-7,
-1,
-1,
-4,
-1,
0,
2,
2,
2,
-5,
4,
-2,
0,
-3,
-4,
2,
0,
2,
2,
4,
2,
-5,
-3,
1,
3,
1,
2,
2,
0,
3,
3,
-1,
-2,
3,
-6,
1,
4,
-3,
-3,
2,
1,
4,
0,
3,
2,
1,
4,
-2,
-3,
0,
1,
0,
1,
2,
-3,
3,
3,
3,
-1,
4,
-1,
-1,
-1,
-1,
2,
-1,
-3,
-1,
-1,
0,
-2,
3,
0,
1,
4,
-1,
2,
2,
1,
1,
-1,
3,
-4,
1,
5,
6,
2,
2,
-1,
-5,
-2,
-1,
2,
-2,
-1,
-2,
0,
1,
-3,
1,
6,
-3,
-2,
2,
2,
1,
5,
-1,
4,
-1,
2,
-3,
2,
4,
3,
-5,
2,
2,
-4,
-4,
-2,
5,
0,
-1,
1,
3,
0,
0,
-1,
0,
-10,
-2,
-4,
0,
2,
0,
1,
3,
-1,
-2,
-2,
5,
3,
-1,
0,
-3,
-4,
2,
-2,
3,
-1,
-4,
1,
-2,
-2,
1,
1,
2,
-6,
-4,
-4,
5,
0,
5,
0,
1,
3,
1,
0,
-5,
1,
2,
0,
1,
3,
0,
0,
1,
-2,
-8,
1,
2,
-2,
3,
6,
1,
3,
-1,
-3,
-3,
2,
3,
2,
8,
-2,
0,
-1,
0,
1,
3,
-1,
-3,
-3,
1,
-5,
1,
3,
3,
3,
3,
2,
-1,
2,
2,
3,
1,
-5,
2,
0,
2,
3,
4,
-1,
-1,
-1,
2,
0,
7,
0,
-2,
-1,
1,
1,
1,
-2,
0,
4,
5,
1,
0,
3,
3,
-1,
-7,
2,
0,
-3,
-3,
2,
1,
-4,
-6,
1,
4,
-3,
0,
0,
3,
-4,
-3,
-7,
3,
5,
-4,
2,
1,
2,
7,
3,
-5,
1,
0,
2,
3,
5,
3,
-5,
3,
-2,
3,
2,
-3,
0,
-5,
2,
-2,
1,
3,
0,
2,
0,
-9,
7,
-4,
0,
-1,
0,
-1,
-2,
-2,
2,
0,
-1,
1,
-1,
5,
-4,
-1,
2,
-4,
1,
-2,
-2,
2,
4,
2,
4,
-3,
2,
-5,
-2,
-1,
-6,
5,
2,
-1,
0,
-3,
0,
0,
5,
2,
5,
-1,
-1,
2,
2,
0,
0,
1,
-1,
-5,
0,
3,
0,
-1,
1,
3,
-2,
-1,
-3,
5,
5,
-2,
6,
-1,
2,
1,
0,
-2,
2,
-1,
2,
1,
2,
1,
2,
-3,
-3,
-2,
-3,
-3,
-5,
2,
-8,
-3,
-2,
-1,
-2,
-1,
1,
-1,
-5,
3,
0,
2,
3,
-5,
4,
-4,
3,
-1,
3,
-3,
-2,
-2,
0,
1,
1,
0,
-3,
-2,
-1,
4,
4,
-1,
3,
2,
-2,
0,
-4,
-3,
-2,
-3,
3,
3,
4,
-4,
-1,
0,
0,
2,
0,
5,
4,
-1,
3,
-2,
0,
4,
1,
0,
-1,
-1,
1,
1,
0,
-3,
1,
-5,
-1,
-3,
1,
-4,
-2,
-6,
-5,
-5,
3,
-2,
-4,
0,
4,
-2,
-1,
0,
5,
-2,
3,
-5,
6,
0,
-3,
-2,
-2,
1,
4,
-2,
1,
0,
0,
-1,
6,
4,
0,
0,
3,
2,
1,
3,
2,
-3,
3,
3,
-4,
0,
0,
2,
0,
2,
-2,
1,
4,
1,
3,
2,
2,
-1,
-1,
-1,
-2,
3,
-1,
-5,
0,
-1,
5,
-2,
3,
1,
3,
-2,
-4,
-2,
-3,
4,
-1,
0,
5,
0,
5,
-5,
-4,
4,
0,
2,
2,
3,
-2,
-7,
1,
1,
2,
5,
-1,
5,
1,
-3,
-1,
1,
3,
-2,
2,
2,
-3,
4,
1,
3,
-1,
4,
2,
-1,
-3,
4,
0,
-1,
-1,
-6,
1,
3,
-4,
-1,
-1,
-2,
2,
1,
-2,
2,
1,
-3,
2,
-3,
2,
-1,
1,
3,
1,
-3,
4,
3,
-3,
-4,
0,
-6,
4,
4,
0,
1,
1,
1,
4,
-2,
-2,
-4,
2,
0,
0,
4,
5,
0,
-1,
-5,
0,
4,
1,
3,
-3,
-2,
0,
6,
1,
4,
0,
3,
0,
1,
-3,
1,
4,
-1,
-1,
3,
5,
0,
3,
-1,
-4,
0,
-1,
0,
3,
0,
-1,
1,
-2,
-1,
4,
-1,
5,
-2,
3,
-2,
1,
2,
3,
-3,
5,
2,
3,
-2,
5,
3,
0,
1,
4,
-3,
1,
3,
-1,
4,
-3,
-1,
0,
-4,
-1,
5,
-3,
3,
-2,
2,
5,
1,
-3,
-1,
2,
-4,
2,
-2,
6,
2,
4,
1,
1,
1,
5,
0,
4,
-1,
-2,
-3,
5,
3,
2,
3,
1,
5,
2,
7,
-1,
-5,
3,
-3,
5,
2,
-2,
2,
2,
0,
-3,
1,
2,
3,
1,
2,
2,
5,
-1,
-1,
2,
2,
1,
-3,
-2,
3,
-2,
-5,
-3,
4,
-5,
1,
-2,
-5,
-2,
3,
0,
-2,
-3,
0,
0,
3,
3,
1,
0,
-3,
-4,
3,
1,
0,
-3,
-4,
-1,
-1,
-1,
0,
1,
3,
0,
-6,
4,
-3,
-3,
5,
-4,
-2,
1,
-3,
0,
0,
-2,
3,
-1,
1,
-4,
3,
-2,
1,
-1,
2,
1,
1,
0,
6,
1,
4,
-2,
-1,
0,
3,
-4,
1,
-7,
4,
1,
-1,
3,
3,
5,
0,
0,
3,
-4,
1,
1,
-3,
2,
-3,
4,
-3,
3,
-3,
-2,
-1,
2,
1,
1,
2,
2,
2,
1,
1,
1,
0,
3,
-1,
4,
-3,
2,
2,
-1,
-1,
0,
-3,
-1,
-3,
3,
1,
2,
3,
2,
2,
-1,
3,
3,
1,
6,
2,
4,
1,
-2,
2,
-1,
-1,
2,
1,
6,
-1,
4,
-4,
-5,
1,
1,
-1,
0,
4,
-9,
0,
-1,
-1,
-1,
-5,
2,
-2,
-4,
2,
5,
-2,
-1,
-6,
5,
-5,
2,
2,
-5,
2,
-1,
2,
2,
3,
1,
1,
-3,
1,
3,
4,
-3,
5,
0,
1,
-2,
4,
-3,
-1,
0,
-3,
1,
-4,
-1,
-4,
-1,
1,
0,
3,
1,
0,
2,
2,
-3,
4,
4,
-1,
-4,
2,
-2,
-1,
-2,
2,
1,
3,
1,
1,
-3,
-1,
5,
-4,
-2,
0,
4,
-1,
1,
4,
4,
-3,
0,
-3,
5,
1,
4,
1,
0,
-7,
2,
-2,
-1,
2,
3,
2,
0,
6,
-4,
6,
-3,
-6,
-1,
-2,
4,
1,
1,
-1,
3,
-4,
0,
3,
-1,
3,
4,
1,
1,
4,
1,
0,
1,
1,
-5,
3,
1,
-2,
-3,
1,
1,
1,
-2,
-2,
1,
5,
2,
2,
-5,
-6,
0,
0,
5,
-2,
-2,
-2,
-2,
-4,
-2,
-5,
0,
3,
-5,
0,
4,
3,
-1,
-3,
2,
-3,
1,
6,
-1,
2,
3,
2,
0,
-1,
2,
-1,
-3,
1,
-4,
3,
1,
4,
4,
-7,
-3,
4,
-3,
-5,
-3,
2,
-1,
-7,
0,
0,
-1,
3,
-2,
4,
1,
2,
5,
2,
4,
6,
-3,
3,
1,
6,
-3,
-3,
5,
1,
1,
3,
7,
-3,
-2,
8,
1,
2,
3,
5,
-3,
3,
-5,
-2,
1,
1,
2,
-2,
0,
3,
5,
2,
-4,
-1,
6,
2,
-1,
1,
-3,
0,
0,
3,
-1,
5,
-2,
-3,
-3,
3,
0,
-1,
-2,
-4,
-1,
-2,
-2,
3,
-2,
4,
1,
-3,
2,
-3,
-2,
0,
-1,
2,
2,
-1,
-3,
-1,
-2,
1,
0,
0,
1,
1,
1,
2,
2,
-1,
2,
-2,
4,
4,
2,
2,
0,
2,
5,
3,
5,
6,
1,
1,
3,
2,
3,
3,
0,
-6,
1,
3,
-1,
3,
0,
4,
0,
2,
0,
3,
-1,
-3,
-3,
0,
5,
1,
-2,
4,
3,
-2,
6,
0,
3,
0,
4,
-4,
-1,
-4,
1,
3,
6,
5,
2,
-4,
-2,
0,
-1,
4,
0,
2,
2,
0,
6,
-3,
-3,
0,
-1,
-1,
5,
-5,
-5,
-2,
-3,
-5,
-3,
-2,
-1,
0,
0,
1,
-7,
0,
-6,
-7,
-3,
-7,
-3,
-1,
0,
-1,
-1,
2,
3,
-1,
3,
5,
4,
0,
-3,
0,
-3,
-1,
0,
-9,
2,
3,
3,
5,
3,
3,
-4,
-3,
-2,
3,
-6,
0,
0,
0,
3,
0,
-2,
-2,
2,
-1,
-4,
-5,
3,
2,
4,
-3,
1,
3,
4,
2,
-1,
0,
4,
0,
2,
-5,
-4,
2,
2,
-3,
1,
1,
-3,
-6,
-4,
1,
2,
-4,
2,
4,
1,
-2,
3,
-7,
-1,
3,
1,
1,
-7,
-5,
1,
3,
-2,
2,
-1,
-1,
-3,
2,
3,
3,
1,
0,
-3,
-4,
-1,
1,
-3,
-2,
-2,
1,
1,
4,
3,
5,
4,
-4,
1,
-4,
1,
-4,
0,
3,
0,
2,
-2,
4,
0,
4,
-3,
2,
2,
0,
4,
2,
0,
3,
-4,
-4,
2,
2,
5,
5,
0,
0,
3,
0,
3,
3,
0,
1,
2,
3,
2,
-4,
3,
-5,
2,
0,
-2,
3,
-1,
2,
0,
-4,
6,
-1,
-3,
0,
1,
4,
3,
2,
-1,
-2,
2,
-3,
-3,
-2,
-1,
2,
1,
0,
1,
-2,
3,
-1,
1,
-2,
1,
6,
2,
5,
3,
1,
0,
3,
-3,
2,
-1,
1,
2,
2,
0,
-1,
0,
-5,
-1,
-2,
-5,
-1,
1,
-3,
4,
3,
-3,
3,
4,
-4,
-3,
0,
4,
-3,
-1,
1,
-3,
4,
-3,
0,
-5,
0,
-6,
-2,
-4,
3,
-5,
2,
4,
-2,
1,
2,
-4,
0,
-1,
-1,
-1,
-6,
3,
0,
3,
-2,
-2,
-3,
0,
5,
-1,
-3,
0,
4,
3,
3,
-4,
3,
-2,
-4,
-5,
4,
-4,
-7,
-2,
-5,
-1,
1,
1,
4,
-4,
5,
-1,
3,
2,
-1,
3,
-1,
5,
-1,
1,
-4,
6,
-1,
-3,
-1,
-3,
2,
-8,
0,
4,
1,
-3,
-4,
4,
1,
0,
4,
1,
0,
-1,
-3,
6,
3,
2,
2,
-2,
2,
2,
-2,
2,
-1,
1,
-3,
-3,
3,
1,
2,
3,
2,
5,
-1,
-1,
-1,
1,
0,
-2,
6,
0,
-4,
0,
-4,
0,
0,
2,
3,
2,
0,
2,
5,
1,
2,
-4,
7,
-2,
-5,
3,
-1,
1,
1,
-3,
2,
3,
3,
4,
4,
-2,
2,
2,
-3,
0,
2,
0,
-3,
-1,
1,
0,
2,
-5,
2,
7,
0,
-2,
4,
-2,
-6,
0,
5,
5,
1,
0,
5,
3,
1,
-3,
-1,
2,
1,
3,
0,
5,
1,
-2,
1,
0,
7,
-3,
-5,
-2,
3,
11,
-6,
2,
-4,
-1,
0,
4,
-6,
-9,
-4,
-2,
-4,
-1,
3,
2,
0,
6,
3,
6,
-3,
-2,
7,
-1,
-8,
-1,
3,
-2,
0,
-3,
3,
0,
0,
-2,
0,
-4,
-4,
-1,
5,
1,
-1,
0,
2,
3,
-1,
-2,
2,
1,
2,
-1,
-1,
-5,
-1,
0,
0,
-1,
-1,
4,
2,
6,
6,
1,
-2,
-3,
-1,
1,
-3,
4,
0,
-3,
-3,
-3,
0,
-2,
-4,
-2,
0,
4,
-2,
0,
2,
1,
0,
2,
2,
-1,
2,
2,
-3,
1,
3,
0,
1,
4,
0,
4,
4,
0,
2,
-1,
-1,
4,
0,
-1,
0,
-8,
3,
-3,
5,
-5,
2,
3,
2,
-2,
2,
1,
2,
1,
3,
4,
-1,
3,
2,
2,
-2,
3,
6,
3,
1,
-3,
-3,
2,
1,
-1,
3,
3,
0,
4,
-7,
-2,
-3,
3,
0,
5,
2,
-1,
-3,
0,
1,
-2,
2,
0,
0,
-3,
0,
-4,
-4,
-1,
-3,
2,
0,
-3,
-1,
-3,
0,
-1,
1,
1,
-6,
0,
5,
0,
3,
0,
0,
0,
-2,
-2,
-2,
-4,
-1,
6,
0,
1,
2,
5,
-1,
1,
0,
-2,
0,
3,
-1,
1,
-7,
-1,
4,
2,
-4,
4,
4,
1,
-2,
3,
-1,
-1,
-3,
-2,
7,
4,
2,
1,
0,
3,
4,
0,
4,
0,
3,
2,
1,
1,
2,
1,
0,
3,
1,
-4,
6,
-1,
1,
4,
0,
-3,
2,
1,
-3,
3,
2,
2,
-5,
0,
-2,
4,
0,
-4,
-5,
6,
0,
1,
-1,
-4,
4,
-4,
-7,
-4,
4,
1,
-1,
2,
-1,
0,
-5,
-2,
3,
3,
0,
0,
2,
-1,
5,
0,
0,
3,
1,
2,
2,
2,
2,
3,
-2,
-4,
2,
-4,
1,
-4,
-5,
3,
2,
2,
0,
-2,
4,
4,
2,
-3,
2,
1,
-2,
-1,
-1,
2,
-3,
7,
-4,
4,
3,
1,
0,
-6,
6,
-2,
1,
-4,
-1,
7,
3,
1,
-5,
0,
2,
-4,
-8,
0,
-2,
3,
3,
-1,
0,
6,
-3,
7,
1,
1,
-2,
1,
3,
-1,
3,
-1,
-6,
-5,
1,
-2,
2,
4,
-1,
-2,
3,
1,
-3,
-1,
0,
0,
-1,
1,
3,
-2,
3,
0,
0,
1,
0,
-4,
2,
1,
-2,
2,
-6,
-1,
-2,
1,
-1,
1,
2,
4,
3,
-1,
-1,
4,
-1,
-2,
0,
2,
-1,
0,
0,
2,
0,
-5,
3,
-1,
2,
3,
-2,
0,
-1,
3,
0,
3,
0,
-4,
2,
-4,
1,
-4,
0,
-1,
5,
2,
1,
1,
1,
-5,
-1,
-1,
1,
0,
-1,
5,
0,
2,
-2,
-6,
2,
-8,
-2,
4,
-4,
0,
2,
-4,
2,
-3,
0,
3,
4,
6,
3,
-1,
-1,
5,
1,
1,
-2,
1,
1,
4,
1,
2,
3,
0,
-3,
-4,
3,
-2,
4,
-8,
4,
1,
1,
2,
0,
3,
1,
-1,
1,
4,
0,
1,
-2,
2,
0,
5,
0,
-1,
-1,
4,
-3,
4,
-2,
4,
0,
-1,
-1,
3,
1,
-5,
5,
0,
2,
2,
3,
-2,
0,
4,
-1,
1,
3,
1,
2,
2,
4,
-5,
-2,
-7,
-5,
-1,
-2,
3,
2,
-3,
3,
-3,
0,
-3,
-1,
0,
-2,
-7,
-2,
6,
-2,
0,
-2,
-1,
-2,
-3,
0,
-3,
-1,
-4,
3,
1,
1,
2,
4,
-3,
-1,
1,
-1,
3,
-3,
3,
0,
0,
1,
2,
3,
-3,
-2,
-3,
-1,
1,
4,
3,
2,
1,
1,
-4,
-9,
0,
1,
1,
-1,
-9,
0,
-1,
2,
-7,
-1,
-3,
3,
2,
-2,
0,
2,
5,
-4,
4,
-1,
2,
-1,
2,
2,
2,
1,
1,
1,
3,
5,
2,
0,
2,
-1,
0,
4,
0,
3,
0,
2,
6,
-1,
2,
-5,
2,
-7,
3,
-1,
-5,
-9,
-3,
1,
5,
-1,
-4,
-2,
-1,
2,
1,
4,
-6,
5,
0,
-6,
7,
2,
-5,
5,
2,
4,
-9,
-3,
-1,
6,
-6,
8,
1,
-4,
-2,
-6,
5,
1,
-13,
1,
6,
2,
3,
0,
-6,
-3,
0,
-7,
-10,
-3,
-8,
6,
4,
-2,
-9,
-6,
2,
5,
-4,
4,
-8,
5,
-3,
-7,
2,
-7,
2,
-4,
2,
-4,
-2,
2,
1,
-5,
-2,
4,
-9,
5,
-2,
3,
-12,
-5,
6,
-3,
3,
-5,
1,
2,
0,
3,
4,
2,
0,
-5,
-1,
3,
0,
-2,
-8,
7,
5,
-1,
-9,
5,
-3,
-7,
6,
2,
-1,
6,
-4,
4,
0,
2,
-5,
5,
-7,
3,
-3,
-2,
-2,
-1,
2,
-9,
3,
2,
-6,
-2,
3,
-1,
7,
-2,
7,
3,
1,
-4,
-8,
-8,
-6,
0,
-10,
0,
4,
3,
-1,
-6,
-2,
1,
3,
-9,
3,
1,
-6,
6,
-6,
-13,
5,
2,
-8,
0,
4,
-9,
-12,
5,
-2,
-2,
4,
-1,
1,
-12,
4,
0,
4,
-2,
-1,
-12,
3,
-1,
-3,
8,
-1,
2,
-2,
-7,
-5,
-9,
-5,
2,
-2,
5,
7,
-1,
-4,
-5,
-3,
3,
3,
-4,
1,
3,
-2,
5,
3,
-2,
-5,
5,
-1,
-3,
-6,
-2,
-3,
4,
3,
2,
0,
2,
1,
1,
-5,
-6,
4,
6,
3,
-1,
-3,
-4,
1,
-1,
-14,
-9,
-3,
0,
8,
9,
-7,
1,
5,
-4,
-12,
-7,
3,
1,
-12,
4,
0,
6,
-6,
2,
3,
-12,
0,
-3,
-5,
1,
9,
0,
-5,
-6,
1,
3,
0,
-1,
-3,
-14,
5,
1,
3,
2,
-8,
-4,
-3,
3,
4,
-12,
3,
-5,
2,
4,
-5,
1,
-6,
-2,
-4,
4,
0,
3,
3,
-2,
-5,
3,
-10,
-2,
4,
-14,
3,
3,
-5,
3,
0,
-7,
-10,
-10,
-2,
1,
6,
1,
1,
2,
0,
4,
5,
10,
-5,
-7,
5,
-3,
-3,
-13,
3,
-5,
0,
-3,
-2,
0,
1,
-3,
-8,
5,
1,
-2,
3,
-2,
4,
1,
-1,
-10,
2,
1,
4,
-1,
-1,
-2,
-6,
2,
5,
6,
0,
-3,
-3,
4,
9,
8,
-1,
-3,
8,
-6,
-1,
-6,
-9,
4,
-5,
-6,
-3,
9,
-10,
-2,
-8,
8,
-5,
2,
4,
-1,
-4,
-9,
3,
4,
-7,
-2,
3,
-7,
4,
-7,
-10,
5,
-7,
4,
5,
1,
-5,
4,
1,
-8,
2,
-1,
6,
3,
0,
-3,
-14,
-5,
-2,
7,
-3,
-11,
-10,
1,
-1,
7,
5,
4,
-8,
-6,
2,
-8,
2,
1,
3,
-1,
6,
4,
-9,
1,
-5,
2,
2,
-10,
2,
1,
3,
-8,
-1,
1,
6,
1,
-7,
1,
4,
-5,
2,
-11,
-1,
-12,
0,
-1,
5,
0,
6,
6,
-1,
-7,
4,
2,
0,
-5,
-9,
4,
2,
-4,
1,
-8,
4,
-2,
-5,
2,
2,
-8,
2,
-2,
2,
-2,
-9,
-4,
-7,
5,
5,
3,
4,
-7,
3,
-9,
2,
3,
0,
-8,
3,
-5,
3,
-2,
1,
1,
1,
0,
-6,
6,
-4,
-5,
2,
-14,
5,
-1,
5,
-2,
-1,
4,
3,
-10,
-12,
-6,
3,
-3,
-3,
1,
-6,
3,
-3,
-8,
-4,
7,
3,
-4,
-6,
7,
-2,
-1,
-6,
-10,
3,
4,
5,
-12,
2,
-3,
4,
2,
5,
0,
-1,
-5,
-1,
6,
0,
-9,
1,
1,
-12,
-8,
4,
0,
4,
-4,
-10,
-1,
6,
-3,
4,
-1,
-10,
3,
6,
-1,
-3,
5,
3,
1,
1,
-5,
-2,
-7,
-12,
0,
3,
-7,
-2,
7,
6,
-1,
7,
0,
-11,
0,
-2,
15,
-7,
-11,
-4,
-2,
2,
-11,
0,
-7,
1,
-9,
-4,
-1,
4,
2,
-3,
7,
1,
4,
-4,
1,
0,
-6,
4,
-4,
2,
-7,
5,
7,
-5,
-7,
-2,
4,
-10,
3,
-3,
1,
4,
-3,
-3,
2,
2,
5,
-1,
0,
4,
-12,
3,
4,
-5,
-2,
-7,
-5,
-3,
5,
-6,
5,
0,
-8,
8,
-5,
-8,
2,
-7,
1,
8,
-15,
2,
7,
2,
-5,
4,
-8,
-2,
0,
4,
-7,
1,
-3,
4,
5,
0,
1,
3,
1,
-5,
-3,
-2,
-8,
6,
-6,
8,
0,
-11,
-7,
-6,
-1,
5,
-2,
3,
-8,
4,
-3,
4,
-9,
-5,
3,
3,
-5,
-1,
2,
-8,
2,
-3,
1,
-2,
-1,
4,
# 9 "../NN_Code/NN_Code/neuralnetwork_ccode.cpp" 2
};

void setBias(char bias_r[(70*2) + 10]) {_ssdm_SpecArrayDimSize(bias_r,(70*2) + 10);
_ssdm_InlineSelf(0, "");
 for (short unsigned int i = 0; i < (70*2) + 10; i++)
 {
  bias_[i] = bias_r[i];
 }
}

short int getBias(unsigned char layer, unsigned char neuron) {
 //#pragma HLS inline
 unsigned char mul = 1;
 if (layer == 1)
 {
  mul = 10;
 }
 else if (layer == 2)
 {
  mul = 100;
 }

 return bias_[(layer)*70 + neuron] * mul;
}

void setWeights(char weights_r[80*70 + 70*70 + 10*70]) {_ssdm_SpecArrayDimSize(weights_r,80*70 + 70*70 + 10*70);
_ssdm_InlineSelf(0, "");
 for (short unsigned int i = 0; i < 80*70 + 70*70 + 10*70; i++)
 {
  weights_[i] = weights_r[i];
 }
 }

char getWeight(unsigned char layer, unsigned char neuron, unsigned char number) {
 //#pragma HLS inline
 short int startIndex = 0;
 short int neuronIndex = 70 * neuron;
 if (layer < 2 && layer != 0)
 {
  startIndex = 80*70;
 }
 else if (layer == 2)
 {
  startIndex = 70*70 + 80*70;
  neuronIndex = 10 * neuron;
 }
 return weights_[startIndex + neuronIndex + number];
}

void runLayer(unsigned char layer, unsigned char numOfInNeurons, unsigned char numOfOutNeurons, int * input, int * output) {
_ssdm_InlineSelf(0, "");
 short int outNeurons = 0;
 for(; outNeurons < numOfOutNeurons; outNeurons++){
  output[outNeurons] = getBias(layer, outNeurons);
 }

 runLayer_outerloop:for (outNeurons = 0; outNeurons < numOfOutNeurons; outNeurons++)
 {
  runLayer_innerloop:for (short int inNeurons = 0; inNeurons < numOfInNeurons; inNeurons++)
  {
_ssdm_op_SpecPipeline(-1, 1, 1, 0, "");
 output[outNeurons] += (getWeight(layer, inNeurons, outNeurons) * input[inNeurons]);
  }
 }
}

void updateOutput(int* i, int* o, char idx){
 o[idx] = i[idx];
}

void relu(int* data, unsigned char numOfNeurons) {
_ssdm_InlineSelf(0, "");
 relu_label1:for (unsigned char i = 0; i < numOfNeurons; i++)
 {
  if (data[i] < 0)
  {
   data[i] = 0;
  }
 }
}

unsigned char softmax_lite(int* data, unsigned char numOfNeurons) {
_ssdm_InlineSelf(0, "");
 int max = data[0];
 unsigned char max_index = 0;

 softmax_lite_loop:for (unsigned char i = 1; i < numOfNeurons; i++) {
  if (data[i] > max) {
   max_index = i;
   max = data[i];
  }
 }

 return max_index;
}

unsigned char run_classification(int * input_r) {
 //#pragma HLS inline
 static int resArray1[70] = { 0 };
 static int resArray2[70] = { 0 };

 runLayer(0, 80, 70, input_r, resArray1);
 relu(resArray1, 70);
 runLayer(1, 70, 70, resArray1, resArray2);
 relu(resArray2, 70);
 runLayer(2, 70, 10, resArray2, resArray1);

 return softmax_lite(resArray1, 10);
}

unsigned char NeuralNetwork(int input_r[80], char biasWeight_input_r[80*70 + 70*70 + 10*70], char runNN_r, char setBais_r, char setWeight_r) {_ssdm_SpecArrayDimSize(biasWeight_input_r,80*70 + 70*70 + 10*70);_ssdm_SpecArrayDimSize(input_r,80);
_ssdm_op_SpecInterface(input_r, "s_axilite", 0, 0, "", 0, 0, "NNIO", "", "", 0, 0, 0, 0, "", "");
_ssdm_op_SpecInterface(biasWeight_input_r, "s_axilite", 0, 0, "", 0, 0, "NNIO", "", "", 0, 0, 0, 0, "", "");
_ssdm_op_SpecInterface(runNN_r, "s_axilite", 0, 0, "", 0, 0, "NNIO", "", "", 0, 0, 0, 0, "", "");
_ssdm_op_SpecInterface(setBais_r, "s_axilite", 0, 0, "", 0, 0, "NNIO", "", "", 0, 0, 0, 0, "", "");
_ssdm_op_SpecInterface(setWeight_r, "s_axilite", 0, 0, "", 0, 0, "NNIO", "", "", 0, 0, 0, 0, "", "");
_ssdm_op_SpecInterface(0, "s_axilite", 0, 0, "", 0, 0, "NNIO", "", "", 0, 0, 0, 0, "", "");

 unsigned char res = 254;

 if(runNN_r == 1 && setBais_r == 0 && setWeight_r == 0){
  res = run_classification(input_r);
 }
 else if(runNN_r == 0 && setBais_r == 1 && setWeight_r == 0){
  setBias(biasWeight_input_r);
  res = 255;
 }
 else if(runNN_r == 0 && setBais_r == 0 && setWeight_r == 1){
  setWeights(biasWeight_input_r);
  res = 255;
 }

 return res;
}

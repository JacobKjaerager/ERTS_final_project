// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module run_classification (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        bias_s_address0,
        bias_s_ce0,
        bias_s_q0,
        weights_s_address0,
        weights_s_ce0,
        weights_s_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 27'd1;
parameter    ap_ST_fsm_state2 = 27'd2;
parameter    ap_ST_fsm_state3 = 27'd4;
parameter    ap_ST_fsm_pp0_stage0 = 27'd8;
parameter    ap_ST_fsm_pp0_stage1 = 27'd16;
parameter    ap_ST_fsm_state10 = 27'd32;
parameter    ap_ST_fsm_state11 = 27'd64;
parameter    ap_ST_fsm_state12 = 27'd128;
parameter    ap_ST_fsm_state13 = 27'd256;
parameter    ap_ST_fsm_state14 = 27'd512;
parameter    ap_ST_fsm_state15 = 27'd1024;
parameter    ap_ST_fsm_pp1_stage0 = 27'd2048;
parameter    ap_ST_fsm_pp1_stage1 = 27'd4096;
parameter    ap_ST_fsm_state23 = 27'd8192;
parameter    ap_ST_fsm_state24 = 27'd16384;
parameter    ap_ST_fsm_state25 = 27'd32768;
parameter    ap_ST_fsm_state26 = 27'd65536;
parameter    ap_ST_fsm_state27 = 27'd131072;
parameter    ap_ST_fsm_state28 = 27'd262144;
parameter    ap_ST_fsm_state29 = 27'd524288;
parameter    ap_ST_fsm_pp2_stage0 = 27'd1048576;
parameter    ap_ST_fsm_pp2_stage1 = 27'd2097152;
parameter    ap_ST_fsm_state37 = 27'd4194304;
parameter    ap_ST_fsm_state38 = 27'd8388608;
parameter    ap_ST_fsm_state39 = 27'd16777216;
parameter    ap_ST_fsm_state40 = 27'd33554432;
parameter    ap_ST_fsm_state41 = 27'd67108864;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] input_r_address0;
output   input_r_ce0;
input  [31:0] input_r_q0;
output  [7:0] bias_s_address0;
output   bias_s_ce0;
input  [7:0] bias_s_q0;
output  [13:0] weights_s_address0;
output   weights_s_ce0;
input  [7:0] weights_s_q0;
output  [7:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_r_ce0;
reg[7:0] bias_s_address0;
reg bias_s_ce0;
reg[13:0] weights_s_address0;
reg weights_s_ce0;
reg[7:0] ap_return;

(* fsm_encoding = "none" *) reg   [26:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [6:0] resArray1_address0;
reg    resArray1_ce0;
reg    resArray1_we0;
reg   [31:0] resArray1_d0;
wire   [31:0] resArray1_q0;
reg   [6:0] resArray2_address0;
reg    resArray2_ce0;
reg    resArray2_we0;
reg   [31:0] resArray2_d0;
wire   [31:0] resArray2_q0;
reg   [12:0] indvar_flatten_reg_290;
reg   [6:0] outNeurons_1_i1_reg_301;
reg   [6:0] inNeurons_0_i1_reg_312;
reg   [12:0] indvar_flatten1_reg_345;
reg   [6:0] outNeurons_1_i3_reg_356;
reg   [6:0] inNeurons_0_i6_reg_367;
reg   [9:0] indvar_flatten2_reg_400;
reg   [3:0] outNeurons_1_i_reg_411;
reg   [6:0] inNeurons_0_i_reg_422;
reg  signed [7:0] reg_466;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state8_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_flag00011001;
reg   [0:0] exitcond_flatten_reg_1020;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_state17_pp1_stage1_iter0;
wire    ap_block_state19_pp1_stage1_iter1;
wire    ap_block_state21_pp1_stage1_iter2;
wire    ap_block_pp1_stage1_flag00011001;
reg   [0:0] exitcond_flatten1_reg_1113;
reg   [0:0] ap_reg_pp1_iter1_exitcond_flatten1_reg_1113;
wire    ap_CS_fsm_pp2_stage1;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_state31_pp2_stage1_iter0;
wire    ap_block_state33_pp2_stage1_iter1;
wire    ap_block_state35_pp2_stage1_iter2;
wire    ap_block_pp2_stage1_flag00011001;
reg   [0:0] exitcond_flatten2_reg_1211;
reg   [0:0] ap_reg_pp2_iter1_exitcond_flatten2_reg_1211;
reg   [7:0] reg_470;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state27;
reg  signed [31:0] reg_474;
wire    ap_CS_fsm_state38;
wire   [31:0] tmp_fu_479_p1;
reg   [31:0] tmp_reg_1001;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond1_fu_484_p2;
wire   [6:0] outNeurons_fu_490_p2;
reg   [6:0] outNeurons_reg_1010;
wire   [0:0] exitcond_flatten_fu_501_p2;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten_reg_1020;
reg   [0:0] ap_reg_pp0_iter2_exitcond_flatten_reg_1020;
wire   [12:0] indvar_flatten_next_fu_507_p2;
reg   [12:0] indvar_flatten_next_reg_1024;
reg    ap_enable_reg_pp0_iter0;
wire   [6:0] inNeurons_0_i1_mid2_fu_519_p3;
reg   [6:0] inNeurons_0_i1_mid2_reg_1029;
wire   [6:0] tmp_6_mid2_v_fu_533_p3;
reg   [6:0] tmp_6_mid2_v_reg_1036;
reg   [6:0] ap_reg_pp0_iter1_tmp_6_mid2_v_reg_1036;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state5_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state9_pp0_stage1_iter2;
wire    ap_block_pp0_stage1_flag00011001;
wire   [6:0] inNeurons_fu_555_p2;
reg   [6:0] inNeurons_reg_1053;
reg  signed [31:0] input_r_load_reg_1058;
wire   [31:0] grp_fu_564_p2;
reg   [31:0] tmp_8_reg_1068;
reg   [6:0] resArray1_addr_1_reg_1073;
wire   [6:0] i_fu_585_p2;
reg   [6:0] i_reg_1081;
wire    ap_CS_fsm_state11;
reg   [6:0] resArray1_addr_2_reg_1086;
wire   [0:0] exitcond_i1_fu_579_p2;
wire   [31:0] tmp_s_fu_604_p1;
reg   [31:0] tmp_s_reg_1094;
wire    ap_CS_fsm_state13;
wire   [0:0] exitcond7_fu_608_p2;
wire   [6:0] outNeurons_1_fu_614_p2;
reg   [6:0] outNeurons_1_reg_1103;
wire   [0:0] exitcond_flatten1_fu_670_p2;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state16_pp1_stage0_iter0;
wire    ap_block_state18_pp1_stage0_iter1;
wire    ap_block_state20_pp1_stage0_iter2;
wire    ap_block_state22_pp1_stage0_iter3;
wire    ap_block_pp1_stage0_flag00011001;
reg   [0:0] ap_reg_pp1_iter2_exitcond_flatten1_reg_1113;
wire   [12:0] indvar_flatten_next1_fu_676_p2;
reg   [12:0] indvar_flatten_next1_reg_1117;
reg    ap_enable_reg_pp1_iter0;
wire   [6:0] inNeurons_0_i6_mid2_fu_688_p3;
reg   [6:0] inNeurons_0_i6_mid2_reg_1122;
wire   [6:0] tmp_12_mid2_v_fu_702_p3;
reg   [6:0] tmp_12_mid2_v_reg_1129;
reg   [6:0] ap_reg_pp1_iter1_tmp_12_mid2_v_reg_1129;
reg   [6:0] ap_reg_pp1_iter2_tmp_12_mid2_v_reg_1129;
wire   [12:0] tmp23_cast_mid2_v_fu_713_p2;
reg   [12:0] tmp23_cast_mid2_v_reg_1136;
wire   [6:0] inNeurons_1_fu_719_p2;
reg   [6:0] inNeurons_1_reg_1141;
wire   [31:0] grp_fu_742_p2;
reg   [31:0] tmp_13_reg_1161;
reg   [6:0] resArray2_addr_1_reg_1166;
wire   [6:0] i_1_fu_764_p2;
reg   [6:0] i_1_reg_1174;
wire    ap_CS_fsm_state24;
reg   [6:0] resArray2_addr_2_reg_1179;
wire   [0:0] exitcond_i_fu_758_p2;
wire   [31:0] tmp_17_fu_783_p1;
reg   [31:0] tmp_17_reg_1187;
wire    ap_CS_fsm_state26;
wire   [0:0] exitcond4_fu_787_p2;
wire   [3:0] outNeurons_3_fu_793_p2;
reg   [3:0] outNeurons_3_reg_1196;
wire   [15:0] tmp_60_i1_fu_818_p2;
reg   [15:0] tmp_60_i1_reg_1206;
wire    ap_CS_fsm_state28;
wire   [0:0] exitcond_flatten2_fu_828_p2;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state30_pp2_stage0_iter0;
wire    ap_block_state32_pp2_stage0_iter1;
wire    ap_block_state34_pp2_stage0_iter2;
wire    ap_block_state36_pp2_stage0_iter3;
wire    ap_block_pp2_stage0_flag00011001;
reg   [0:0] ap_reg_pp2_iter2_exitcond_flatten2_reg_1211;
wire   [9:0] indvar_flatten_next2_fu_834_p2;
reg   [9:0] indvar_flatten_next2_reg_1215;
reg    ap_enable_reg_pp2_iter0;
wire   [6:0] inNeurons_0_i_mid2_fu_846_p3;
reg   [6:0] inNeurons_0_i_mid2_reg_1220;
wire   [3:0] tmp_23_mid2_v_fu_860_p3;
reg   [3:0] tmp_23_mid2_v_reg_1228;
reg   [3:0] ap_reg_pp2_iter1_tmp_23_mid2_v_reg_1228;
reg   [3:0] ap_reg_pp2_iter2_tmp_23_mid2_v_reg_1228;
wire   [13:0] tmp_49_i1_fu_905_p2;
reg   [13:0] tmp_49_i1_reg_1235;
wire   [6:0] inNeurons_2_fu_911_p2;
reg   [6:0] inNeurons_2_reg_1240;
reg  signed [31:0] resArray2_load_2_reg_1255;
wire   [31:0] grp_fu_928_p2;
reg   [31:0] tmp_22_reg_1265;
reg   [6:0] resArray1_addr_5_reg_1270;
wire   [7:0] max_index_cast_fu_943_p1;
reg   [7:0] max_index_cast_reg_1275;
wire    ap_CS_fsm_state39;
wire   [0:0] exitcond_fu_947_p2;
wire   [3:0] i_2_fu_958_p2;
reg   [3:0] i_2_reg_1288;
reg   [31:0] max_1_reg_1293;
wire    ap_CS_fsm_state40;
wire   [31:0] max_1_max_0_i_fu_969_p3;
wire    ap_CS_fsm_state41;
wire   [7:0] max_index_max_index_s_fu_976_p3;
wire    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state4;
wire    ap_block_pp0_stage1_flag00011011;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp1_stage0_flag00011011;
reg    ap_condition_pp1_exit_iter0_state16;
wire    ap_block_pp1_stage1_flag00011011;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
wire    ap_block_pp2_stage0_flag00011011;
reg    ap_condition_pp2_exit_iter0_state30;
wire    ap_block_pp2_stage1_flag00011011;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg   [6:0] outNeurons_0_i2_reg_279;
wire    ap_CS_fsm_state3;
reg   [12:0] indvar_flatten_phi_fu_294_p4;
wire    ap_block_pp0_stage0_flag00000000;
reg   [6:0] outNeurons_1_i1_phi_fu_305_p4;
reg   [6:0] inNeurons_0_i1_phi_fu_316_p4;
reg   [6:0] i_0_i1_reg_323;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state10;
reg   [6:0] outNeurons_0_i1_reg_334;
wire    ap_CS_fsm_state15;
reg   [12:0] indvar_flatten1_phi_fu_349_p4;
wire    ap_block_pp1_stage0_flag00000000;
reg   [6:0] outNeurons_1_i3_phi_fu_360_p4;
reg   [6:0] inNeurons_0_i6_phi_fu_371_p4;
reg   [6:0] i_0_i_reg_378;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state23;
reg   [3:0] outNeurons_0_i_reg_389;
wire    ap_CS_fsm_state29;
reg   [9:0] indvar_flatten2_phi_fu_404_p4;
wire    ap_block_pp2_stage0_flag00000000;
reg   [3:0] outNeurons_1_i_phi_fu_415_p4;
reg   [6:0] inNeurons_0_i_phi_fu_426_p4;
reg   [31:0] max_0_i_reg_433;
reg   [7:0] max_index_0_i_reg_443;
reg   [3:0] max_index_reg_455;
wire   [31:0] tmp_49_i_cast_fu_551_p1;
wire    ap_block_pp0_stage1_flag00000000;
wire   [31:0] tmp_9_fu_544_p1;
wire   [31:0] tmp_6_mid2_fu_569_p1;
wire   [31:0] tmp_7_fu_591_p1;
wire   [31:0] tmp_57_i_cast_fu_630_p1;
wire   [31:0] tmp_49_i9_cast_fu_734_p1;
wire   [31:0] tmp_10_fu_727_p1;
wire   [31:0] tmp_12_mid2_fu_748_p1;
wire    ap_block_pp1_stage1_flag00000000;
wire   [31:0] tmp_15_fu_770_p1;
wire   [31:0] tmp_57_i1_cast_fu_809_p1;
wire   [31:0] tmp_49_i20_cast_fu_920_p1;
wire   [31:0] tmp_19_fu_916_p1;
wire   [31:0] tmp_23_mid2_fu_933_p1;
wire    ap_block_pp2_stage1_flag00000000;
wire   [31:0] tmp_24_fu_953_p1;
wire  signed [31:0] tmp_4_fu_496_p1;
wire   [31:0] tmp_1_fu_573_p2;
wire   [0:0] tmp_2_fu_596_p3;
wire  signed [31:0] tmp_18_fu_824_p1;
wire   [31:0] tmp_23_fu_937_p2;
wire    ap_CS_fsm_state37;
wire  signed [31:0] tmp_6_fu_665_p1;
wire   [31:0] tmp_14_fu_752_p2;
wire   [0:0] tmp_16_fu_775_p3;
wire   [0:0] exitcond2_fu_513_p2;
wire   [6:0] outNeurons_s_fu_527_p2;
wire   [12:0] grp_fu_983_p3;
wire   [7:0] neuron_assign_fu_620_p1;
wire   [7:0] tmp_57_i_fu_624_p2;
wire   [10:0] p_shl_fu_635_p3;
wire   [8:0] p_shl1_fu_647_p3;
wire  signed [11:0] p_shl_cast_fu_643_p1;
wire  signed [11:0] p_shl1_cast_fu_655_p1;
wire   [11:0] tmp_60_i_fu_659_p2;
wire   [0:0] exitcond3_fu_682_p2;
wire   [6:0] outNeurons_2_fu_696_p2;
wire   [12:0] tmp23_cast_mid2_v_v_fu_710_p1;
wire   [13:0] grp_fu_992_p3;
wire   [7:0] neuron_assign_1_fu_799_p1;
wire   [7:0] tmp_57_i1_fu_803_p2;
wire  signed [7:0] tmp_60_i1_fu_818_p0;
wire   [0:0] exitcond5_fu_840_p2;
wire   [3:0] outNeurons_4_fu_854_p2;
wire   [13:0] tmp2_mid2_v_fu_868_p1;
wire   [7:0] p_shl1_i_fu_884_p3;
wire   [9:0] p_shl1_i15_cast_fu_891_p1;
wire   [9:0] p_shl_i_fu_877_p3;
wire   [9:0] neuronIndex_fu_895_p2;
wire   [13:0] tmp_46_i17_cast_fu_901_p1;
wire   [13:0] tmp2_mid2_fu_871_p2;
wire   [0:0] tmp_25_fu_964_p2;
wire   [6:0] grp_fu_983_p0;
wire   [7:0] grp_fu_983_p1;
wire   [6:0] grp_fu_983_p2;
wire   [6:0] grp_fu_992_p0;
wire   [7:0] grp_fu_992_p1;
wire   [12:0] grp_fu_992_p2;
reg   [7:0] ap_return_preg;
reg   [26:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
wire   [12:0] grp_fu_983_p00;
wire   [12:0] grp_fu_983_p20;
wire   [13:0] grp_fu_992_p00;
wire   [13:0] grp_fu_992_p20;

// power-on initialization
initial begin
#0 ap_CS_fsm = 27'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_return_preg = 8'd0;
end

run_classificatiobkb #(
    .DataWidth( 32 ),
    .AddressRange( 70 ),
    .AddressWidth( 7 ))
resArray1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(resArray1_address0),
    .ce0(resArray1_ce0),
    .we0(resArray1_we0),
    .d0(resArray1_d0),
    .q0(resArray1_q0)
);

run_classificatiobkb #(
    .DataWidth( 32 ),
    .AddressRange( 70 ),
    .AddressWidth( 7 ))
resArray2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(resArray2_address0),
    .ce0(resArray2_ce0),
    .we0(resArray2_we0),
    .d0(resArray2_d0),
    .q0(resArray2_q0)
);

NeuralNetwork_muldEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
NeuralNetwork_muldEe_U0(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(input_r_load_reg_1058),
    .din1(reg_466),
    .ce(1'b1),
    .dout(grp_fu_564_p2)
);

NeuralNetwork_muldEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
NeuralNetwork_muldEe_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_474),
    .din1(reg_466),
    .ce(1'b1),
    .dout(grp_fu_742_p2)
);

NeuralNetwork_muleOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
NeuralNetwork_muleOg_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_466),
    .din1(resArray2_load_2_reg_1255),
    .ce(1'b1),
    .dout(grp_fu_928_p2)
);

NeuralNetwork_macfYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 7 ),
    .dout_WIDTH( 13 ))
NeuralNetwork_macfYi_U3(
    .din0(grp_fu_983_p0),
    .din1(grp_fu_983_p1),
    .din2(grp_fu_983_p2),
    .dout(grp_fu_983_p3)
);

NeuralNetwork_macg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 13 ),
    .dout_WIDTH( 14 ))
NeuralNetwork_macg8j_U4(
    .din0(grp_fu_992_p0),
    .din1(grp_fu_992_p1),
    .din2(grp_fu_992_p2),
    .dout(grp_fu_992_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state4))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_484_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state4)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state4 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_484_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state16))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state13) & (exitcond7_fu_608_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011011 == 1'b0))) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state16)) begin
                ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state16 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011011 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011011 == 1'b0)))) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((1'b1 == ap_CS_fsm_state13) & (exitcond7_fu_608_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp2_exit_iter0_state30))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state26) & (exitcond4_fu_787_p2 == 1'd1))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011011 == 1'b0))) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state30)) begin
                ap_enable_reg_pp2_iter1 <= (ap_condition_pp2_exit_iter0_state30 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011011 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011011 == 1'b0)))) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end else if (((1'b1 == ap_CS_fsm_state26) & (exitcond4_fu_787_p2 == 1'd1))) begin
            ap_enable_reg_pp2_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 8'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state39) & (exitcond_fu_947_p2 == 1'd1))) begin
            ap_return_preg <= max_index_0_i_reg_443;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_0_i1_reg_323 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        i_0_i1_reg_323 <= i_reg_1081;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        i_0_i_reg_378 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        i_0_i_reg_378 <= i_1_reg_1174;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_484_p2 == 1'd1))) begin
        inNeurons_0_i1_reg_312 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten_reg_1020 == 1'd0))) begin
        inNeurons_0_i1_reg_312 <= inNeurons_reg_1053;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (exitcond7_fu_608_p2 == 1'd1))) begin
        inNeurons_0_i6_reg_367 <= 7'd0;
    end else if (((1'b1 == ap_enable_reg_pp1_iter1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten1_reg_1113))) begin
        inNeurons_0_i6_reg_367 <= inNeurons_1_reg_1141;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (exitcond4_fu_787_p2 == 1'd1))) begin
        inNeurons_0_i_reg_422 <= 7'd0;
    end else if (((1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten2_reg_1211))) begin
        inNeurons_0_i_reg_422 <= inNeurons_2_reg_1240;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (exitcond7_fu_608_p2 == 1'd1))) begin
        indvar_flatten1_reg_345 <= 13'd0;
    end else if (((1'b1 == ap_enable_reg_pp1_iter1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten1_reg_1113))) begin
        indvar_flatten1_reg_345 <= indvar_flatten_next1_reg_1117;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (exitcond4_fu_787_p2 == 1'd1))) begin
        indvar_flatten2_reg_400 <= 10'd0;
    end else if (((1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten2_reg_1211))) begin
        indvar_flatten2_reg_400 <= indvar_flatten_next2_reg_1215;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_484_p2 == 1'd1))) begin
        indvar_flatten_reg_290 <= 13'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten_reg_1020 == 1'd0))) begin
        indvar_flatten_reg_290 <= indvar_flatten_next_reg_1024;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        max_0_i_reg_433 <= max_1_max_0_i_fu_969_p3;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        max_0_i_reg_433 <= resArray1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        max_index_0_i_reg_443 <= max_index_max_index_s_fu_976_p3;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        max_index_0_i_reg_443 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        max_index_reg_455 <= i_2_reg_1288;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        max_index_reg_455 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (exitcond_i1_fu_579_p2 == 1'd1))) begin
        outNeurons_0_i1_reg_334 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        outNeurons_0_i1_reg_334 <= outNeurons_1_reg_1103;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        outNeurons_0_i2_reg_279 <= outNeurons_reg_1010;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        outNeurons_0_i2_reg_279 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (exitcond_i_fu_758_p2 == 1'd1))) begin
        outNeurons_0_i_reg_389 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        outNeurons_0_i_reg_389 <= outNeurons_3_reg_1196;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_484_p2 == 1'd1))) begin
        outNeurons_1_i1_reg_301 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten_reg_1020 == 1'd0))) begin
        outNeurons_1_i1_reg_301 <= tmp_6_mid2_v_reg_1036;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (exitcond7_fu_608_p2 == 1'd1))) begin
        outNeurons_1_i3_reg_356 <= 7'd0;
    end else if (((1'b1 == ap_enable_reg_pp1_iter1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten1_reg_1113))) begin
        outNeurons_1_i3_reg_356 <= tmp_12_mid2_v_reg_1129;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (exitcond4_fu_787_p2 == 1'd1))) begin
        outNeurons_1_i_reg_411 <= 4'd0;
    end else if (((1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten2_reg_1211))) begin
        outNeurons_1_i_reg_411 <= tmp_23_mid2_v_reg_1228;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond_flatten_reg_1020 <= exitcond_flatten_reg_1020;
        ap_reg_pp0_iter1_tmp_6_mid2_v_reg_1036 <= tmp_6_mid2_v_reg_1036;
        ap_reg_pp0_iter2_exitcond_flatten_reg_1020 <= ap_reg_pp0_iter1_exitcond_flatten_reg_1020;
        exitcond_flatten_reg_1020 <= exitcond_flatten_fu_501_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_exitcond_flatten1_reg_1113 <= exitcond_flatten1_reg_1113;
        ap_reg_pp1_iter1_tmp_12_mid2_v_reg_1129 <= tmp_12_mid2_v_reg_1129;
        ap_reg_pp1_iter2_exitcond_flatten1_reg_1113 <= ap_reg_pp1_iter1_exitcond_flatten1_reg_1113;
        ap_reg_pp1_iter2_tmp_12_mid2_v_reg_1129 <= ap_reg_pp1_iter1_tmp_12_mid2_v_reg_1129;
        exitcond_flatten1_reg_1113 <= exitcond_flatten1_fu_670_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp2_iter1_exitcond_flatten2_reg_1211 <= exitcond_flatten2_reg_1211;
        ap_reg_pp2_iter1_tmp_23_mid2_v_reg_1228 <= tmp_23_mid2_v_reg_1228;
        ap_reg_pp2_iter2_exitcond_flatten2_reg_1211 <= ap_reg_pp2_iter1_exitcond_flatten2_reg_1211;
        ap_reg_pp2_iter2_tmp_23_mid2_v_reg_1228 <= ap_reg_pp2_iter1_tmp_23_mid2_v_reg_1228;
        exitcond_flatten2_reg_1211 <= exitcond_flatten2_fu_828_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        i_1_reg_1174 <= i_1_fu_764_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state39) & (1'd0 == exitcond_fu_947_p2))) begin
        i_2_reg_1288 <= i_2_fu_958_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_reg_1081 <= i_fu_585_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten_fu_501_p2))) begin
        inNeurons_0_i1_mid2_reg_1029 <= inNeurons_0_i1_mid2_fu_519_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten1_fu_670_p2))) begin
        inNeurons_0_i6_mid2_reg_1122 <= inNeurons_0_i6_mid2_fu_688_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten2_fu_828_p2))) begin
        inNeurons_0_i_mid2_reg_1220 <= inNeurons_0_i_mid2_fu_846_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten1_reg_1113))) begin
        inNeurons_1_reg_1141 <= inNeurons_1_fu_719_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'd0 == exitcond_flatten2_reg_1211))) begin
        inNeurons_2_reg_1240 <= inNeurons_2_fu_911_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1020 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0))) begin
        inNeurons_reg_1053 <= inNeurons_fu_555_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        indvar_flatten_next1_reg_1117 <= indvar_flatten_next1_fu_676_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        indvar_flatten_next2_reg_1215 <= indvar_flatten_next2_fu_834_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        indvar_flatten_next_reg_1024 <= indvar_flatten_next_fu_507_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten_reg_1020 == 1'd0))) begin
        input_r_load_reg_1058 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        max_1_reg_1293 <= resArray1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        max_index_cast_reg_1275[3 : 0] <= max_index_cast_fu_943_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        outNeurons_1_reg_1103 <= outNeurons_1_fu_614_p2;
        tmp_s_reg_1094[6 : 0] <= tmp_s_fu_604_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        outNeurons_3_reg_1196 <= outNeurons_3_fu_793_p2;
        tmp_17_reg_1187[3 : 0] <= tmp_17_fu_783_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        outNeurons_reg_1010 <= outNeurons_fu_490_p2;
        tmp_reg_1001[6 : 0] <= tmp_fu_479_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten_reg_1020 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten1_reg_1113)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp2_iter1_exitcond_flatten2_reg_1211)))) begin
        reg_466 <= weights_s_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state27))) begin
        reg_470 <= bias_s_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten1_reg_1113)) | (1'b1 == ap_CS_fsm_state38))) begin
        reg_474 <= resArray1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_exitcond_flatten_reg_1020))) begin
        resArray1_addr_1_reg_1073 <= tmp_6_mid2_fu_569_p1;
        tmp_8_reg_1068 <= grp_fu_564_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (1'd0 == exitcond_i1_fu_579_p2))) begin
        resArray1_addr_2_reg_1086 <= tmp_7_fu_591_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp2_iter2_exitcond_flatten2_reg_1211))) begin
        resArray1_addr_5_reg_1270[3 : 0] <= tmp_23_mid2_fu_933_p1[3 : 0];
        tmp_22_reg_1265 <= grp_fu_928_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter2_exitcond_flatten1_reg_1113))) begin
        resArray2_addr_1_reg_1166 <= tmp_12_mid2_fu_748_p1;
        tmp_13_reg_1161 <= grp_fu_742_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (1'd0 == exitcond_i_fu_758_p2))) begin
        resArray2_addr_2_reg_1179 <= tmp_15_fu_770_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp2_iter1_exitcond_flatten2_reg_1211))) begin
        resArray2_load_2_reg_1255 <= resArray2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten1_reg_1113))) begin
        tmp23_cast_mid2_v_reg_1136 <= tmp23_cast_mid2_v_fu_713_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten1_fu_670_p2))) begin
        tmp_12_mid2_v_reg_1129 <= tmp_12_mid2_v_fu_702_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'd0 == exitcond_flatten2_fu_828_p2))) begin
        tmp_23_mid2_v_reg_1228 <= tmp_23_mid2_v_fu_860_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten2_reg_1211))) begin
        tmp_49_i1_reg_1235 <= tmp_49_i1_fu_905_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        tmp_60_i1_reg_1206[15 : 2] <= tmp_60_i1_fu_818_p2[15 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond_flatten_fu_501_p2))) begin
        tmp_6_mid2_v_reg_1036 <= tmp_6_mid2_v_fu_533_p3;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_501_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten1_fu_670_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state16 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state16 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten2_fu_828_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state30 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state30 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state39) & (exitcond_fu_947_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1) & (1'b0 == ap_enable_reg_pp1_iter2) & (1'b0 == ap_enable_reg_pp1_iter3))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp2_iter0) & (1'b0 == ap_enable_reg_pp2_iter1) & (1'b0 == ap_enable_reg_pp2_iter2) & (1'b0 == ap_enable_reg_pp2_iter3))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) & (exitcond_fu_947_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) & (exitcond_fu_947_p2 == 1'd1))) begin
        ap_return = max_index_0_i_reg_443;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        bias_s_address0 = tmp_57_i1_cast_fu_809_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        bias_s_address0 = tmp_57_i_cast_fu_630_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        bias_s_address0 = tmp_fu_479_p1;
    end else begin
        bias_s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state26))) begin
        bias_s_ce0 = 1'b1;
    end else begin
        bias_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten_reg_1020 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        inNeurons_0_i1_phi_fu_316_p4 = inNeurons_reg_1053;
    end else begin
        inNeurons_0_i1_phi_fu_316_p4 = inNeurons_0_i1_reg_312;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten1_reg_1113) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        inNeurons_0_i6_phi_fu_371_p4 = inNeurons_1_reg_1141;
    end else begin
        inNeurons_0_i6_phi_fu_371_p4 = inNeurons_0_i6_reg_367;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'd0 == exitcond_flatten2_reg_1211) & (ap_block_pp2_stage0_flag00000000 == 1'b0))) begin
        inNeurons_0_i_phi_fu_426_p4 = inNeurons_2_reg_1240;
    end else begin
        inNeurons_0_i_phi_fu_426_p4 = inNeurons_0_i_reg_422;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten1_reg_1113) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        indvar_flatten1_phi_fu_349_p4 = indvar_flatten_next1_reg_1117;
    end else begin
        indvar_flatten1_phi_fu_349_p4 = indvar_flatten1_reg_345;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'd0 == exitcond_flatten2_reg_1211) & (ap_block_pp2_stage0_flag00000000 == 1'b0))) begin
        indvar_flatten2_phi_fu_404_p4 = indvar_flatten_next2_reg_1215;
    end else begin
        indvar_flatten2_phi_fu_404_p4 = indvar_flatten2_reg_400;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten_reg_1020 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        indvar_flatten_phi_fu_294_p4 = indvar_flatten_next_reg_1024;
    end else begin
        indvar_flatten_phi_fu_294_p4 = indvar_flatten_reg_290;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_flatten_reg_1020 == 1'd0) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        outNeurons_1_i1_phi_fu_305_p4 = tmp_6_mid2_v_reg_1036;
    end else begin
        outNeurons_1_i1_phi_fu_305_p4 = outNeurons_1_i1_reg_301;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten1_reg_1113) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        outNeurons_1_i3_phi_fu_360_p4 = tmp_12_mid2_v_reg_1129;
    end else begin
        outNeurons_1_i3_phi_fu_360_p4 = outNeurons_1_i3_reg_356;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'd0 == exitcond_flatten2_reg_1211) & (ap_block_pp2_stage0_flag00000000 == 1'b0))) begin
        outNeurons_1_i_phi_fu_415_p4 = tmp_23_mid2_v_reg_1228;
    end else begin
        outNeurons_1_i_phi_fu_415_p4 = outNeurons_1_i_reg_411;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        resArray1_address0 = tmp_24_fu_953_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        resArray1_address0 = 7'd0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter3))) begin
        resArray1_address0 = resArray1_addr_5_reg_1270;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter2) & (ap_block_pp2_stage1_flag00000000 == 1'b0))) begin
        resArray1_address0 = tmp_23_mid2_fu_933_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        resArray1_address0 = tmp_17_reg_1187;
    end else if (((1'b1 == ap_enable_reg_pp1_iter1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        resArray1_address0 = tmp_10_fu_727_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        resArray1_address0 = resArray1_addr_2_reg_1086;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        resArray1_address0 = tmp_7_fu_591_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        resArray1_address0 = resArray1_addr_1_reg_1073;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        resArray1_address0 = tmp_6_mid2_fu_569_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        resArray1_address0 = tmp_reg_1001;
    end else begin
        resArray1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_enable_reg_pp1_iter1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0)) | (1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_block_pp2_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter2)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter3)) | (1'b1 == ap_CS_fsm_state37))) begin
        resArray1_ce0 = 1'b1;
    end else begin
        resArray1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter3))) begin
        resArray1_d0 = tmp_23_fu_937_p2;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        resArray1_d0 = tmp_18_fu_824_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        resArray1_d0 = 32'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        resArray1_d0 = tmp_1_fu_573_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        resArray1_d0 = tmp_4_fu_496_p1;
    end else begin
        resArray1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (1'd0 == ap_reg_pp0_iter2_exitcond_flatten_reg_1020)) | ((1'b1 == ap_CS_fsm_state12) & (1'd1 == tmp_2_fu_596_p3)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp2_iter2_exitcond_flatten2_reg_1211) & (1'b1 == ap_enable_reg_pp2_iter3)))) begin
        resArray1_we0 = 1'b1;
    end else begin
        resArray1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00000000 == 1'b0))) begin
        resArray2_address0 = tmp_19_fu_916_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        resArray2_address0 = resArray2_addr_2_reg_1179;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        resArray2_address0 = tmp_15_fu_770_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        resArray2_address0 = resArray2_addr_1_reg_1166;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage1_flag00000000 == 1'b0))) begin
        resArray2_address0 = tmp_12_mid2_fu_748_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        resArray2_address0 = tmp_s_reg_1094;
    end else begin
        resArray2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state25) | ((1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_block_pp1_stage1_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3)))) begin
        resArray2_ce0 = 1'b1;
    end else begin
        resArray2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        resArray2_d0 = 32'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3))) begin
        resArray2_d0 = tmp_14_fu_752_p2;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        resArray2_d0 = tmp_6_fu_665_p1;
    end else begin
        resArray2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp1_iter2_exitcond_flatten1_reg_1113) & (1'b1 == ap_enable_reg_pp1_iter3)) | ((1'b1 == ap_CS_fsm_state25) & (1'd1 == tmp_16_fu_775_p3)))) begin
        resArray2_we0 = 1'b1;
    end else begin
        resArray2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00000000 == 1'b0))) begin
        weights_s_address0 = tmp_49_i20_cast_fu_920_p1;
    end else if (((1'b1 == ap_enable_reg_pp1_iter1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        weights_s_address0 = tmp_49_i9_cast_fu_734_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00000000 == 1'b0))) begin
        weights_s_address0 = tmp_49_i_cast_fu_551_p1;
    end else begin
        weights_s_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp2_iter1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011001 == 1'b0)))) begin
        weights_s_ce0 = 1'b1;
    end else begin
        weights_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_484_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_block_pp0_stage0_flag00011011 == 1'b0) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_501_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_501_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_block_pp0_stage1_flag00011011 == 1'b0) & ~((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (exitcond_i1_fu_579_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (exitcond7_fu_608_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (((ap_block_pp1_stage0_flag00011011 == 1'b0) & ~((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (ap_enable_reg_pp1_iter2 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (exitcond_flatten1_fu_670_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter3) & (ap_enable_reg_pp1_iter2 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (exitcond_flatten1_fu_670_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((ap_block_pp1_stage1_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (exitcond_i_fu_758_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (exitcond4_fu_787_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (((ap_block_pp2_stage0_flag00011011 == 1'b0) & ~((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter3) & (ap_enable_reg_pp2_iter2 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (ap_block_pp2_stage0_flag00011011 == 1'b0) & (exitcond_flatten2_fu_828_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_block_pp2_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp2_iter3) & (ap_enable_reg_pp2_iter2 == 1'b0)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (ap_block_pp2_stage0_flag00011011 == 1'b0) & (exitcond_flatten2_fu_828_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((ap_block_pp2_stage1_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            if (((1'b1 == ap_CS_fsm_state39) & (exitcond_fu_947_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd26];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp2_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign exitcond1_fu_484_p2 = ((outNeurons_0_i2_reg_279 == 7'd70) ? 1'b1 : 1'b0);

assign exitcond2_fu_513_p2 = ((inNeurons_0_i1_phi_fu_316_p4 == 7'd80) ? 1'b1 : 1'b0);

assign exitcond3_fu_682_p2 = ((inNeurons_0_i6_phi_fu_371_p4 == 7'd70) ? 1'b1 : 1'b0);

assign exitcond4_fu_787_p2 = ((outNeurons_0_i_reg_389 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond5_fu_840_p2 = ((inNeurons_0_i_phi_fu_426_p4 == 7'd70) ? 1'b1 : 1'b0);

assign exitcond7_fu_608_p2 = ((outNeurons_0_i1_reg_334 == 7'd70) ? 1'b1 : 1'b0);

assign exitcond_flatten1_fu_670_p2 = ((indvar_flatten1_phi_fu_349_p4 == 13'd4900) ? 1'b1 : 1'b0);

assign exitcond_flatten2_fu_828_p2 = ((indvar_flatten2_phi_fu_404_p4 == 10'd700) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_501_p2 = ((indvar_flatten_phi_fu_294_p4 == 13'd5600) ? 1'b1 : 1'b0);

assign exitcond_fu_947_p2 = ((max_index_reg_455 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond_i1_fu_579_p2 = ((i_0_i1_reg_323 == 7'd70) ? 1'b1 : 1'b0);

assign exitcond_i_fu_758_p2 = ((i_0_i_reg_378 == 7'd70) ? 1'b1 : 1'b0);

assign grp_fu_983_p0 = grp_fu_983_p00;

assign grp_fu_983_p00 = inNeurons_0_i1_mid2_reg_1029;

assign grp_fu_983_p1 = 13'd70;

assign grp_fu_983_p2 = grp_fu_983_p20;

assign grp_fu_983_p20 = tmp_6_mid2_v_reg_1036;

assign grp_fu_992_p0 = grp_fu_992_p00;

assign grp_fu_992_p00 = inNeurons_0_i6_mid2_reg_1122;

assign grp_fu_992_p1 = 14'd70;

assign grp_fu_992_p2 = grp_fu_992_p20;

assign grp_fu_992_p20 = tmp23_cast_mid2_v_reg_1136;

assign i_1_fu_764_p2 = (i_0_i_reg_378 + 7'd1);

assign i_2_fu_958_p2 = (max_index_reg_455 + 4'd1);

assign i_fu_585_p2 = (i_0_i1_reg_323 + 7'd1);

assign inNeurons_0_i1_mid2_fu_519_p3 = ((exitcond2_fu_513_p2[0:0] === 1'b1) ? 7'd0 : inNeurons_0_i1_phi_fu_316_p4);

assign inNeurons_0_i6_mid2_fu_688_p3 = ((exitcond3_fu_682_p2[0:0] === 1'b1) ? 7'd0 : inNeurons_0_i6_phi_fu_371_p4);

assign inNeurons_0_i_mid2_fu_846_p3 = ((exitcond5_fu_840_p2[0:0] === 1'b1) ? 7'd0 : inNeurons_0_i_phi_fu_426_p4);

assign inNeurons_1_fu_719_p2 = (inNeurons_0_i6_mid2_reg_1122 + 7'd1);

assign inNeurons_2_fu_911_p2 = (inNeurons_0_i_mid2_reg_1220 + 7'd1);

assign inNeurons_fu_555_p2 = (inNeurons_0_i1_mid2_reg_1029 + 7'd1);

assign indvar_flatten_next1_fu_676_p2 = (indvar_flatten1_phi_fu_349_p4 + 13'd1);

assign indvar_flatten_next2_fu_834_p2 = (indvar_flatten2_phi_fu_404_p4 + 10'd1);

assign indvar_flatten_next_fu_507_p2 = (indvar_flatten_phi_fu_294_p4 + 13'd1);

assign input_r_address0 = tmp_9_fu_544_p1;

assign max_1_max_0_i_fu_969_p3 = ((tmp_25_fu_964_p2[0:0] === 1'b1) ? max_1_reg_1293 : max_0_i_reg_433);

assign max_index_cast_fu_943_p1 = max_index_reg_455;

assign max_index_max_index_s_fu_976_p3 = ((tmp_25_fu_964_p2[0:0] === 1'b1) ? max_index_cast_reg_1275 : max_index_0_i_reg_443);

assign neuronIndex_fu_895_p2 = (p_shl1_i15_cast_fu_891_p1 + p_shl_i_fu_877_p3);

assign neuron_assign_1_fu_799_p1 = outNeurons_0_i_reg_389;

assign neuron_assign_fu_620_p1 = outNeurons_0_i1_reg_334;

assign outNeurons_1_fu_614_p2 = (outNeurons_0_i1_reg_334 + 7'd1);

assign outNeurons_2_fu_696_p2 = (outNeurons_1_i3_phi_fu_360_p4 + 7'd1);

assign outNeurons_3_fu_793_p2 = (outNeurons_0_i_reg_389 + 4'd1);

assign outNeurons_4_fu_854_p2 = (outNeurons_1_i_phi_fu_415_p4 + 4'd1);

assign outNeurons_fu_490_p2 = (outNeurons_0_i2_reg_279 + 7'd1);

assign outNeurons_s_fu_527_p2 = (outNeurons_1_i1_phi_fu_305_p4 + 7'd1);

assign p_shl1_cast_fu_655_p1 = $signed(p_shl1_fu_647_p3);

assign p_shl1_fu_647_p3 = {{reg_470}, {1'd0}};

assign p_shl1_i15_cast_fu_891_p1 = p_shl1_i_fu_884_p3;

assign p_shl1_i_fu_884_p3 = {{inNeurons_0_i_mid2_reg_1220}, {1'd0}};

assign p_shl_cast_fu_643_p1 = $signed(p_shl_fu_635_p3);

assign p_shl_fu_635_p3 = {{reg_470}, {3'd0}};

assign p_shl_i_fu_877_p3 = {{inNeurons_0_i_mid2_reg_1220}, {3'd0}};

assign tmp23_cast_mid2_v_fu_713_p2 = ($signed(tmp23_cast_mid2_v_v_fu_710_p1) + $signed(13'd5600));

assign tmp23_cast_mid2_v_v_fu_710_p1 = tmp_12_mid2_v_reg_1129;

assign tmp2_mid2_fu_871_p2 = ($signed(tmp2_mid2_v_fu_868_p1) + $signed(14'd10500));

assign tmp2_mid2_v_fu_868_p1 = tmp_23_mid2_v_reg_1228;

assign tmp_10_fu_727_p1 = inNeurons_0_i6_mid2_reg_1122;

assign tmp_12_mid2_fu_748_p1 = ap_reg_pp1_iter2_tmp_12_mid2_v_reg_1129;

assign tmp_12_mid2_v_fu_702_p3 = ((exitcond3_fu_682_p2[0:0] === 1'b1) ? outNeurons_2_fu_696_p2 : outNeurons_1_i3_phi_fu_360_p4);

assign tmp_14_fu_752_p2 = (resArray2_q0 + tmp_13_reg_1161);

assign tmp_15_fu_770_p1 = i_0_i_reg_378;

assign tmp_16_fu_775_p3 = resArray2_q0[32'd31];

assign tmp_17_fu_783_p1 = outNeurons_0_i_reg_389;

assign tmp_18_fu_824_p1 = $signed(tmp_60_i1_reg_1206);

assign tmp_19_fu_916_p1 = inNeurons_0_i_mid2_reg_1220;

assign tmp_1_fu_573_p2 = (resArray1_q0 + tmp_8_reg_1068);

assign tmp_23_fu_937_p2 = (tmp_22_reg_1265 + resArray1_q0);

assign tmp_23_mid2_fu_933_p1 = ap_reg_pp2_iter2_tmp_23_mid2_v_reg_1228;

assign tmp_23_mid2_v_fu_860_p3 = ((exitcond5_fu_840_p2[0:0] === 1'b1) ? outNeurons_4_fu_854_p2 : outNeurons_1_i_phi_fu_415_p4);

assign tmp_24_fu_953_p1 = max_index_reg_455;

assign tmp_25_fu_964_p2 = (($signed(max_1_reg_1293) > $signed(max_0_i_reg_433)) ? 1'b1 : 1'b0);

assign tmp_2_fu_596_p3 = resArray1_q0[32'd31];

assign tmp_46_i17_cast_fu_901_p1 = neuronIndex_fu_895_p2;

assign tmp_49_i1_fu_905_p2 = (tmp_46_i17_cast_fu_901_p1 + tmp2_mid2_fu_871_p2);

assign tmp_49_i20_cast_fu_920_p1 = tmp_49_i1_reg_1235;

assign tmp_49_i9_cast_fu_734_p1 = grp_fu_992_p3;

assign tmp_49_i_cast_fu_551_p1 = grp_fu_983_p3;

assign tmp_4_fu_496_p1 = $signed(bias_s_q0);

assign tmp_57_i1_cast_fu_809_p1 = tmp_57_i1_fu_803_p2;

assign tmp_57_i1_fu_803_p2 = ($signed(neuron_assign_1_fu_799_p1) + $signed(8'd140));

assign tmp_57_i_cast_fu_630_p1 = tmp_57_i_fu_624_p2;

assign tmp_57_i_fu_624_p2 = (neuron_assign_fu_620_p1 + 8'd70);

assign tmp_60_i1_fu_818_p0 = reg_470;

assign tmp_60_i1_fu_818_p2 = ($signed(tmp_60_i1_fu_818_p0) * $signed('h64));

assign tmp_60_i_fu_659_p2 = ($signed(p_shl_cast_fu_643_p1) + $signed(p_shl1_cast_fu_655_p1));

assign tmp_6_fu_665_p1 = $signed(tmp_60_i_fu_659_p2);

assign tmp_6_mid2_fu_569_p1 = ap_reg_pp0_iter1_tmp_6_mid2_v_reg_1036;

assign tmp_6_mid2_v_fu_533_p3 = ((exitcond2_fu_513_p2[0:0] === 1'b1) ? outNeurons_s_fu_527_p2 : outNeurons_1_i1_phi_fu_305_p4);

assign tmp_7_fu_591_p1 = i_0_i1_reg_323;

assign tmp_9_fu_544_p1 = inNeurons_0_i1_mid2_reg_1029;

assign tmp_fu_479_p1 = outNeurons_0_i2_reg_279;

assign tmp_s_fu_604_p1 = outNeurons_0_i1_reg_334;

always @ (posedge ap_clk) begin
    tmp_reg_1001[31:7] <= 25'b0000000000000000000000000;
    tmp_s_reg_1094[31:7] <= 25'b0000000000000000000000000;
    tmp_17_reg_1187[31:4] <= 28'b0000000000000000000000000000;
    tmp_60_i1_reg_1206[1:0] <= 2'b00;
    resArray1_addr_5_reg_1270[6:4] <= 3'b000;
    max_index_cast_reg_1275[7:4] <= 4'b0000;
end

endmodule //run_classification
